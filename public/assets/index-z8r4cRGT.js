(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Tx="178",Qc={ROTATE:0,DOLLY:1,PAN:2},Wc={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},iP=0,e2=1,rP=2,x3=1,sP=2,ua=3,Ma=0,lr=1,Ls=2,wo=0,Jc=1,t2=2,n2=3,i2=4,aP=5,ml=100,oP=101,lP=102,cP=103,uP=104,fP=200,hP=201,dP=202,pP=203,Sv=204,Mv=205,mP=206,gP=207,_P=208,vP=209,xP=210,yP=211,SP=212,MP=213,EP=214,Ev=0,Tv=1,wv=2,ou=3,bv=4,Av=5,Rv=6,Cv=7,y3=0,TP=1,wP=2,bo=0,bP=1,AP=2,RP=3,CP=4,PP=5,LP=6,IP=7,r2="attached",DP="detached",S3=300,lu=301,cu=302,Pv=303,Lv=304,km=306,uu=1e3,Eo=1001,dm=1002,Xi=1003,M3=1004,Vf=1005,Wi=1006,Vp=1007,ga=1008,ks=1009,E3=1010,T3=1011,oh=1012,wx=1013,Pl=1014,us=1015,Eh=1016,bx=1017,Ax=1018,lh=1020,w3=35902,b3=1021,A3=1022,$r=1023,ch=1026,uh=1027,Rx=1028,Cx=1029,R3=1030,Px=1031,Lx=1033,Gp=33776,Wp=33777,Xp=33778,$p=33779,Iv=35840,Dv=35841,Nv=35842,Uv=35843,Ov=36196,Fv=37492,kv=37496,Bv=37808,zv=37809,Hv=37810,Vv=37811,Gv=37812,Wv=37813,Xv=37814,$v=37815,jv=37816,qv=37817,Yv=37818,Kv=37819,Zv=37820,Qv=37821,jp=36492,Jv=36494,e1=36495,C3=36283,t1=36284,n1=36285,i1=36286,fh=2300,hh=2301,Og=2302,s2=2400,a2=2401,o2=2402,NP=2500,UP=0,P3=1,r1=2,OP=3200,FP=3201,L3=0,kP=1,yo="",Xn="srgb",ji="srgb-linear",pm="linear",dn="srgb",cc=7680,l2=519,BP=512,zP=513,HP=514,I3=515,VP=516,GP=517,WP=518,XP=519,s1=35044,c2="300 es",_a=2e3,mm=2001;let kl=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){const n=this._listeners;return n===void 0?!1:n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){const n=this._listeners;if(n===void 0)return;const r=n[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const n=t[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}};const Ri=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let u2=1234567;const Zf=Math.PI/180,fu=180/Math.PI;function ps(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ri[i&255]+Ri[i>>8&255]+Ri[i>>16&255]+Ri[i>>24&255]+"-"+Ri[e&255]+Ri[e>>8&255]+"-"+Ri[e>>16&15|64]+Ri[e>>24&255]+"-"+Ri[t&63|128]+Ri[t>>8&255]+"-"+Ri[t>>16&255]+Ri[t>>24&255]+Ri[n&255]+Ri[n>>8&255]+Ri[n>>16&255]+Ri[n>>24&255]).toLowerCase()}function Wt(i,e,t){return Math.max(e,Math.min(t,i))}function Ix(i,e){return(i%e+e)%e}function $P(i,e,t,n,r){return n+(i-e)*(r-n)/(t-e)}function jP(i,e,t){return i!==e?(t-i)/(e-i):0}function Qf(i,e,t){return(1-t)*i+t*e}function qP(i,e,t,n){return Qf(i,e,1-Math.exp(-t*n))}function YP(i,e=1){return e-Math.abs(Ix(i,e*2)-e)}function KP(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*(3-2*i))}function ZP(i,e,t){return i<=e?0:i>=t?1:(i=(i-e)/(t-e),i*i*i*(i*(i*6-15)+10))}function QP(i,e){return i+Math.floor(Math.random()*(e-i+1))}function JP(i,e){return i+Math.random()*(e-i)}function e4(i){return i*(.5-Math.random())}function t4(i){i!==void 0&&(u2=i);let e=u2+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function n4(i){return i*Zf}function i4(i){return i*fu}function r4(i){return(i&i-1)===0&&i!==0}function s4(i){return Math.pow(2,Math.ceil(Math.log(i)/Math.LN2))}function a4(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function o4(i,e,t,n,r){const s=Math.cos,o=Math.sin,c=s(t/2),u=o(t/2),f=s((e+n)/2),h=o((e+n)/2),p=s((e-n)/2),m=o((e-n)/2),v=s((n-e)/2),y=o((n-e)/2);switch(r){case"XYX":i.set(c*h,u*p,u*m,c*f);break;case"YZY":i.set(u*m,c*h,u*p,c*f);break;case"ZXZ":i.set(u*p,u*m,c*h,c*f);break;case"XZX":i.set(c*h,u*y,u*v,c*f);break;case"YXY":i.set(u*v,c*h,u*y,c*f);break;case"ZYZ":i.set(u*y,u*v,c*h,c*f);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function ls(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function ln(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}const D3={DEG2RAD:Zf,RAD2DEG:fu,generateUUID:ps,clamp:Wt,euclideanModulo:Ix,mapLinear:$P,inverseLerp:jP,lerp:Qf,damp:qP,pingpong:YP,smoothstep:KP,smootherstep:ZP,randInt:QP,randFloat:JP,randFloatSpread:e4,seededRandom:t4,degToRad:n4,radToDeg:i4,isPowerOfTwo:r4,ceilPowerOfTwo:s4,floorPowerOfTwo:a4,setQuaternionFromProperEuler:o4,normalize:ln,denormalize:ls};let Nt=class N3{constructor(e=0,t=0){N3.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Wt(this.x,e.x,t.x),this.y=Wt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=Wt(this.x,e,t),this.y=Wt(this.y,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Wt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Wt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Bs=class{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,c){let u=n[r+0],f=n[r+1],h=n[r+2],p=n[r+3];const m=s[o+0],v=s[o+1],y=s[o+2],S=s[o+3];if(c===0){e[t+0]=u,e[t+1]=f,e[t+2]=h,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=S;return}if(p!==S||u!==m||f!==v||h!==y){let _=1-c;const g=u*m+f*v+h*y+p*S,b=g>=0?1:-1,E=1-g*g;if(E>Number.EPSILON){const L=Math.sqrt(E),C=Math.atan2(L,g*b);_=Math.sin(_*C)/L,c=Math.sin(c*C)/L}const T=c*b;if(u=u*_+m*T,f=f*_+v*T,h=h*_+y*T,p=p*_+S*T,_===1-c){const L=1/Math.sqrt(u*u+f*f+h*h+p*p);u*=L,f*=L,h*=L,p*=L}}e[t]=u,e[t+1]=f,e[t+2]=h,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,r,s,o){const c=n[r],u=n[r+1],f=n[r+2],h=n[r+3],p=s[o],m=s[o+1],v=s[o+2],y=s[o+3];return e[t]=c*y+h*p+u*v-f*m,e[t+1]=u*y+h*m+f*p-c*v,e[t+2]=f*y+h*v+c*m-u*p,e[t+3]=h*y-c*p-u*m-f*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,o=e._order,c=Math.cos,u=Math.sin,f=c(n/2),h=c(r/2),p=c(s/2),m=u(n/2),v=u(r/2),y=u(s/2);switch(o){case"XYZ":this._x=m*h*p+f*v*y,this._y=f*v*p-m*h*y,this._z=f*h*y+m*v*p,this._w=f*h*p-m*v*y;break;case"YXZ":this._x=m*h*p+f*v*y,this._y=f*v*p-m*h*y,this._z=f*h*y-m*v*p,this._w=f*h*p+m*v*y;break;case"ZXY":this._x=m*h*p-f*v*y,this._y=f*v*p+m*h*y,this._z=f*h*y+m*v*p,this._w=f*h*p-m*v*y;break;case"ZYX":this._x=m*h*p-f*v*y,this._y=f*v*p+m*h*y,this._z=f*h*y-m*v*p,this._w=f*h*p+m*v*y;break;case"YZX":this._x=m*h*p+f*v*y,this._y=f*v*p+m*h*y,this._z=f*h*y-m*v*p,this._w=f*h*p-m*v*y;break;case"XZY":this._x=m*h*p-f*v*y,this._y=f*v*p-m*h*y,this._z=f*h*y+m*v*p,this._w=f*h*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],c=t[5],u=t[9],f=t[2],h=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(h-u)*v,this._y=(s-f)*v,this._z=(o-r)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(h-u)/v,this._x=.25*v,this._y=(r+o)/v,this._z=(s+f)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-f)/v,this._x=(r+o)/v,this._y=.25*v,this._z=(u+h)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(o-r)/v,this._x=(s+f)/v,this._y=(u+h)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<1e-8?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Wt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,c=t._x,u=t._y,f=t._z,h=t._w;return this._x=n*h+o*c+r*f-s*u,this._y=r*h+o*u+s*c-n*f,this._z=s*h+o*f+n*u-r*c,this._w=o*h-n*c-r*u-s*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let c=o*e._w+n*e._x+r*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*o+t*this._w,this._x=v*n+t*this._x,this._y=v*r+t*this._y,this._z=v*s+t*this._z,this.normalize(),this}const f=Math.sqrt(u),h=Math.atan2(f,c),p=Math.sin((1-t)*h)/f,m=Math.sin(t*h)/f;return this._w=o*p+this._w*m,this._x=n*p+this._x*m,this._y=r*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},he=class U3{constructor(e=0,t=0,n=0){U3.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(f2.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(f2.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,c=e.z,u=e.w,f=2*(o*r-c*n),h=2*(c*t-s*r),p=2*(s*n-o*t);return this.x=t+u*f+o*p-c*h,this.y=n+u*h+c*f-s*p,this.z=r+u*p+s*h-o*f,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Wt(this.x,e.x,t.x),this.y=Wt(this.y,e.y,t.y),this.z=Wt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=Wt(this.x,e,t),this.y=Wt(this.y,e,t),this.z=Wt(this.z,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Wt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,c=t.y,u=t.z;return this.x=r*u-s*c,this.y=s*o-n*u,this.z=n*c-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Fg.copy(this).projectOnVector(e),this.sub(Fg)}reflect(e){return this.sub(Fg.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(Wt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const Fg=new he,f2=new Bs;let Gt=class O3{constructor(e,t,n,r,s,o,c,u,f){O3.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,c,u,f)}set(e,t,n,r,s,o,c,u,f){const h=this.elements;return h[0]=e,h[1]=r,h[2]=c,h[3]=t,h[4]=s,h[5]=u,h[6]=n,h[7]=o,h[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],c=n[3],u=n[6],f=n[1],h=n[4],p=n[7],m=n[2],v=n[5],y=n[8],S=r[0],_=r[3],g=r[6],b=r[1],E=r[4],T=r[7],L=r[2],C=r[5],P=r[8];return s[0]=o*S+c*b+u*L,s[3]=o*_+c*E+u*C,s[6]=o*g+c*T+u*P,s[1]=f*S+h*b+p*L,s[4]=f*_+h*E+p*C,s[7]=f*g+h*T+p*P,s[2]=m*S+v*b+y*L,s[5]=m*_+v*E+y*C,s[8]=m*g+v*T+y*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8];return t*o*h-t*c*f-n*s*h+n*c*u+r*s*f-r*o*u}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8],p=h*o-c*f,m=c*u-h*s,v=f*s-o*u,y=t*p+n*m+r*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(r*f-h*n)*S,e[2]=(c*n-r*o)*S,e[3]=m*S,e[4]=(h*t-r*u)*S,e[5]=(r*s-c*t)*S,e[6]=v*S,e[7]=(n*u-f*t)*S,e[8]=(o*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,c){const u=Math.cos(s),f=Math.sin(s);return this.set(n*u,n*f,-n*(u*o+f*c)+o+e,-r*f,r*u,-r*(-f*o+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(kg.makeScale(e,t)),this}rotate(e){return this.premultiply(kg.makeRotation(-e)),this}translate(e,t){return this.premultiply(kg.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const kg=new Gt;function F3(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function dh(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function l4(){const i=dh("canvas");return i.style.display="block",i}const h2={};function eu(i){i in h2||(h2[i]=!0,console.warn(i))}function c4(i,e,t){return new Promise(function(n,r){function s(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:r();break;case i.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}function u4(i){const e=i.elements;e[2]=.5*e[2]+.5*e[3],e[6]=.5*e[6]+.5*e[7],e[10]=.5*e[10]+.5*e[11],e[14]=.5*e[14]+.5*e[15]}function f4(i){const e=i.elements;e[11]===-1?(e[10]=-e[10]-1,e[14]=-e[14]):(e[10]=-e[10],e[14]=-e[14]+1)}const d2=new Gt().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),p2=new Gt().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function h4(){const i={enabled:!0,workingColorSpace:ji,spaces:{},convert:function(r,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===dn&&(r.r=Sa(r.r),r.g=Sa(r.g),r.b=Sa(r.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[s].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===dn&&(r.r=tu(r.r),r.g=tu(r.g),r.b=tu(r.b))),r},workingToColorSpace:function(r,s){return this.convert(r,this.workingColorSpace,s)},colorSpaceToWorking:function(r,s){return this.convert(r,s,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===yo?pm:this.spaces[r].transfer},getLuminanceCoefficients:function(r,s=this.workingColorSpace){return r.fromArray(this.spaces[s].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,s,o){return r.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,s){return eu("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),i.workingToColorSpace(r,s)},toWorkingColorSpace:function(r,s){return eu("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),i.colorSpaceToWorking(r,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],n=[.3127,.329];return i.define({[ji]:{primaries:e,whitePoint:n,transfer:pm,toXYZ:d2,fromXYZ:p2,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Xn},outputColorSpaceConfig:{drawingBufferColorSpace:Xn}},[Xn]:{primaries:e,whitePoint:n,transfer:dn,toXYZ:d2,fromXYZ:p2,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Xn}}}),i}const Zt=h4();function Sa(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function tu(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let uc,d4=class{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let n;if(e instanceof HTMLCanvasElement)n=e;else{uc===void 0&&(uc=dh("canvas")),uc.width=e.width,uc.height=e.height;const r=uc.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),n=uc}return n.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=dh("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Sa(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Sa(t[n]/255)*255):t[n]=Sa(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},p4=0,Dx=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:p4++}),this.uuid=ps(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,c=r.length;o<c;o++)r[o].isDataTexture?s.push(Bg(r[o].image)):s.push(Bg(r[o]))}else s=Bg(r);n.url=s}return t||(e.images[this.uuid]=n),n}};function Bg(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?d4.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let m4=0;const zg=new he;let Oi=class qp extends kl{constructor(e=qp.DEFAULT_IMAGE,t=qp.DEFAULT_MAPPING,n=Eo,r=Eo,s=Wi,o=ga,c=$r,u=ks,f=qp.DEFAULT_ANISOTROPY,h=yo){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:m4++}),this.uuid=ps(),this.name="",this.source=new Dx(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=u,this.offset=new Nt(0,0),this.repeat=new Nt(1,1),this.center=new Nt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Gt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(zg).x}get height(){return this.source.getSize(zg).y}get depth(){return this.source.getSize(zg).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&n&&r.isVector2&&n.isVector2||r&&n&&r.isVector3&&n.isVector3||r&&n&&r.isMatrix3&&n.isMatrix3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==S3)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case uu:e.x=e.x-Math.floor(e.x);break;case Eo:e.x=e.x<0?0:1;break;case dm:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case uu:e.y=e.y-Math.floor(e.y);break;case Eo:e.y=e.y<0?0:1;break;case dm:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};Oi.DEFAULT_IMAGE=null;Oi.DEFAULT_MAPPING=S3;Oi.DEFAULT_ANISOTROPY=1;let un=class k3{constructor(e=0,t=0,n=0,r=1){k3.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const u=e.elements,f=u[0],h=u[4],p=u[8],m=u[1],v=u[5],y=u[9],S=u[2],_=u[6],g=u[10];if(Math.abs(h-m)<.01&&Math.abs(p-S)<.01&&Math.abs(y-_)<.01){if(Math.abs(h+m)<.1&&Math.abs(p+S)<.1&&Math.abs(y+_)<.1&&Math.abs(f+v+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(f+1)/2,T=(v+1)/2,L=(g+1)/2,C=(h+m)/4,P=(p+S)/4,N=(y+_)/4;return E>T&&E>L?E<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(E),r=C/n,s=P/n):T>L?T<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(T),n=C/r,s=N/r):L<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(L),n=P/s,r=N/s),this.set(n,r,s,t),this}let b=Math.sqrt((_-y)*(_-y)+(p-S)*(p-S)+(m-h)*(m-h));return Math.abs(b)<.001&&(b=1),this.x=(_-y)/b,this.y=(p-S)/b,this.z=(m-h)/b,this.w=Math.acos((f+v+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Wt(this.x,e.x,t.x),this.y=Wt(this.y,e.y,t.y),this.z=Wt(this.z,e.z,t.z),this.w=Wt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=Wt(this.x,e,t),this.y=Wt(this.y,e,t),this.z=Wt(this.z,e,t),this.w=Wt(this.w,e,t),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Wt(n,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},g4=class extends kl{constructor(e=1,t=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Wi,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=n.depth,this.scissor=new un(0,0,e,t),this.scissorTest=!1,this.viewport=new un(0,0,e,t);const r={width:e,height:t,depth:n.depth},s=new Oi(r);this.textures=[];const o=n.count;for(let c=0;c<o;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0,this.textures[c].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(e={}){const t={minFilter:Wi,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,n=e.textures.length;t<n;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new Dx(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},Ll=class extends g4{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}},B3=class extends Oi{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Xi,this.minFilter=Xi,this.wrapR=Eo,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}},_4=class extends Oi{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=Xi,this.minFilter=Xi,this.wrapR=Eo,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},Ra=class{constructor(e=new he(1/0,1/0,1/0),t=new he(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ns.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ns.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ns.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,c=s.count;o<c;o++)e.isMesh===!0?e.getVertexPosition(o,ns):ns.fromBufferAttribute(s,o),ns.applyMatrix4(e.matrixWorld),this.expandByPoint(ns);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Ud.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Ud.copy(n.boundingBox)),Ud.applyMatrix4(e.matrixWorld),this.union(Ud)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ns),ns.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(vf),Od.subVectors(this.max,vf),fc.subVectors(e.a,vf),hc.subVectors(e.b,vf),dc.subVectors(e.c,vf),Ka.subVectors(hc,fc),Za.subVectors(dc,hc),Yo.subVectors(fc,dc);let t=[0,-Ka.z,Ka.y,0,-Za.z,Za.y,0,-Yo.z,Yo.y,Ka.z,0,-Ka.x,Za.z,0,-Za.x,Yo.z,0,-Yo.x,-Ka.y,Ka.x,0,-Za.y,Za.x,0,-Yo.y,Yo.x,0];return!Hg(t,fc,hc,dc,Od)||(t=[1,0,0,0,1,0,0,0,1],!Hg(t,fc,hc,dc,Od))?!1:(Fd.crossVectors(Ka,Za),t=[Fd.x,Fd.y,Fd.z],Hg(t,fc,hc,dc,Od))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ns).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ns).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Js[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Js[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Js[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Js[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Js[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Js[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Js[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Js[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Js),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}};const Js=[new he,new he,new he,new he,new he,new he,new he,new he],ns=new he,Ud=new Ra,fc=new he,hc=new he,dc=new he,Ka=new he,Za=new he,Yo=new he,vf=new he,Od=new he,Fd=new he,Ko=new he;function Hg(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Ko.fromArray(i,s);const c=r.x*Math.abs(Ko.x)+r.y*Math.abs(Ko.y)+r.z*Math.abs(Ko.z),u=e.dot(Ko),f=t.dot(Ko),h=n.dot(Ko);if(Math.max(-Math.max(u,f,h),Math.min(u,f,h))>c)return!1}return!0}const v4=new Ra,xf=new he,Vg=new he;let Vs=class{constructor(e=new he,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):v4.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;xf.subVectors(e,this.center);const t=xf.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(xf,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Vg.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(xf.copy(e.center).add(Vg)),this.expandByPoint(xf.copy(e.center).sub(Vg))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}};const ea=new he,Gg=new he,kd=new he,Qa=new he,Wg=new he,Bd=new he,Xg=new he;let Th=class{constructor(e=new he,t=new he(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ea)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ea.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ea.copy(this.origin).addScaledVector(this.direction,t),ea.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Gg.copy(e).add(t).multiplyScalar(.5),kd.copy(t).sub(e).normalize(),Qa.copy(this.origin).sub(Gg);const s=e.distanceTo(t)*.5,o=-this.direction.dot(kd),c=Qa.dot(this.direction),u=-Qa.dot(kd),f=Qa.lengthSq(),h=Math.abs(1-o*o);let p,m,v,y;if(h>0)if(p=o*u-c,m=o*c-u,y=s*h,p>=0)if(m>=-y)if(m<=y){const S=1/h;p*=S,m*=S,v=p*(p+o*m+2*c)+m*(o*p+m+2*u)+f}else m=s,p=Math.max(0,-(o*m+c)),v=-p*p+m*(m+2*u)+f;else m=-s,p=Math.max(0,-(o*m+c)),v=-p*p+m*(m+2*u)+f;else m<=-y?(p=Math.max(0,-(-o*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+f):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+f):(p=Math.max(0,-(o*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+f);else m=o>0?-s:s,p=Math.max(0,-(o*m+c)),v=-p*p+m*(m+2*u)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,p),r&&r.copy(Gg).addScaledVector(kd,m),v}intersectSphere(e,t){ea.subVectors(e.center,this.origin);const n=ea.dot(this.direction),r=ea.dot(ea)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),c=n-o,u=n+o;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,c,u;const f=1/this.direction.x,h=1/this.direction.y,p=1/this.direction.z,m=this.origin;return f>=0?(n=(e.min.x-m.x)*f,r=(e.max.x-m.x)*f):(n=(e.max.x-m.x)*f,r=(e.min.x-m.x)*f),h>=0?(s=(e.min.y-m.y)*h,o=(e.max.y-m.y)*h):(s=(e.max.y-m.y)*h,o=(e.min.y-m.y)*h),n>o||s>r||((s>n||isNaN(n))&&(n=s),(o<r||isNaN(r))&&(r=o),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>r)||((c>n||n!==n)&&(n=c),(u<r||r!==r)&&(r=u),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,ea)!==null}intersectTriangle(e,t,n,r,s){Wg.subVectors(t,e),Bd.subVectors(n,e),Xg.crossVectors(Wg,Bd);let o=this.direction.dot(Xg),c;if(o>0){if(r)return null;c=1}else if(o<0)c=-1,o=-o;else return null;Qa.subVectors(this.origin,e);const u=c*this.direction.dot(Bd.crossVectors(Qa,Bd));if(u<0)return null;const f=c*this.direction.dot(Wg.cross(Qa));if(f<0||u+f>o)return null;const h=-c*Qa.dot(Xg);return h<0?null:this.at(h/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},$t=class a1{constructor(e,t,n,r,s,o,c,u,f,h,p,m,v,y,S,_){a1.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,c,u,f,h,p,m,v,y,S,_)}set(e,t,n,r,s,o,c,u,f,h,p,m,v,y,S,_){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=o,g[9]=c,g[13]=u,g[2]=f,g[6]=h,g[10]=p,g[14]=m,g[3]=v,g[7]=y,g[11]=S,g[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new a1().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/pc.setFromMatrixColumn(e,0).length(),s=1/pc.setFromMatrixColumn(e,1).length(),o=1/pc.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),c=Math.sin(n),u=Math.cos(r),f=Math.sin(r),h=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=o*h,v=o*p,y=c*h,S=c*p;t[0]=u*h,t[4]=-u*p,t[8]=f,t[1]=v+y*f,t[5]=m-S*f,t[9]=-c*u,t[2]=S-m*f,t[6]=y+v*f,t[10]=o*u}else if(e.order==="YXZ"){const m=u*h,v=u*p,y=f*h,S=f*p;t[0]=m+S*c,t[4]=y*c-v,t[8]=o*f,t[1]=o*p,t[5]=o*h,t[9]=-c,t[2]=v*c-y,t[6]=S+m*c,t[10]=o*u}else if(e.order==="ZXY"){const m=u*h,v=u*p,y=f*h,S=f*p;t[0]=m-S*c,t[4]=-o*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=o*h,t[9]=S-m*c,t[2]=-o*f,t[6]=c,t[10]=o*u}else if(e.order==="ZYX"){const m=o*h,v=o*p,y=c*h,S=c*p;t[0]=u*h,t[4]=y*f-v,t[8]=m*f+S,t[1]=u*p,t[5]=S*f+m,t[9]=v*f-y,t[2]=-f,t[6]=c*u,t[10]=o*u}else if(e.order==="YZX"){const m=o*u,v=o*f,y=c*u,S=c*f;t[0]=u*h,t[4]=S-m*p,t[8]=y*p+v,t[1]=p,t[5]=o*h,t[9]=-c*h,t[2]=-f*h,t[6]=v*p+y,t[10]=m-S*p}else if(e.order==="XZY"){const m=o*u,v=o*f,y=c*u,S=c*f;t[0]=u*h,t[4]=-p,t[8]=f*h,t[1]=m*p+S,t[5]=o*h,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*h,t[10]=S*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(x4,e,y4)}lookAt(e,t,n){const r=this.elements;return vr.subVectors(e,t),vr.lengthSq()===0&&(vr.z=1),vr.normalize(),Ja.crossVectors(n,vr),Ja.lengthSq()===0&&(Math.abs(n.z)===1?vr.x+=1e-4:vr.z+=1e-4,vr.normalize(),Ja.crossVectors(n,vr)),Ja.normalize(),zd.crossVectors(vr,Ja),r[0]=Ja.x,r[4]=zd.x,r[8]=vr.x,r[1]=Ja.y,r[5]=zd.y,r[9]=vr.y,r[2]=Ja.z,r[6]=zd.z,r[10]=vr.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],c=n[4],u=n[8],f=n[12],h=n[1],p=n[5],m=n[9],v=n[13],y=n[2],S=n[6],_=n[10],g=n[14],b=n[3],E=n[7],T=n[11],L=n[15],C=r[0],P=r[4],N=r[8],A=r[12],w=r[1],D=r[5],X=r[9],z=r[13],G=r[2],Z=r[6],q=r[10],K=r[14],B=r[3],ie=r[7],oe=r[11],V=r[15];return s[0]=o*C+c*w+u*G+f*B,s[4]=o*P+c*D+u*Z+f*ie,s[8]=o*N+c*X+u*q+f*oe,s[12]=o*A+c*z+u*K+f*V,s[1]=h*C+p*w+m*G+v*B,s[5]=h*P+p*D+m*Z+v*ie,s[9]=h*N+p*X+m*q+v*oe,s[13]=h*A+p*z+m*K+v*V,s[2]=y*C+S*w+_*G+g*B,s[6]=y*P+S*D+_*Z+g*ie,s[10]=y*N+S*X+_*q+g*oe,s[14]=y*A+S*z+_*K+g*V,s[3]=b*C+E*w+T*G+L*B,s[7]=b*P+E*D+T*Z+L*ie,s[11]=b*N+E*X+T*q+L*oe,s[15]=b*A+E*z+T*K+L*V,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],c=e[5],u=e[9],f=e[13],h=e[2],p=e[6],m=e[10],v=e[14],y=e[3],S=e[7],_=e[11],g=e[15];return y*(+s*u*p-r*f*p-s*c*m+n*f*m+r*c*v-n*u*v)+S*(+t*u*v-t*f*m+s*o*m-r*o*v+r*f*h-s*u*h)+_*(+t*f*p-t*c*v-s*o*p+n*o*v+s*c*h-n*f*h)+g*(-r*c*h-t*u*p+t*c*m+r*o*p-n*o*m+n*u*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8],p=e[9],m=e[10],v=e[11],y=e[12],S=e[13],_=e[14],g=e[15],b=p*_*f-S*m*f+S*u*v-c*_*v-p*u*g+c*m*g,E=y*m*f-h*_*f-y*u*v+o*_*v+h*u*g-o*m*g,T=h*S*f-y*p*f+y*c*v-o*S*v-h*c*g+o*p*g,L=y*p*u-h*S*u-y*c*m+o*S*m+h*c*_-o*p*_,C=t*b+n*E+r*T+s*L;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/C;return e[0]=b*P,e[1]=(S*m*s-p*_*s-S*r*v+n*_*v+p*r*g-n*m*g)*P,e[2]=(c*_*s-S*u*s+S*r*f-n*_*f-c*r*g+n*u*g)*P,e[3]=(p*u*s-c*m*s-p*r*f+n*m*f+c*r*v-n*u*v)*P,e[4]=E*P,e[5]=(h*_*s-y*m*s+y*r*v-t*_*v-h*r*g+t*m*g)*P,e[6]=(y*u*s-o*_*s-y*r*f+t*_*f+o*r*g-t*u*g)*P,e[7]=(o*m*s-h*u*s+h*r*f-t*m*f-o*r*v+t*u*v)*P,e[8]=T*P,e[9]=(y*p*s-h*S*s-y*n*v+t*S*v+h*n*g-t*p*g)*P,e[10]=(o*S*s-y*c*s+y*n*f-t*S*f-o*n*g+t*c*g)*P,e[11]=(h*c*s-o*p*s-h*n*f+t*p*f+o*n*v-t*c*v)*P,e[12]=L*P,e[13]=(h*S*r-y*p*r+y*n*m-t*S*m-h*n*_+t*p*_)*P,e[14]=(y*c*r-o*S*r-y*n*u+t*S*u+o*n*_-t*c*_)*P,e[15]=(o*p*r-h*c*r+h*n*u-t*p*u-o*n*m+t*c*m)*P,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,c=e.y,u=e.z,f=s*o,h=s*c;return this.set(f*o+n,f*c-r*u,f*u+r*c,0,f*c+r*u,h*c+n,h*u-r*o,0,f*u-r*c,h*u+r*o,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,c=t._z,u=t._w,f=s+s,h=o+o,p=c+c,m=s*f,v=s*h,y=s*p,S=o*h,_=o*p,g=c*p,b=u*f,E=u*h,T=u*p,L=n.x,C=n.y,P=n.z;return r[0]=(1-(S+g))*L,r[1]=(v+T)*L,r[2]=(y-E)*L,r[3]=0,r[4]=(v-T)*C,r[5]=(1-(m+g))*C,r[6]=(_+b)*C,r[7]=0,r[8]=(y+E)*P,r[9]=(_-b)*P,r[10]=(1-(m+S))*P,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=pc.set(r[0],r[1],r[2]).length();const o=pc.set(r[4],r[5],r[6]).length(),c=pc.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],is.copy(this);const f=1/s,h=1/o,p=1/c;return is.elements[0]*=f,is.elements[1]*=f,is.elements[2]*=f,is.elements[4]*=h,is.elements[5]*=h,is.elements[6]*=h,is.elements[8]*=p,is.elements[9]*=p,is.elements[10]*=p,t.setFromRotationMatrix(is),n.x=s,n.y=o,n.z=c,this}makePerspective(e,t,n,r,s,o,c=_a){const u=this.elements,f=2*s/(t-e),h=2*s/(n-r),p=(t+e)/(t-e),m=(n+r)/(n-r);let v,y;if(c===_a)v=-(o+s)/(o-s),y=-2*o*s/(o-s);else if(c===mm)v=-o/(o-s),y=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=f,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=h,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,r,s,o,c=_a){const u=this.elements,f=1/(t-e),h=1/(n-r),p=1/(o-s),m=(t+e)*f,v=(n+r)*h;let y,S;if(c===_a)y=(o+s)*p,S=-2*p;else if(c===mm)y=s*p,S=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*f,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*h,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}};const pc=new he,is=new $t,x4=new he(0,0,0),y4=new he(1,1,1),Ja=new he,zd=new he,vr=new he,m2=new $t,g2=new Bs;let Co=class z3{constructor(e=0,t=0,n=0,r=z3.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],c=r[8],u=r[1],f=r[5],h=r[9],p=r[2],m=r[6],v=r[10];switch(t){case"XYZ":this._y=Math.asin(Wt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,v),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(m,f),this._z=0);break;case"YXZ":this._x=Math.asin(-Wt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,f)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(Wt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-o,f)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-Wt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-o,f));break;case"YZX":this._z=Math.asin(Wt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-h,f),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-Wt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(m,f),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-h,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return m2.makeRotationFromQuaternion(e),this.setFromRotationMatrix(m2,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return g2.setFromEuler(this),this.setFromQuaternion(g2,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Co.DEFAULT_ORDER="XYZ";let H3=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},S4=0;const _2=new he,mc=new Bs,ta=new $t,Hd=new he,yf=new he,M4=new he,E4=new Bs,v2=new he(1,0,0),x2=new he(0,1,0),y2=new he(0,0,1),S2={type:"added"},T4={type:"removed"},gc={type:"childadded",child:null},$g={type:"childremoved",child:null};let qn=class Yp extends kl{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:S4++}),this.uuid=ps(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Yp.DEFAULT_UP.clone();const e=new he,t=new Co,n=new Bs,r=new he(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new $t},normalMatrix:{value:new Gt}}),this.matrix=new $t,this.matrixWorld=new $t,this.matrixAutoUpdate=Yp.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Yp.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new H3,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return mc.setFromAxisAngle(e,t),this.quaternion.multiply(mc),this}rotateOnWorldAxis(e,t){return mc.setFromAxisAngle(e,t),this.quaternion.premultiply(mc),this}rotateX(e){return this.rotateOnAxis(v2,e)}rotateY(e){return this.rotateOnAxis(x2,e)}rotateZ(e){return this.rotateOnAxis(y2,e)}translateOnAxis(e,t){return _2.copy(e).applyQuaternion(this.quaternion),this.position.add(_2.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(v2,e)}translateY(e){return this.translateOnAxis(x2,e)}translateZ(e){return this.translateOnAxis(y2,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ta.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Hd.copy(e):Hd.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),yf.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ta.lookAt(yf,Hd,this.up):ta.lookAt(Hd,yf,this.up),this.quaternion.setFromRotationMatrix(ta),r&&(ta.extractRotation(r.matrixWorld),mc.setFromRotationMatrix(ta),this.quaternion.premultiply(mc.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(S2),gc.child=e,this.dispatchEvent(gc),gc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(T4),$g.child=e,this.dispatchEvent($g),$g.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ta.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ta.multiply(e.parent.matrixWorld)),e.applyMatrix4(ta),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(S2),gc.child=e,this.dispatchEvent(gc),gc.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yf,e,M4),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(yf,E4,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(c=>({...c,boundingBox:c.boundingBox?c.boundingBox.toJSON():void 0,boundingSphere:c.boundingSphere?c.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(c=>({...c})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let f=0,h=u.length;f<h;f++){const p=u[f];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,f=this.material.length;u<f;u++)c.push(s(e.materials,this.material[u]));r.material=c}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let c=0;c<this.children.length;c++)r.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];r.animations.push(s(e.animations,u))}}if(t){const c=o(e.geometries),u=o(e.materials),f=o(e.textures),h=o(e.images),p=o(e.shapes),m=o(e.skeletons),v=o(e.animations),y=o(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),f.length>0&&(n.textures=f),h.length>0&&(n.images=h),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=r,n;function o(c){const u=[];for(const f in c){const h=c[f];delete h.metadata,u.push(h)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}};qn.DEFAULT_UP=new he(0,1,0);qn.DEFAULT_MATRIX_AUTO_UPDATE=!0;qn.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const rs=new he,na=new he,jg=new he,ia=new he,_c=new he,vc=new he,M2=new he,qg=new he,Yg=new he,Kg=new he,Zg=new un,Qg=new un,Jg=new un;let Sf=class Gc{constructor(e=new he,t=new he,n=new he){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),rs.subVectors(e,t),r.cross(rs);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){rs.subVectors(r,t),na.subVectors(n,t),jg.subVectors(e,t);const o=rs.dot(rs),c=rs.dot(na),u=rs.dot(jg),f=na.dot(na),h=na.dot(jg),p=o*f-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,v=(f*u-c*h)*m,y=(o*h-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,ia)===null?!1:ia.x>=0&&ia.y>=0&&ia.x+ia.y<=1}static getInterpolation(e,t,n,r,s,o,c,u){return this.getBarycoord(e,t,n,r,ia)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,ia.x),u.addScaledVector(o,ia.y),u.addScaledVector(c,ia.z),u)}static getInterpolatedAttribute(e,t,n,r,s,o){return Zg.setScalar(0),Qg.setScalar(0),Jg.setScalar(0),Zg.fromBufferAttribute(e,t),Qg.fromBufferAttribute(e,n),Jg.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(Zg,s.x),o.addScaledVector(Qg,s.y),o.addScaledVector(Jg,s.z),o}static isFrontFacing(e,t,n,r){return rs.subVectors(n,t),na.subVectors(e,t),rs.cross(na).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return rs.subVectors(this.c,this.b),na.subVectors(this.a,this.b),rs.cross(na).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Gc.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Gc.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return Gc.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return Gc.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Gc.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,c;_c.subVectors(r,n),vc.subVectors(s,n),qg.subVectors(e,n);const u=_c.dot(qg),f=vc.dot(qg);if(u<=0&&f<=0)return t.copy(n);Yg.subVectors(e,r);const h=_c.dot(Yg),p=vc.dot(Yg);if(h>=0&&p<=h)return t.copy(r);const m=u*p-h*f;if(m<=0&&u>=0&&h<=0)return o=u/(u-h),t.copy(n).addScaledVector(_c,o);Kg.subVectors(e,s);const v=_c.dot(Kg),y=vc.dot(Kg);if(y>=0&&v<=y)return t.copy(s);const S=v*f-u*y;if(S<=0&&f>=0&&y<=0)return c=f/(f-y),t.copy(n).addScaledVector(vc,c);const _=h*y-v*p;if(_<=0&&p-h>=0&&v-y>=0)return M2.subVectors(s,r),c=(p-h)/(p-h+(v-y)),t.copy(r).addScaledVector(M2,c);const g=1/(_+S+m);return o=S*g,c=m*g,t.copy(n).addScaledVector(_c,o).addScaledVector(vc,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const V3={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},eo={h:0,s:0,l:0},Vd={h:0,s:0,l:0};function e_(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}let Ut=class{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Xn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Zt.colorSpaceToWorking(this,t),this}setRGB(e,t,n,r=Zt.workingColorSpace){return this.r=e,this.g=t,this.b=n,Zt.colorSpaceToWorking(this,r),this}setHSL(e,t,n,r=Zt.workingColorSpace){if(e=Ix(e,1),t=Wt(t,0,1),n=Wt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=e_(o,s,e+1/3),this.g=e_(o,s,e),this.b=e_(o,s,e-1/3)}return Zt.colorSpaceToWorking(this,r),this}setStyle(e,t=Xn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],c=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Xn){const n=V3[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Sa(e.r),this.g=Sa(e.g),this.b=Sa(e.b),this}copyLinearToSRGB(e){return this.r=tu(e.r),this.g=tu(e.g),this.b=tu(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Xn){return Zt.workingToColorSpace(Ci.copy(this),e),Math.round(Wt(Ci.r*255,0,255))*65536+Math.round(Wt(Ci.g*255,0,255))*256+Math.round(Wt(Ci.b*255,0,255))}getHexString(e=Xn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Zt.workingColorSpace){Zt.workingToColorSpace(Ci.copy(this),t);const n=Ci.r,r=Ci.g,s=Ci.b,o=Math.max(n,r,s),c=Math.min(n,r,s);let u,f;const h=(c+o)/2;if(c===o)u=0,f=0;else{const p=o-c;switch(f=h<=.5?p/(o+c):p/(2-o-c),o){case n:u=(r-s)/p+(r<s?6:0);break;case r:u=(s-n)/p+2;break;case s:u=(n-r)/p+4;break}u/=6}return e.h=u,e.s=f,e.l=h,e}getRGB(e,t=Zt.workingColorSpace){return Zt.workingToColorSpace(Ci.copy(this),t),e.r=Ci.r,e.g=Ci.g,e.b=Ci.b,e}getStyle(e=Xn){Zt.workingToColorSpace(Ci.copy(this),e);const t=Ci.r,n=Ci.g,r=Ci.b;return e!==Xn?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(eo),this.setHSL(eo.h+e,eo.s+t,eo.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(eo),e.getHSL(Vd);const n=Qf(eo.h,Vd.h,t),r=Qf(eo.s,Vd.s,t),s=Qf(eo.l,Vd.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const Ci=new Ut;Ut.NAMES=V3;let w4=0,Os=class extends kl{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:w4++}),this.uuid=ps(),this.name="",this.type="Material",this.blending=Jc,this.side=Ma,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Sv,this.blendDst=Mv,this.blendEquation=ml,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Ut(0,0,0),this.blendAlpha=0,this.depthFunc=ou,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=l2,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=cc,this.stencilZFail=cc,this.stencilZPass=cc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Jc&&(n.blending=this.blending),this.side!==Ma&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Sv&&(n.blendSrc=this.blendSrc),this.blendDst!==Mv&&(n.blendDst=this.blendDst),this.blendEquation!==ml&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ou&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==l2&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==cc&&(n.stencilFail=this.stencilFail),this.stencilZFail!==cc&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==cc&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const o=[];for(const c in s){const u=s[c];delete u.metadata,o.push(u)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},fs=class extends Os{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ut(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Co,this.combine=y3,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Gn=new he,Gd=new Nt;let b4=0,$i=class{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:b4++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=s1,this.updateRanges=[],this.gpuType=us,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Gd.fromBufferAttribute(this,t),Gd.applyMatrix3(e),this.setXY(t,Gd.x,Gd.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.applyMatrix3(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.applyMatrix4(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.applyNormalMatrix(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Gn.fromBufferAttribute(this,t),Gn.transformDirection(e),this.setXYZ(t,Gn.x,Gn.y,Gn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=ls(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ln(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ls(t,this.array)),t}setX(e,t){return this.normalized&&(t=ln(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ls(t,this.array)),t}setY(e,t){return this.normalized&&(t=ln(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ls(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ln(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ls(t,this.array)),t}setW(e,t){return this.normalized&&(t=ln(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ln(t,this.array),n=ln(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=ln(t,this.array),n=ln(n,this.array),r=ln(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=ln(t,this.array),n=ln(n,this.array),r=ln(r,this.array),s=ln(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==s1&&(e.usage=this.usage),e}},G3=class extends $i{constructor(e,t,n){super(new Uint16Array(e),t,n)}},W3=class extends $i{constructor(e,t,n){super(new Uint32Array(e),t,n)}},qr=class extends $i{constructor(e,t,n){super(new Float32Array(e),t,n)}},A4=0;const Hr=new $t,t_=new qn,xc=new he,xr=new Ra,Mf=new Ra,ui=new he;let Ca=class X3 extends kl{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:A4++}),this.uuid=ps(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(F3(e)?W3:G3)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Gt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Hr.makeRotationFromQuaternion(e),this.applyMatrix4(Hr),this}rotateX(e){return Hr.makeRotationX(e),this.applyMatrix4(Hr),this}rotateY(e){return Hr.makeRotationY(e),this.applyMatrix4(Hr),this}rotateZ(e){return Hr.makeRotationZ(e),this.applyMatrix4(Hr),this}translate(e,t,n){return Hr.makeTranslation(e,t,n),this.applyMatrix4(Hr),this}scale(e,t,n){return Hr.makeScale(e,t,n),this.applyMatrix4(Hr),this}lookAt(e){return t_.lookAt(e),t_.updateMatrix(),this.applyMatrix4(t_.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(xc).negate(),this.translate(xc.x,xc.y,xc.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const n=[];for(let r=0,s=e.length;r<s;r++){const o=e[r];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new qr(n,3))}else{const n=Math.min(e.length,t.count);for(let r=0;r<n;r++){const s=e[r];t.setXYZ(r,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ra);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new he(-1/0,-1/0,-1/0),new he(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];xr.setFromBufferAttribute(s),this.morphTargetsRelative?(ui.addVectors(this.boundingBox.min,xr.min),this.boundingBox.expandByPoint(ui),ui.addVectors(this.boundingBox.max,xr.max),this.boundingBox.expandByPoint(ui)):(this.boundingBox.expandByPoint(xr.min),this.boundingBox.expandByPoint(xr.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Vs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new he,1/0);return}if(e){const n=this.boundingSphere.center;if(xr.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const c=t[s];Mf.setFromBufferAttribute(c),this.morphTargetsRelative?(ui.addVectors(xr.min,Mf.min),xr.expandByPoint(ui),ui.addVectors(xr.max,Mf.max),xr.expandByPoint(ui)):(xr.expandByPoint(Mf.min),xr.expandByPoint(Mf.max))}xr.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)ui.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(ui));if(t)for(let s=0,o=t.length;s<o;s++){const c=t[s],u=this.morphTargetsRelative;for(let f=0,h=c.count;f<h;f++)ui.fromBufferAttribute(c,f),u&&(xc.fromBufferAttribute(e,f),ui.add(xc)),r=Math.max(r,n.distanceToSquared(ui))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new $i(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),c=[],u=[];for(let N=0;N<n.count;N++)c[N]=new he,u[N]=new he;const f=new he,h=new he,p=new he,m=new Nt,v=new Nt,y=new Nt,S=new he,_=new he;function g(N,A,w){f.fromBufferAttribute(n,N),h.fromBufferAttribute(n,A),p.fromBufferAttribute(n,w),m.fromBufferAttribute(s,N),v.fromBufferAttribute(s,A),y.fromBufferAttribute(s,w),h.sub(f),p.sub(f),v.sub(m),y.sub(m);const D=1/(v.x*y.y-y.x*v.y);isFinite(D)&&(S.copy(h).multiplyScalar(y.y).addScaledVector(p,-v.y).multiplyScalar(D),_.copy(p).multiplyScalar(v.x).addScaledVector(h,-y.x).multiplyScalar(D),c[N].add(S),c[A].add(S),c[w].add(S),u[N].add(_),u[A].add(_),u[w].add(_))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let N=0,A=b.length;N<A;++N){const w=b[N],D=w.start,X=w.count;for(let z=D,G=D+X;z<G;z+=3)g(e.getX(z+0),e.getX(z+1),e.getX(z+2))}const E=new he,T=new he,L=new he,C=new he;function P(N){L.fromBufferAttribute(r,N),C.copy(L);const A=c[N];E.copy(A),E.sub(L.multiplyScalar(L.dot(A))).normalize(),T.crossVectors(C,A);const D=T.dot(u[N])<0?-1:1;o.setXYZW(N,E.x,E.y,E.z,D)}for(let N=0,A=b.length;N<A;++N){const w=b[N],D=w.start,X=w.count;for(let z=D,G=D+X;z<G;z+=3)P(e.getX(z+0)),P(e.getX(z+1)),P(e.getX(z+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new $i(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const r=new he,s=new he,o=new he,c=new he,u=new he,f=new he,h=new he,p=new he;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),S=e.getX(m+1),_=e.getX(m+2);r.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),o.fromBufferAttribute(t,_),h.subVectors(o,s),p.subVectors(r,s),h.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,S),f.fromBufferAttribute(n,_),c.add(h),u.add(h),f.add(h),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(_,f.x,f.y,f.z)}else for(let m=0,v=t.count;m<v;m+=3)r.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),o.fromBufferAttribute(t,m+2),h.subVectors(o,s),p.subVectors(r,s),h.cross(p),n.setXYZ(m+0,h.x,h.y,h.z),n.setXYZ(m+1,h.x,h.y,h.z),n.setXYZ(m+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)ui.fromBufferAttribute(e,t),ui.normalize(),e.setXYZ(t,ui.x,ui.y,ui.z)}toNonIndexed(){function e(c,u){const f=c.array,h=c.itemSize,p=c.normalized,m=new f.constructor(u.length*h);let v=0,y=0;for(let S=0,_=u.length;S<_;S++){c.isInterleavedBufferAttribute?v=u[S]*c.data.stride+c.offset:v=u[S]*h;for(let g=0;g<h;g++)m[y++]=f[v++]}return new $i(m,h,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new X3,n=this.index.array,r=this.attributes;for(const c in r){const u=r[c],f=e(u,n);t.setAttribute(c,f)}const s=this.morphAttributes;for(const c in s){const u=[],f=s[c];for(let h=0,p=f.length;h<p;h++){const m=f[h],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const f in u)u[f]!==void 0&&(e[f]=u[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const f=n[u];e.data.attributes[u]=f.toJSON(e.data)}const r={};let s=!1;for(const u in this.morphAttributes){const f=this.morphAttributes[u],h=[];for(let p=0,m=f.length;p<m;p++){const v=f[p];h.push(v.toJSON(e.data))}h.length>0&&(r[u]=h,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere=c.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone());const r=e.attributes;for(const f in r){const h=r[f];this.setAttribute(f,h.clone(t))}const s=e.morphAttributes;for(const f in s){const h=[],p=s[f];for(let m=0,v=p.length;m<v;m++)h.push(p[m].clone(t));this.morphAttributes[f]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let f=0,h=o.length;f<h;f++){const p=o[f];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const E2=new $t,Zo=new Th,Wd=new Vs,T2=new he,Xd=new he,$d=new he,jd=new he,n_=new he,qd=new he,w2=new he,Yd=new he;let Mi=class extends qn{constructor(e=new Ca,t=new fs){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const c=this.morphTargetInfluences;if(s&&c){qd.set(0,0,0);for(let u=0,f=s.length;u<f;u++){const h=c[u],p=s[u];h!==0&&(n_.fromBufferAttribute(p,e),o?qd.addScaledVector(n_,h):qd.addScaledVector(n_.sub(t),h))}t.add(qd)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Wd.copy(n.boundingSphere),Wd.applyMatrix4(s),Zo.copy(e.ray).recast(e.near),!(Wd.containsPoint(Zo.origin)===!1&&(Zo.intersectSphere(Wd,T2)===null||Zo.origin.distanceToSquared(T2)>(e.far-e.near)**2))&&(E2.copy(s).invert(),Zo.copy(e.ray).applyMatrix4(E2),!(n.boundingBox!==null&&Zo.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,Zo)))}_computeIntersections(e,t,n){let r;const s=this.geometry,o=this.material,c=s.index,u=s.attributes.position,f=s.attributes.uv,h=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(o))for(let y=0,S=m.length;y<S;y++){const _=m[y],g=o[_.materialIndex],b=Math.max(_.start,v.start),E=Math.min(c.count,Math.min(_.start+_.count,v.start+v.count));for(let T=b,L=E;T<L;T+=3){const C=c.getX(T),P=c.getX(T+1),N=c.getX(T+2);r=Kd(this,g,e,n,f,h,p,C,P,N),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=_.materialIndex,t.push(r))}}else{const y=Math.max(0,v.start),S=Math.min(c.count,v.start+v.count);for(let _=y,g=S;_<g;_+=3){const b=c.getX(_),E=c.getX(_+1),T=c.getX(_+2);r=Kd(this,o,e,n,f,h,p,b,E,T),r&&(r.faceIndex=Math.floor(_/3),t.push(r))}}else if(u!==void 0)if(Array.isArray(o))for(let y=0,S=m.length;y<S;y++){const _=m[y],g=o[_.materialIndex],b=Math.max(_.start,v.start),E=Math.min(u.count,Math.min(_.start+_.count,v.start+v.count));for(let T=b,L=E;T<L;T+=3){const C=T,P=T+1,N=T+2;r=Kd(this,g,e,n,f,h,p,C,P,N),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=_.materialIndex,t.push(r))}}else{const y=Math.max(0,v.start),S=Math.min(u.count,v.start+v.count);for(let _=y,g=S;_<g;_+=3){const b=_,E=_+1,T=_+2;r=Kd(this,o,e,n,f,h,p,b,E,T),r&&(r.faceIndex=Math.floor(_/3),t.push(r))}}}};function R4(i,e,t,n,r,s,o,c){let u;if(e.side===lr?u=n.intersectTriangle(o,s,r,!0,c):u=n.intersectTriangle(r,s,o,e.side===Ma,c),u===null)return null;Yd.copy(c),Yd.applyMatrix4(i.matrixWorld);const f=t.ray.origin.distanceTo(Yd);return f<t.near||f>t.far?null:{distance:f,point:Yd.clone(),object:i}}function Kd(i,e,t,n,r,s,o,c,u,f){i.getVertexPosition(c,Xd),i.getVertexPosition(u,$d),i.getVertexPosition(f,jd);const h=R4(i,e,t,n,Xd,$d,jd,w2);if(h){const p=new he;Sf.getBarycoord(w2,Xd,$d,jd,p),r&&(h.uv=Sf.getInterpolatedAttribute(r,c,u,f,p,new Nt)),s&&(h.uv1=Sf.getInterpolatedAttribute(s,c,u,f,p,new Nt)),o&&(h.normal=Sf.getInterpolatedAttribute(o,c,u,f,p,new he),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const m={a:c,b:u,c:f,normal:new he,materialIndex:0};Sf.getNormal(Xd,$d,jd,m.normal),h.face=m,h.barycoord=p}return h}let Nx=class $3 extends Ca{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const c=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const u=[],f=[],h=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,o,s,0),y("z","y","x",1,-1,n,t,-e,o,s,1),y("x","z","y",1,1,e,n,t,r,o,2),y("x","z","y",1,-1,e,n,-t,r,o,3),y("x","y","z",1,-1,e,t,n,r,s,4),y("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(u),this.setAttribute("position",new qr(f,3)),this.setAttribute("normal",new qr(h,3)),this.setAttribute("uv",new qr(p,2));function y(S,_,g,b,E,T,L,C,P,N,A){const w=T/P,D=L/N,X=T/2,z=L/2,G=C/2,Z=P+1,q=N+1;let K=0,B=0;const ie=new he;for(let oe=0;oe<q;oe++){const V=oe*D-z;for(let de=0;de<Z;de++){const Ge=de*w-X;ie[S]=Ge*b,ie[_]=V*E,ie[g]=G,f.push(ie.x,ie.y,ie.z),ie[S]=0,ie[_]=0,ie[g]=C>0?1:-1,h.push(ie.x,ie.y,ie.z),p.push(de/P),p.push(1-oe/N),K+=1}}for(let oe=0;oe<N;oe++)for(let V=0;V<P;V++){const de=m+V+Z*oe,Ge=m+V+Z*(oe+1),j=m+(V+1)+Z*(oe+1),fe=m+(V+1)+Z*oe;u.push(de,Ge,fe),u.push(Ge,j,fe),B+=6}c.addGroup(v,B,A),v+=B,m+=K}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $3(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};function hu(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function zi(i){const e={};for(let t=0;t<i.length;t++){const n=hu(i[t]);for(const r in n)e[r]=n[r]}return e}function C4(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function j3(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Zt.workingColorSpace}const P4={clone:hu,merge:zi};var L4=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,I4=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let Po=class extends Os{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=L4,this.fragmentShader=I4,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=hu(e.uniforms),this.uniformsGroups=C4(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}},q3=class extends qn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new $t,this.projectionMatrix=new $t,this.projectionMatrixInverse=new $t,this.coordinateSystem=_a}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const to=new he,b2=new Nt,A2=new Nt;let Gi=class extends q3{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=fu*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Zf*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return fu*2*Math.atan(Math.tan(Zf*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){to.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(to.x,to.y).multiplyScalar(-e/to.z),to.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(to.x,to.y).multiplyScalar(-e/to.z)}getViewSize(e,t){return this.getViewBounds(e,b2,A2),t.subVectors(A2,b2)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Zf*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,f=o.fullHeight;s+=o.offsetX*r/u,t-=o.offsetY*n/f,r*=o.width/u,n*=o.height/f}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const yc=-90,Sc=1;let D4=class extends qn{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Gi(yc,Sc,e,t);r.layers=this.layers,this.add(r);const s=new Gi(yc,Sc,e,t);s.layers=this.layers,this.add(s);const o=new Gi(yc,Sc,e,t);o.layers=this.layers,this.add(o);const c=new Gi(yc,Sc,e,t);c.layers=this.layers,this.add(c);const u=new Gi(yc,Sc,e,t);u.layers=this.layers,this.add(u);const f=new Gi(yc,Sc,e,t);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,o,c,u]=t;for(const f of t)this.remove(f);if(e===_a)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===mm)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const f of t)this.add(f),f.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,c,u,f,h]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,o),e.setRenderTarget(n,2,r),e.render(t,c),e.setRenderTarget(n,3,r),e.render(t,u),e.setRenderTarget(n,4,r),e.render(t,f),n.texture.generateMipmaps=S,e.setRenderTarget(n,5,r),e.render(t,h),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}},Y3=class extends Oi{constructor(e=[],t=lu,n,r,s,o,c,u,f,h){super(e,t,n,r,s,o,c,u,f,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}},N4=class extends Ll{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new Y3(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Nx(5,5,5),s=new Po({name:"CubemapFromEquirect",uniforms:hu(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:lr,blending:wo});s.uniforms.tEquirect.value=t;const o=new Mi(r,s),c=t.minFilter;return t.minFilter===ga&&(t.minFilter=Wi),new D4(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,n=!0,r=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}},ar=class extends qn{constructor(){super(),this.isGroup=!0,this.type="Group"}};const U4={type:"move"};let i_=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ar,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ar,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new he,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new he),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ar,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new he,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new he),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const c=this._targetRay,u=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(f&&e.hand){o=!0;for(const S of e.hand.values()){const _=t.getJointPose(S,n),g=this._getHandJoint(f,S);_!==null&&(g.matrix.fromArray(_.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=_.radius),g.visible=_!==null}const h=f.joints["index-finger-tip"],p=f.joints["thumb-tip"],m=h.position.distanceTo(p.position),v=.02,y=.005;f.inputState.pinching&&m>v+y?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&m<=v-y&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(U4)))}return c!==null&&(c.visible=r!==null),u!==null&&(u.visible=s!==null),f!==null&&(f.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new ar;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}},O4=class extends qn{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Co,this.environmentIntensity=1,this.environmentRotation=new Co,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}};class F4{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=s1,this.updateRanges=[],this.version=0,this.uuid=ps()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let r=0,s=this.stride;r<s;r++)this.array[e+r]=t.array[n+r];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ps()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ps()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Bi=new he;class Ux{constructor(e,t,n,r=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Bi.fromBufferAttribute(this,t),Bi.applyMatrix4(e),this.setXYZ(t,Bi.x,Bi.y,Bi.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Bi.fromBufferAttribute(this,t),Bi.applyNormalMatrix(e),this.setXYZ(t,Bi.x,Bi.y,Bi.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Bi.fromBufferAttribute(this,t),Bi.transformDirection(e),this.setXYZ(t,Bi.x,Bi.y,Bi.z);return this}getComponent(e,t){let n=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(n=ls(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=ln(n,this.array)),this.data.array[e*this.data.stride+this.offset+t]=n,this}setX(e,t){return this.normalized&&(t=ln(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ln(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ln(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ln(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ls(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ls(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ls(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ls(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ln(t,this.array),n=ln(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ln(t,this.array),n=ln(n,this.array),r=ln(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=ln(t,this.array),n=ln(n,this.array),r=ln(r,this.array),s=ln(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return new $i(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ux(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const r=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[r+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const R2=new he,C2=new un,P2=new un,k4=new he,L2=new $t,Zd=new he,r_=new Vs,I2=new $t,s_=new Th;class B4 extends Mi{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=r2,this.bindMatrix=new $t,this.bindMatrixInverse=new $t,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Ra),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Zd),this.boundingBox.expandByPoint(Zd)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Vs),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)this.getVertexPosition(n,Zd),this.boundingSphere.expandByPoint(Zd)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,r=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),r_.copy(this.boundingSphere),r_.applyMatrix4(r),e.ray.intersectsSphere(r_)!==!1&&(I2.copy(r).invert(),s_.copy(e.ray).applyMatrix4(I2),!(this.boundingBox!==null&&s_.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,s_)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new un,t=this.geometry.attributes.skinWeight;for(let n=0,r=t.count;n<r;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===r2?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===DP?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,r=this.geometry;C2.fromBufferAttribute(r.attributes.skinIndex,e),P2.fromBufferAttribute(r.attributes.skinWeight,e),R2.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=P2.getComponent(s);if(o!==0){const c=C2.getComponent(s);L2.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(k4.copy(R2).applyMatrix4(L2),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class K3 extends qn{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Z3 extends Oi{constructor(e=null,t=1,n=1,r,s,o,c,u,f=Xi,h=Xi,p,m){super(null,o,c,u,f,h,r,s,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const D2=new $t,z4=new $t;class Ox{constructor(e=[],t=[]){this.uuid=ps(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,r=this.bones.length;n<r;n++)this.boneInverses.push(new $t)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new $t;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const c=e[s]?e[s].matrixWorld:z4;D2.multiplyMatrices(c,t[s]),D2.toArray(n,s*16)}r!==null&&(r.needsUpdate=!0)}clone(){return new Ox(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Z3(t,e,e,$r,us);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const r=this.bones[t];if(r.name===e)return r}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,r=e.bones.length;n<r;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new K3),this.bones.push(o),this.boneInverses.push(new $t().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let r=0,s=t.length;r<s;r++){const o=t[r];e.bones.push(o.uuid);const c=n[r];e.boneInverses.push(c.toArray())}return e}}class o1 extends $i{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Mc=new $t,N2=new $t,Qd=[],U2=new Ra,H4=new $t,Ef=new Mi,Tf=new Vs;class V4 extends Mi{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new o1(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let r=0;r<n;r++)this.setMatrixAt(r,H4)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Ra),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Mc),U2.copy(e.boundingBox).applyMatrix4(Mc),this.boundingBox.union(U2)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Vs),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Mc),Tf.copy(e.boundingSphere).applyMatrix4(Mc),this.boundingSphere.union(Tf)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const n=t.morphTargetInfluences,r=this.morphTexture.source.data.data,s=n.length+1,o=e*s+1;for(let c=0;c<n.length;c++)n[c]=r[o+c]}raycast(e,t){const n=this.matrixWorld,r=this.count;if(Ef.geometry=this.geometry,Ef.material=this.material,Ef.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Tf.copy(this.boundingSphere),Tf.applyMatrix4(n),e.ray.intersectsSphere(Tf)!==!1))for(let s=0;s<r;s++){this.getMatrixAt(s,Mc),N2.multiplyMatrices(n,Mc),Ef.matrixWorld=N2,Ef.raycast(e,Qd);for(let o=0,c=Qd.length;o<c;o++){const u=Qd[o];u.instanceId=s,u.object=this,t.push(u)}Qd.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new o1(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const n=t.morphTargetInfluences,r=n.length+1;this.morphTexture===null&&(this.morphTexture=new Z3(new Float32Array(r*this.count),r,this.count,Rx,us));const s=this.morphTexture.source.data.data;let o=0;for(let f=0;f<n.length;f++)o+=n[f];const c=this.geometry.morphTargetsRelative?1:1-o,u=r*e;s[u]=c,s.set(n,u+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const a_=new he,G4=new he,W4=new Gt;let rr=class{constructor(e=new he(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=a_.subVectors(n,t).cross(G4.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(a_),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||W4.getNormalMatrix(e),r=this.coplanarPoint(a_).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Qo=new Vs,X4=new Nt(.5,.5),Jd=new he;let Fx=class{constructor(e=new rr,t=new rr,n=new rr,r=new rr,s=new rr,o=new rr){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(r),c[4].copy(s),c[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=_a){const n=this.planes,r=e.elements,s=r[0],o=r[1],c=r[2],u=r[3],f=r[4],h=r[5],p=r[6],m=r[7],v=r[8],y=r[9],S=r[10],_=r[11],g=r[12],b=r[13],E=r[14],T=r[15];if(n[0].setComponents(u-s,m-f,_-v,T-g).normalize(),n[1].setComponents(u+s,m+f,_+v,T+g).normalize(),n[2].setComponents(u+o,m+h,_+y,T+b).normalize(),n[3].setComponents(u-o,m-h,_-y,T-b).normalize(),n[4].setComponents(u-c,m-p,_-S,T-E).normalize(),t===_a)n[5].setComponents(u+c,m+p,_+S,T+E).normalize();else if(t===mm)n[5].setComponents(c,p,S,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Qo.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Qo.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Qo)}intersectsSprite(e){Qo.center.set(0,0,0);const t=X4.distanceTo(e.center);return Qo.radius=.7071067811865476+t,Qo.applyMatrix4(e.matrixWorld),this.intersectsSphere(Qo)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Jd.x=r.normal.x>0?e.max.x:e.min.x,Jd.y=r.normal.y>0?e.max.y:e.min.y,Jd.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Jd)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}},Q3=class extends Os{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ut(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};const gm=new he,_m=new he,O2=new $t,wf=new Th,ep=new Vs,o_=new he,F2=new he;let kx=class extends qn{constructor(e=new Ca,t=new Q3){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)gm.fromBufferAttribute(t,r-1),_m.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=gm.distanceTo(_m);e.setAttribute("lineDistance",new qr(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ep.copy(n.boundingSphere),ep.applyMatrix4(r),ep.radius+=s,e.ray.intersectsSphere(ep)===!1)return;O2.copy(r).invert(),wf.copy(e.ray).applyMatrix4(O2);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=this.isLineSegments?2:1,h=n.index,m=n.attributes.position;if(h!==null){const v=Math.max(0,o.start),y=Math.min(h.count,o.start+o.count);for(let S=v,_=y-1;S<_;S+=f){const g=h.getX(S),b=h.getX(S+1),E=tp(this,e,wf,u,g,b,S);E&&t.push(E)}if(this.isLineLoop){const S=h.getX(y-1),_=h.getX(v),g=tp(this,e,wf,u,S,_,y-1);g&&t.push(g)}}else{const v=Math.max(0,o.start),y=Math.min(m.count,o.start+o.count);for(let S=v,_=y-1;S<_;S+=f){const g=tp(this,e,wf,u,S,S+1,S);g&&t.push(g)}if(this.isLineLoop){const S=tp(this,e,wf,u,y-1,v,y-1);S&&t.push(S)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}};function tp(i,e,t,n,r,s,o){const c=i.geometry.attributes.position;if(gm.fromBufferAttribute(c,r),_m.fromBufferAttribute(c,s),t.distanceSqToSegment(gm,_m,o_,F2)>n)return;o_.applyMatrix4(i.matrixWorld);const f=e.ray.origin.distanceTo(o_);if(!(f<e.near||f>e.far))return{distance:f,point:F2.clone().applyMatrix4(i.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:i}}const k2=new he,B2=new he;class $4 extends kx{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let r=0,s=t.count;r<s;r+=2)k2.fromBufferAttribute(t,r),B2.fromBufferAttribute(t,r+1),n[r]=r===0?0:n[r-1],n[r+1]=n[r]+k2.distanceTo(B2);e.setAttribute("lineDistance",new qr(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class j4 extends kx{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class J3 extends Os{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Ut(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const z2=new $t,l1=new Th,np=new Vs,ip=new he;class q4 extends qn{constructor(e=new Ca,t=new J3){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),np.copy(n.boundingSphere),np.applyMatrix4(r),np.radius+=s,e.ray.intersectsSphere(np)===!1)return;z2.copy(r).invert(),l1.copy(e.ray).applyMatrix4(z2);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=n.index,p=n.attributes.position;if(f!==null){const m=Math.max(0,o.start),v=Math.min(f.count,o.start+o.count);for(let y=m,S=v;y<S;y++){const _=f.getX(y);ip.fromBufferAttribute(p,_),H2(ip,_,u,r,e,t,this)}}else{const m=Math.max(0,o.start),v=Math.min(p.count,o.start+o.count);for(let y=m,S=v;y<S;y++)ip.fromBufferAttribute(p,y),H2(ip,y,u,r,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function H2(i,e,t,n,r,s,o){const c=l1.distanceSqToPoint(i);if(c<t){const u=new he;l1.closestPointToPoint(i,u),u.applyMatrix4(n);const f=r.ray.origin.distanceTo(u);if(f<r.near||f>r.far)return;s.push({distance:f,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class Y4 extends Oi{constructor(e,t,n,r,s,o,c,u,f){super(e,t,n,r,s,o,c,u,f),this.isCanvasTexture=!0,this.needsUpdate=!0}}let eb=class extends Oi{constructor(e,t,n=Pl,r,s,o,c=Xi,u=Xi,f,h=ch,p=1){if(h!==ch&&h!==uh)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const m={width:e,height:t,depth:p};super(m,r,s,o,c,u,h,n,f),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Dx(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}},Bm=class tb extends Ca{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,c=Math.floor(n),u=Math.floor(r),f=c+1,h=u+1,p=e/c,m=t/u,v=[],y=[],S=[],_=[];for(let g=0;g<h;g++){const b=g*m-o;for(let E=0;E<f;E++){const T=E*p-s;y.push(T,-b,0),S.push(0,0,1),_.push(E/c),_.push(1-g/u)}}for(let g=0;g<u;g++)for(let b=0;b<c;b++){const E=b+f*g,T=b+f*(g+1),L=b+1+f*(g+1),C=b+1+f*g;v.push(E,T,C),v.push(T,L,C)}this.setIndex(v),this.setAttribute("position",new qr(y,3)),this.setAttribute("normal",new qr(S,3)),this.setAttribute("uv",new qr(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new tb(e.width,e.height,e.widthSegments,e.heightSegments)}},K4=class nb extends Ca{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+c,Math.PI);let f=0;const h=[],p=new he,m=new he,v=[],y=[],S=[],_=[];for(let g=0;g<=n;g++){const b=[],E=g/n;let T=0;g===0&&o===0?T=.5/t:g===n&&u===Math.PI&&(T=-.5/t);for(let L=0;L<=t;L++){const C=L/t;p.x=-e*Math.cos(r+C*s)*Math.sin(o+E*c),p.y=e*Math.cos(o+E*c),p.z=e*Math.sin(r+C*s)*Math.sin(o+E*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),S.push(m.x,m.y,m.z),_.push(C+T,1-E),b.push(f++)}h.push(b)}for(let g=0;g<n;g++)for(let b=0;b<t;b++){const E=h[g][b+1],T=h[g][b],L=h[g+1][b],C=h[g+1][b+1];(g!==0||o>0)&&v.push(E,T,C),(g!==n-1||u<Math.PI)&&v.push(T,L,C)}this.setIndex(v),this.setAttribute("position",new qr(y,3)),this.setAttribute("normal",new qr(S,3)),this.setAttribute("uv",new qr(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new nb(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};class Bx extends Os{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new Ut(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ut(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=L3,this.normalScale=new Nt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Co,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Gs extends Bx{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Nt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Wt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Ut(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Ut(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Ut(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}let Z4=class extends Os{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=OP,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}},Q4=class extends Os{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};function rp(i,e){return!i||i.constructor===e?i:typeof e.BYTES_PER_ELEMENT=="number"?new e(i):Array.prototype.slice.call(i)}function J4(i){return ArrayBuffer.isView(i)&&!(i instanceof DataView)}function e5(i){function e(r,s){return i[r]-i[s]}const t=i.length,n=new Array(t);for(let r=0;r!==t;++r)n[r]=r;return n.sort(e),n}function V2(i,e,t){const n=i.length,r=new i.constructor(n);for(let s=0,o=0;o!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)r[o++]=i[c+u]}return r}function ib(i,e,t,n){let r=1,s=i[0];for(;s!==void 0&&s[n]===void 0;)s=i[r++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push(...o)),s=i[r++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=i[r++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=i[r++];while(s!==void 0)}class wh{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==void 0?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,r=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<r)){for(let c=n+2;;){if(r===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=r,r=t[++n],e<r)break t}o=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(r=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const c=n+o>>>1;e<t[c]?o=c:n=c+1}if(r=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(r===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,r)}return this.interpolate_(n,s,e,r)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r;for(let o=0;o!==r;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class t5 extends wh{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:s2,endingEnd:s2}}intervalChanged_(e,t,n){const r=this.parameterPositions;let s=e-2,o=e+1,c=r[s],u=r[o];if(c===void 0)switch(this.getSettings_().endingStart){case a2:s=e,c=2*t-n;break;case o2:s=r.length-2,c=t+r[s]-r[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case a2:o=e,u=2*n-t;break;case o2:o=1,u=n+r[1]-r[0];break;default:o=e-1,u=t}const f=(n-t)*.5,h=this.valueSize;this._weightPrev=f/(t-c),this._weightNext=f/(u-n),this._offsetPrev=s*h,this._offsetNext=o*h}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,f=u-c,h=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(r-t),S=y*y,_=S*y,g=-m*_+2*m*S-m*y,b=(1+m)*_+(-1.5-2*m)*S+(-.5+m)*y+1,E=(-1-v)*_+(1.5+v)*S+.5*y,T=v*_-v*S;for(let L=0;L!==c;++L)s[L]=g*o[h+L]+b*o[f+L]+E*o[u+L]+T*o[p+L];return s}}class n5 extends wh{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,f=u-c,h=(n-t)/(r-t),p=1-h;for(let m=0;m!==c;++m)s[m]=o[f+m]*p+o[u+m]*h;return s}}class i5 extends wh{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class vs{constructor(e,t,n,r){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=rp(t,this.TimeBufferType),this.values=rp(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:rp(e.times,Array),values:rp(e.values,Array)};const r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new i5(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new n5(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new t5(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case fh:t=this.InterpolantFactoryMethodDiscrete;break;case hh:t=this.InterpolantFactoryMethodLinear;break;case Og:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return fh;case this.InterpolantFactoryMethodLinear:return hh;case this.InterpolantFactoryMethodSmooth:return Og}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,r=t.length;n!==r;++n)t[n]*=e}return this}trim(e,t){const n=this.times,r=n.length;let s=0,o=r-1;for(;s!==r&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==r){s>=o&&(o=Math.max(o,1),s=o-1);const c=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*c,o*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,r=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,o),e=!1;break}o=u}if(r!==void 0&&J4(r))for(let c=0,u=r.length;c!==u;++c){const f=r[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),n=this.getValueSize(),r=this.getInterpolation()===Og,s=e.length-1;let o=1;for(let c=1;c<s;++c){let u=!1;const f=e[c],h=e[c+1];if(f!==h&&(c!==1||f!==e[0]))if(r)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const S=t[p+y];if(S!==t[m+y]||S!==t[v+y]){u=!0;break}}}if(u){if(c!==o){e[o]=e[c];const p=c*n,m=o*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++o}}if(s>0){e[o]=e[s];for(let c=s*n,u=o*n,f=0;f!==n;++f)t[u+f]=t[c+f];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*n)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}vs.prototype.ValueTypeName="";vs.prototype.TimeBufferType=Float32Array;vs.prototype.ValueBufferType=Float32Array;vs.prototype.DefaultInterpolation=hh;class Iu extends vs{constructor(e,t,n){super(e,t,n)}}Iu.prototype.ValueTypeName="bool";Iu.prototype.ValueBufferType=Array;Iu.prototype.DefaultInterpolation=fh;Iu.prototype.InterpolantFactoryMethodLinear=void 0;Iu.prototype.InterpolantFactoryMethodSmooth=void 0;class rb extends vs{constructor(e,t,n,r){super(e,t,n,r)}}rb.prototype.ValueTypeName="color";class du extends vs{constructor(e,t,n,r){super(e,t,n,r)}}du.prototype.ValueTypeName="number";class r5 extends wh{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=(n-t)/(r-t);let f=e*c;for(let h=f+c;f!==h;f+=4)Bs.slerpFlat(s,0,o,f-c,o,f,u);return s}}class pu extends vs{constructor(e,t,n,r){super(e,t,n,r)}InterpolantFactoryMethodLinear(e){return new r5(this.times,this.values,this.getValueSize(),e)}}pu.prototype.ValueTypeName="quaternion";pu.prototype.InterpolantFactoryMethodSmooth=void 0;class Du extends vs{constructor(e,t,n){super(e,t,n)}}Du.prototype.ValueTypeName="string";Du.prototype.ValueBufferType=Array;Du.prototype.DefaultInterpolation=fh;Du.prototype.InterpolantFactoryMethodLinear=void 0;Du.prototype.InterpolantFactoryMethodSmooth=void 0;class mu extends vs{constructor(e,t,n,r){super(e,t,n,r)}}mu.prototype.ValueTypeName="vector";class s5{constructor(e="",t=-1,n=[],r=NP){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=ps(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,r=1/(e.fps||1);for(let o=0,c=n.length;o!==c;++o)t.push(o5(n[o]).scale(r));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(vs.toJSON(n[s]));return r}static CreateFromMorphTargetSequence(e,t,n,r){const s=t.length,o=[];for(let c=0;c<s;c++){let u=[],f=[];u.push((c+s-1)%s,c,(c+1)%s),f.push(0,1,0);const h=e5(u);u=V2(u,1,h),f=V2(f,1,h),!r&&u[0]===0&&(u.push(s),f.push(f[0])),o.push(new du(".morphTargetInfluences["+t[c].name+"]",u,f).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const r=e;n=r.geometry&&r.geometry.animations||r.animations}for(let r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const r={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const f=e[c],h=f.name.match(s);if(h&&h.length>1){const p=h[1];let m=r[p];m||(r[p]=m=[]),m.push(f)}}const o=[];for(const c in r)o.push(this.CreateFromMorphTargetSequence(c,r[c],t,n));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,S){if(v.length!==0){const _=[],g=[];ib(v,_,g,y),_.length!==0&&S.push(new p(m,_,g))}},r=[],s=e.name||"default",o=e.fps||30,c=e.blendMode;let u=e.length||-1;const f=e.hierarchy||[];for(let p=0;p<f.length;p++){const m=f[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let S=0;S<m[y].morphTargets.length;S++)v[m[y].morphTargets[S]]=-1;for(const S in v){const _=[],g=[];for(let b=0;b!==m[y].morphTargets.length;++b){const E=m[y];_.push(E.time),g.push(E.morphTarget===S?1:0)}r.push(new du(".morphTargetInfluence["+S+"]",_,g))}u=v.length*o}else{const v=".bones["+t[p].name+"]";n(mu,v+".position",m,"pos",r),n(pu,v+".quaternion",m,"rot",r),n(mu,v+".scale",m,"scl",r)}}return r.length===0?null:new this(s,u,r,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,r=e.length;n!==r;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function a5(i){switch(i.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return du;case"vector":case"vector2":case"vector3":case"vector4":return mu;case"color":return rb;case"quaternion":return pu;case"bool":case"boolean":return Iu;case"string":return Du}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+i)}function o5(i){if(i.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=a5(i.type);if(i.times===void 0){const t=[],n=[];ib(i.keys,t,n,"value"),i.times=t,i.values=n}return e.parse!==void 0?e.parse(i):new e(i.name,i.times,i.values,i.interpolation)}const va={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class sb{constructor(e,t,n){const r=this;let s=!1,o=0,c=0,u;const f=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){c++,s===!1&&r.onStart!==void 0&&r.onStart(h,o,c),s=!0},this.itemEnd=function(h){o++,r.onProgress!==void 0&&r.onProgress(h,o,c),o===c&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(h){r.onError!==void 0&&r.onError(h)},this.resolveURL=function(h){return u?u(h):h},this.setURLModifier=function(h){return u=h,this},this.addHandler=function(h,p){return f.push(h,p),this},this.removeHandler=function(h){const p=f.indexOf(h);return p!==-1&&f.splice(p,2),this},this.getHandler=function(h){for(let p=0,m=f.length;p<m;p+=2){const v=f[p],y=f[p+1];if(v.global&&(v.lastIndex=0),v.test(h))return y}return null}}}const l5=new sb;class Nu{constructor(e){this.manager=e!==void 0?e:l5,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}Nu.DEFAULT_MATERIAL_NAME="__DEFAULT";const ra={};class c5 extends Error{constructor(e,t){super(e),this.response=t}}class ab extends Nu{constructor(e){super(e),this.mimeType="",this.responseType=""}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=va.get(`file:${e}`);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(ra[e]!==void 0){ra[e].push({onLoad:t,onProgress:n,onError:r});return}ra[e]=[],ra[e].push({onLoad:t,onProgress:n,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(o).then(f=>{if(f.status===200||f.status===0){if(f.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||f.body===void 0||f.body.getReader===void 0)return f;const h=ra[e],p=f.body.getReader(),m=f.headers.get("X-File-Size")||f.headers.get("Content-Length"),v=m?parseInt(m):0,y=v!==0;let S=0;const _=new ReadableStream({start(g){b();function b(){p.read().then(({done:E,value:T})=>{if(E)g.close();else{S+=T.byteLength;const L=new ProgressEvent("progress",{lengthComputable:y,loaded:S,total:v});for(let C=0,P=h.length;C<P;C++){const N=h[C];N.onProgress&&N.onProgress(L)}g.enqueue(T),b()}},E=>{g.error(E)})}}});return new Response(_)}else throw new c5(`fetch for "${f.url}" responded with ${f.status}: ${f.statusText}`,f)}).then(f=>{switch(u){case"arraybuffer":return f.arrayBuffer();case"blob":return f.blob();case"document":return f.text().then(h=>new DOMParser().parseFromString(h,c));case"json":return f.json();default:if(c==="")return f.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return f.arrayBuffer().then(y=>v.decode(y))}}}).then(f=>{va.add(`file:${e}`,f);const h=ra[e];delete ra[e];for(let p=0,m=h.length;p<m;p++){const v=h[p];v.onLoad&&v.onLoad(f)}}).catch(f=>{const h=ra[e];if(h===void 0)throw this.manager.itemError(e),f;delete ra[e];for(let p=0,m=h.length;p<m;p++){const v=h[p];v.onError&&v.onError(f)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}const Ec=new WeakMap;class u5 extends Nu{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=va.get(`image:${e}`);if(o!==void 0){if(o.complete===!0)s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0);else{let p=Ec.get(o);p===void 0&&(p=[],Ec.set(o,p)),p.push({onLoad:t,onError:r})}return o}const c=dh("img");function u(){h(),t&&t(this);const p=Ec.get(this)||[];for(let m=0;m<p.length;m++){const v=p[m];v.onLoad&&v.onLoad(this)}Ec.delete(this),s.manager.itemEnd(e)}function f(p){h(),r&&r(p),va.remove(`image:${e}`);const m=Ec.get(this)||[];for(let v=0;v<m.length;v++){const y=m[v];y.onError&&y.onError(p)}Ec.delete(this),s.manager.itemError(e),s.manager.itemEnd(e)}function h(){c.removeEventListener("load",u,!1),c.removeEventListener("error",f,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",f,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),va.add(`image:${e}`,c),s.manager.itemStart(e),c.src=e,c}}class f5 extends Nu{constructor(e){super(e)}load(e,t,n,r){const s=new Oi,o=new u5(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class zx extends qn{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ut(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const l_=new $t,G2=new he,W2=new he;class Hx{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Nt(512,512),this.mapType=ks,this.map=null,this.mapPass=null,this.matrix=new $t,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fx,this._frameExtents=new Nt(1,1),this._viewportCount=1,this._viewports=[new un(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;G2.setFromMatrixPosition(e.matrixWorld),t.position.copy(G2),W2.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(W2),t.updateMatrixWorld(),l_.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(l_),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(l_)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class h5 extends Hx{constructor(){super(new Gi(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,n=fu*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height*this.aspect,s=e.distance||t.far;(n!==t.fov||r!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=r,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class d5 extends zx{constructor(e,t,n=0,r=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(qn.DEFAULT_UP),this.updateMatrix(),this.target=new qn,this.distance=n,this.angle=r,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new h5}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const X2=new $t,bf=new he,c_=new he;class p5 extends Hx{constructor(){super(new Gi(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Nt(4,2),this._viewportCount=6,this._viewports=[new un(2,1,1,1),new un(0,1,1,1),new un(3,1,1,1),new un(1,1,1,1),new un(3,0,1,1),new un(1,0,1,1)],this._cubeDirections=[new he(1,0,0),new he(-1,0,0),new he(0,0,1),new he(0,0,-1),new he(0,1,0),new he(0,-1,0)],this._cubeUps=[new he(0,1,0),new he(0,1,0),new he(0,1,0),new he(0,1,0),new he(0,0,1),new he(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),bf.setFromMatrixPosition(e.matrixWorld),n.position.copy(bf),c_.copy(n.position),c_.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(c_),n.updateMatrixWorld(),r.makeTranslation(-bf.x,-bf.y,-bf.z),X2.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(X2)}}class m5 extends zx{constructor(e,t,n=0,r=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new p5}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}let Vx=class extends q3{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,c=r+t,u=r-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=f*this.view.offsetX,o=s+f*this.view.width,c-=h*this.view.offsetY,u=c-h*this.view.height}this.projectionMatrix.makeOrthographic(s,o,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};class g5 extends Hx{constructor(){super(new Vx(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class _5 extends zx{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(qn.DEFAULT_UP),this.updateMatrix(),this.target=new qn,this.shadow=new g5}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Jf{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}const u_=new WeakMap;class v5 extends Nu{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=va.get(`image-bitmap:${e}`);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(f=>{if(u_.has(o)===!0)r&&r(u_.get(o)),s.manager.itemError(e),s.manager.itemEnd(e);else return t&&t(f),s.manager.itemEnd(e),f});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader;const u=fetch(e,c).then(function(f){return f.blob()}).then(function(f){return createImageBitmap(f,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(f){return va.add(`image-bitmap:${e}`,f),t&&t(f),s.manager.itemEnd(e),f}).catch(function(f){r&&r(f),u_.set(u,f),va.remove(`image-bitmap:${e}`),s.manager.itemError(e),s.manager.itemEnd(e)});va.add(`image-bitmap:${e}`,u),s.manager.itemStart(e)}}let x5=class extends Gi{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}};class y5{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}const Gx="\\[\\]\\.:\\/",S5=new RegExp("["+Gx+"]","g"),Wx="[^"+Gx+"]",M5="[^"+Gx.replace("\\.","")+"]",E5=/((?:WC+[\/:])*)/.source.replace("WC",Wx),T5=/(WCOD+)?/.source.replace("WCOD",M5),w5=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Wx),b5=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Wx),A5=new RegExp("^"+E5+T5+w5+b5+"$"),R5=["material","materials","bones","map"];class C5{constructor(e,t,n){const r=n||cn.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==void 0&&r.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,s=n.length;r!==s;++r)n[r].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class cn{constructor(e,t,n){this.path=t,this.parsedPath=n||cn.parseTrackName(t),this.node=cn.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new cn.Composite(e,t,n):new cn(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(S5,"")}static parseTrackName(e){const t=A5.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(r!==void 0&&r!==-1){const s=n.nodeName.substring(r+1);R5.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const c=s[o];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},r=n(e.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)e[t++]=n[r]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let r=0,s=n.length;r!==s;++r)n[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,r=t.propertyName;let s=t.propertyIndex;if(e||(e=cn.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let f=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===f){f=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(f!==void 0){if(e[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[f]}}const o=e[r];if(o===void 0){const f=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+r+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?c=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}cn.Composite=C5;cn.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};cn.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};cn.prototype.GetterByBindingType=[cn.prototype._getValue_direct,cn.prototype._getValue_array,cn.prototype._getValue_arrayElement,cn.prototype._getValue_toArray];cn.prototype.SetterByBindingTypeAndVersioning=[[cn.prototype._setValue_direct,cn.prototype._setValue_direct_setNeedsUpdate,cn.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[cn.prototype._setValue_array,cn.prototype._setValue_array_setNeedsUpdate,cn.prototype._setValue_array_setMatrixWorldNeedsUpdate],[cn.prototype._setValue_arrayElement,cn.prototype._setValue_arrayElement_setNeedsUpdate,cn.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[cn.prototype._setValue_fromArray,cn.prototype._setValue_fromArray_setNeedsUpdate,cn.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class $2{constructor(e=1,t=0,n=0){this.radius=e,this.phi=t,this.theta=n}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Wt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Wt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class P5 extends kl{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}function j2(i,e,t,n){const r=L5(n);switch(t){case b3:return i*e;case Rx:return i*e/r.components*r.byteLength;case Cx:return i*e/r.components*r.byteLength;case R3:return i*e*2/r.components*r.byteLength;case Px:return i*e*2/r.components*r.byteLength;case A3:return i*e*3/r.components*r.byteLength;case $r:return i*e*4/r.components*r.byteLength;case Lx:return i*e*4/r.components*r.byteLength;case Gp:case Wp:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case Xp:case $p:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Dv:case Uv:return Math.max(i,16)*Math.max(e,8)/4;case Iv:case Nv:return Math.max(i,8)*Math.max(e,8)/2;case Ov:case Fv:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case kv:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Bv:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case zv:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case Hv:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case Vv:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case Gv:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case Wv:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case Xv:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case $v:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case jv:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case qv:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case Yv:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case Kv:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case Zv:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case Qv:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case jp:case Jv:case e1:return Math.ceil(i/4)*Math.ceil(e/4)*16;case C3:case t1:return Math.ceil(i/4)*Math.ceil(e/4)*8;case n1:case i1:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function L5(i){switch(i){case ks:case E3:return{byteLength:1,components:1};case oh:case T3:case Eh:return{byteLength:2,components:1};case bx:case Ax:return{byteLength:2,components:4};case Pl:case wx:case us:return{byteLength:4,components:1};case w3:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Tx}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Tx);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function ob(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function I5(i){const e=new WeakMap;function t(c,u){const f=c.array,h=c.usage,p=f.byteLength,m=i.createBuffer();i.bindBuffer(u,m),i.bufferData(u,f,h),c.onUploadCallback();let v;if(f instanceof Float32Array)v=i.FLOAT;else if(typeof Float16Array<"u"&&f instanceof Float16Array)v=i.HALF_FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=i.HALF_FLOAT:v=i.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=i.SHORT;else if(f instanceof Uint32Array)v=i.UNSIGNED_INT;else if(f instanceof Int32Array)v=i.INT;else if(f instanceof Int8Array)v=i.BYTE;else if(f instanceof Uint8Array)v=i.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:m,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,f){const h=u.array,p=u.updateRanges;if(i.bindBuffer(f,c),p.length===0)i.bufferSubData(f,0,h);else{p.sort((v,y)=>v.start-y.start);let m=0;for(let v=1;v<p.length;v++){const y=p[m],S=p[v];S.start<=y.start+y.count+1?y.count=Math.max(y.count,S.start+S.count-y.start):(++m,p[m]=S)}p.length=m+1;for(let v=0,y=p.length;v<y;v++){const S=p[v];i.bufferSubData(f,S.start*h.BYTES_PER_ELEMENT,h,S.start,S.count)}u.clearUpdateRanges()}u.onUploadCallback()}function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(i.deleteBuffer(u.buffer),e.delete(c))}function o(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const h=e.get(c);(!h||h.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=e.get(c);if(f===void 0)e.set(c,t(c,u));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,u),f.version=c.version}}return{get:r,remove:s,update:o}}var D5=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,N5=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,U5=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,O5=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,F5=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,k5=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,B5=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,z5=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,H5=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,V5=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,G5=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,W5=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,X5=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,$5=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,j5=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,q5=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Y5=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,K5=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Z5=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Q5=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,J5=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,eL=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,tL=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,nL=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,iL=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,rL=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,sL=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,aL=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,oL=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,lL=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,cL="gl_FragColor = linearToOutputTexel( gl_FragColor );",uL=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,fL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,hL=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,dL=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,pL=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,mL=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,gL=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,_L=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,vL=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,xL=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,yL=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,SL=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,ML=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,EL=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,TL=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,wL=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,bL=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,AL=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,RL=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,CL=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,PL=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,LL=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,IL=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,DL=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,NL=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,UL=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,OL=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,FL=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,kL=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,BL=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,zL=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,HL=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,VL=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,GL=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,WL=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,XL=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,$L=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,jL=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,qL=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,YL=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,KL=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,ZL=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,QL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,JL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,eI=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,tI=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,nI=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,iI=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,rI=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,sI=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,aI=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,oI=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,lI=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,cI=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,uI=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,fI=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,hI=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,dI=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,pI=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,mI=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,gI=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,_I=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,vI=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,xI=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,yI=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,SI=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,MI=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,EI=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,TI=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,wI=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,bI=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,AI=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,RI=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,CI=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,PI=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,LI=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const II=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,DI=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,NI=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,UI=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,OI=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,FI=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,kI=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,BI=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,zI=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,HI=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,VI=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,GI=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,WI=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,XI=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,$I=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,jI=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qI=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,YI=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KI=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,ZI=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,QI=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,JI=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,eD=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tD=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nD=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,iD=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rD=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sD=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aD=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,oD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,lD=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cD=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,uD=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,fD=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Ft={alphahash_fragment:D5,alphahash_pars_fragment:N5,alphamap_fragment:U5,alphamap_pars_fragment:O5,alphatest_fragment:F5,alphatest_pars_fragment:k5,aomap_fragment:B5,aomap_pars_fragment:z5,batching_pars_vertex:H5,batching_vertex:V5,begin_vertex:G5,beginnormal_vertex:W5,bsdfs:X5,iridescence_fragment:$5,bumpmap_pars_fragment:j5,clipping_planes_fragment:q5,clipping_planes_pars_fragment:Y5,clipping_planes_pars_vertex:K5,clipping_planes_vertex:Z5,color_fragment:Q5,color_pars_fragment:J5,color_pars_vertex:eL,color_vertex:tL,common:nL,cube_uv_reflection_fragment:iL,defaultnormal_vertex:rL,displacementmap_pars_vertex:sL,displacementmap_vertex:aL,emissivemap_fragment:oL,emissivemap_pars_fragment:lL,colorspace_fragment:cL,colorspace_pars_fragment:uL,envmap_fragment:fL,envmap_common_pars_fragment:hL,envmap_pars_fragment:dL,envmap_pars_vertex:pL,envmap_physical_pars_fragment:wL,envmap_vertex:mL,fog_vertex:gL,fog_pars_vertex:_L,fog_fragment:vL,fog_pars_fragment:xL,gradientmap_pars_fragment:yL,lightmap_pars_fragment:SL,lights_lambert_fragment:ML,lights_lambert_pars_fragment:EL,lights_pars_begin:TL,lights_toon_fragment:bL,lights_toon_pars_fragment:AL,lights_phong_fragment:RL,lights_phong_pars_fragment:CL,lights_physical_fragment:PL,lights_physical_pars_fragment:LL,lights_fragment_begin:IL,lights_fragment_maps:DL,lights_fragment_end:NL,logdepthbuf_fragment:UL,logdepthbuf_pars_fragment:OL,logdepthbuf_pars_vertex:FL,logdepthbuf_vertex:kL,map_fragment:BL,map_pars_fragment:zL,map_particle_fragment:HL,map_particle_pars_fragment:VL,metalnessmap_fragment:GL,metalnessmap_pars_fragment:WL,morphinstance_vertex:XL,morphcolor_vertex:$L,morphnormal_vertex:jL,morphtarget_pars_vertex:qL,morphtarget_vertex:YL,normal_fragment_begin:KL,normal_fragment_maps:ZL,normal_pars_fragment:QL,normal_pars_vertex:JL,normal_vertex:eI,normalmap_pars_fragment:tI,clearcoat_normal_fragment_begin:nI,clearcoat_normal_fragment_maps:iI,clearcoat_pars_fragment:rI,iridescence_pars_fragment:sI,opaque_fragment:aI,packing:oI,premultiplied_alpha_fragment:lI,project_vertex:cI,dithering_fragment:uI,dithering_pars_fragment:fI,roughnessmap_fragment:hI,roughnessmap_pars_fragment:dI,shadowmap_pars_fragment:pI,shadowmap_pars_vertex:mI,shadowmap_vertex:gI,shadowmask_pars_fragment:_I,skinbase_vertex:vI,skinning_pars_vertex:xI,skinning_vertex:yI,skinnormal_vertex:SI,specularmap_fragment:MI,specularmap_pars_fragment:EI,tonemapping_fragment:TI,tonemapping_pars_fragment:wI,transmission_fragment:bI,transmission_pars_fragment:AI,uv_pars_fragment:RI,uv_pars_vertex:CI,uv_vertex:PI,worldpos_vertex:LI,background_vert:II,background_frag:DI,backgroundCube_vert:NI,backgroundCube_frag:UI,cube_vert:OI,cube_frag:FI,depth_vert:kI,depth_frag:BI,distanceRGBA_vert:zI,distanceRGBA_frag:HI,equirect_vert:VI,equirect_frag:GI,linedashed_vert:WI,linedashed_frag:XI,meshbasic_vert:$I,meshbasic_frag:jI,meshlambert_vert:qI,meshlambert_frag:YI,meshmatcap_vert:KI,meshmatcap_frag:ZI,meshnormal_vert:QI,meshnormal_frag:JI,meshphong_vert:eD,meshphong_frag:tD,meshphysical_vert:nD,meshphysical_frag:iD,meshtoon_vert:rD,meshtoon_frag:sD,points_vert:aD,points_frag:oD,shadow_vert:lD,shadow_frag:cD,sprite_vert:uD,sprite_frag:fD},lt={common:{diffuse:{value:new Ut(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Gt},alphaMap:{value:null},alphaMapTransform:{value:new Gt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Gt}},envmap:{envMap:{value:null},envMapRotation:{value:new Gt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Gt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Gt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Gt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Gt},normalScale:{value:new Nt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Gt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Gt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Gt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Gt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ut(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ut(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Gt},alphaTest:{value:0},uvTransform:{value:new Gt}},sprite:{diffuse:{value:new Ut(16777215)},opacity:{value:1},center:{value:new Nt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Gt},alphaMap:{value:null},alphaMapTransform:{value:new Gt},alphaTest:{value:0}}},As={basic:{uniforms:zi([lt.common,lt.specularmap,lt.envmap,lt.aomap,lt.lightmap,lt.fog]),vertexShader:Ft.meshbasic_vert,fragmentShader:Ft.meshbasic_frag},lambert:{uniforms:zi([lt.common,lt.specularmap,lt.envmap,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.fog,lt.lights,{emissive:{value:new Ut(0)}}]),vertexShader:Ft.meshlambert_vert,fragmentShader:Ft.meshlambert_frag},phong:{uniforms:zi([lt.common,lt.specularmap,lt.envmap,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.fog,lt.lights,{emissive:{value:new Ut(0)},specular:{value:new Ut(1118481)},shininess:{value:30}}]),vertexShader:Ft.meshphong_vert,fragmentShader:Ft.meshphong_frag},standard:{uniforms:zi([lt.common,lt.envmap,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.roughnessmap,lt.metalnessmap,lt.fog,lt.lights,{emissive:{value:new Ut(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ft.meshphysical_vert,fragmentShader:Ft.meshphysical_frag},toon:{uniforms:zi([lt.common,lt.aomap,lt.lightmap,lt.emissivemap,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.gradientmap,lt.fog,lt.lights,{emissive:{value:new Ut(0)}}]),vertexShader:Ft.meshtoon_vert,fragmentShader:Ft.meshtoon_frag},matcap:{uniforms:zi([lt.common,lt.bumpmap,lt.normalmap,lt.displacementmap,lt.fog,{matcap:{value:null}}]),vertexShader:Ft.meshmatcap_vert,fragmentShader:Ft.meshmatcap_frag},points:{uniforms:zi([lt.points,lt.fog]),vertexShader:Ft.points_vert,fragmentShader:Ft.points_frag},dashed:{uniforms:zi([lt.common,lt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ft.linedashed_vert,fragmentShader:Ft.linedashed_frag},depth:{uniforms:zi([lt.common,lt.displacementmap]),vertexShader:Ft.depth_vert,fragmentShader:Ft.depth_frag},normal:{uniforms:zi([lt.common,lt.bumpmap,lt.normalmap,lt.displacementmap,{opacity:{value:1}}]),vertexShader:Ft.meshnormal_vert,fragmentShader:Ft.meshnormal_frag},sprite:{uniforms:zi([lt.sprite,lt.fog]),vertexShader:Ft.sprite_vert,fragmentShader:Ft.sprite_frag},background:{uniforms:{uvTransform:{value:new Gt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Ft.background_vert,fragmentShader:Ft.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Gt}},vertexShader:Ft.backgroundCube_vert,fragmentShader:Ft.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Ft.cube_vert,fragmentShader:Ft.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ft.equirect_vert,fragmentShader:Ft.equirect_frag},distanceRGBA:{uniforms:zi([lt.common,lt.displacementmap,{referencePosition:{value:new he},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ft.distanceRGBA_vert,fragmentShader:Ft.distanceRGBA_frag},shadow:{uniforms:zi([lt.lights,lt.fog,{color:{value:new Ut(0)},opacity:{value:1}}]),vertexShader:Ft.shadow_vert,fragmentShader:Ft.shadow_frag}};As.physical={uniforms:zi([As.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Gt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Gt},clearcoatNormalScale:{value:new Nt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Gt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Gt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Gt},sheen:{value:0},sheenColor:{value:new Ut(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Gt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Gt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Gt},transmissionSamplerSize:{value:new Nt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Gt},attenuationDistance:{value:0},attenuationColor:{value:new Ut(0)},specularColor:{value:new Ut(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Gt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Gt},anisotropyVector:{value:new Nt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Gt}}]),vertexShader:Ft.meshphysical_vert,fragmentShader:Ft.meshphysical_frag};const sp={r:0,b:0,g:0},Jo=new Co,hD=new $t;function dD(i,e,t,n,r,s,o){const c=new Ut(0);let u=s===!0?0:1,f,h,p=null,m=0,v=null;function y(E){let T=E.isScene===!0?E.background:null;return T&&T.isTexture&&(T=(E.backgroundBlurriness>0?t:e).get(T)),T}function S(E){let T=!1;const L=y(E);L===null?g(c,u):L&&L.isColor&&(g(L,1),T=!0);const C=i.xr.getEnvironmentBlendMode();C==="additive"?n.buffers.color.setClear(0,0,0,1,o):C==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||T)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function _(E,T){const L=y(T);L&&(L.isCubeTexture||L.mapping===km)?(h===void 0&&(h=new Mi(new Nx(1,1,1),new Po({name:"BackgroundCubeMaterial",uniforms:hu(As.backgroundCube.uniforms),vertexShader:As.backgroundCube.vertexShader,fragmentShader:As.backgroundCube.fragmentShader,side:lr,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(C,P,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),Jo.copy(T.backgroundRotation),Jo.x*=-1,Jo.y*=-1,Jo.z*=-1,L.isCubeTexture&&L.isRenderTargetTexture===!1&&(Jo.y*=-1,Jo.z*=-1),h.material.uniforms.envMap.value=L,h.material.uniforms.flipEnvMap.value=L.isCubeTexture&&L.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=T.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(hD.makeRotationFromEuler(Jo)),h.material.toneMapped=Zt.getTransfer(L.colorSpace)!==dn,(p!==L||m!==L.version||v!==i.toneMapping)&&(h.material.needsUpdate=!0,p=L,m=L.version,v=i.toneMapping),h.layers.enableAll(),E.unshift(h,h.geometry,h.material,0,0,null)):L&&L.isTexture&&(f===void 0&&(f=new Mi(new Bm(2,2),new Po({name:"BackgroundMaterial",uniforms:hu(As.background.uniforms),vertexShader:As.background.vertexShader,fragmentShader:As.background.fragmentShader,side:Ma,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(f)),f.material.uniforms.t2D.value=L,f.material.uniforms.backgroundIntensity.value=T.backgroundIntensity,f.material.toneMapped=Zt.getTransfer(L.colorSpace)!==dn,L.matrixAutoUpdate===!0&&L.updateMatrix(),f.material.uniforms.uvTransform.value.copy(L.matrix),(p!==L||m!==L.version||v!==i.toneMapping)&&(f.material.needsUpdate=!0,p=L,m=L.version,v=i.toneMapping),f.layers.enableAll(),E.unshift(f,f.geometry,f.material,0,0,null))}function g(E,T){E.getRGB(sp,j3(i)),n.buffers.color.setClear(sp.r,sp.g,sp.b,T,o)}function b(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),f!==void 0&&(f.geometry.dispose(),f.material.dispose(),f=void 0)}return{getClearColor:function(){return c},setClearColor:function(E,T=1){c.set(E),u=T,g(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(E){u=E,g(c,u)},render:S,addToRenderList:_,dispose:b}}function pD(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=m(null);let s=r,o=!1;function c(w,D,X,z,G){let Z=!1;const q=p(z,X,D);s!==q&&(s=q,f(s.object)),Z=v(w,z,X,G),Z&&y(w,z,X,G),G!==null&&e.update(G,i.ELEMENT_ARRAY_BUFFER),(Z||o)&&(o=!1,T(w,D,X,z),G!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(G).buffer))}function u(){return i.createVertexArray()}function f(w){return i.bindVertexArray(w)}function h(w){return i.deleteVertexArray(w)}function p(w,D,X){const z=X.wireframe===!0;let G=n[w.id];G===void 0&&(G={},n[w.id]=G);let Z=G[D.id];Z===void 0&&(Z={},G[D.id]=Z);let q=Z[z];return q===void 0&&(q=m(u()),Z[z]=q),q}function m(w){const D=[],X=[],z=[];for(let G=0;G<t;G++)D[G]=0,X[G]=0,z[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:D,enabledAttributes:X,attributeDivisors:z,object:w,attributes:{},index:null}}function v(w,D,X,z){const G=s.attributes,Z=D.attributes;let q=0;const K=X.getAttributes();for(const B in K)if(K[B].location>=0){const oe=G[B];let V=Z[B];if(V===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(V=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(V=w.instanceColor)),oe===void 0||oe.attribute!==V||V&&oe.data!==V.data)return!0;q++}return s.attributesNum!==q||s.index!==z}function y(w,D,X,z){const G={},Z=D.attributes;let q=0;const K=X.getAttributes();for(const B in K)if(K[B].location>=0){let oe=Z[B];oe===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(oe=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(oe=w.instanceColor));const V={};V.attribute=oe,oe&&oe.data&&(V.data=oe.data),G[B]=V,q++}s.attributes=G,s.attributesNum=q,s.index=z}function S(){const w=s.newAttributes;for(let D=0,X=w.length;D<X;D++)w[D]=0}function _(w){g(w,0)}function g(w,D){const X=s.newAttributes,z=s.enabledAttributes,G=s.attributeDivisors;X[w]=1,z[w]===0&&(i.enableVertexAttribArray(w),z[w]=1),G[w]!==D&&(i.vertexAttribDivisor(w,D),G[w]=D)}function b(){const w=s.newAttributes,D=s.enabledAttributes;for(let X=0,z=D.length;X<z;X++)D[X]!==w[X]&&(i.disableVertexAttribArray(X),D[X]=0)}function E(w,D,X,z,G,Z,q){q===!0?i.vertexAttribIPointer(w,D,X,G,Z):i.vertexAttribPointer(w,D,X,z,G,Z)}function T(w,D,X,z){S();const G=z.attributes,Z=X.getAttributes(),q=D.defaultAttributeValues;for(const K in Z){const B=Z[K];if(B.location>=0){let ie=G[K];if(ie===void 0&&(K==="instanceMatrix"&&w.instanceMatrix&&(ie=w.instanceMatrix),K==="instanceColor"&&w.instanceColor&&(ie=w.instanceColor)),ie!==void 0){const oe=ie.normalized,V=ie.itemSize,de=e.get(ie);if(de===void 0)continue;const Ge=de.buffer,j=de.type,fe=de.bytesPerElement,Re=j===i.INT||j===i.UNSIGNED_INT||ie.gpuType===wx;if(ie.isInterleavedBufferAttribute){const Ee=ie.data,Fe=Ee.stride,He=ie.offset;if(Ee.isInstancedInterleavedBuffer){for(let $e=0;$e<B.locationSize;$e++)g(B.location+$e,Ee.meshPerAttribute);w.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=Ee.meshPerAttribute*Ee.count)}else for(let $e=0;$e<B.locationSize;$e++)_(B.location+$e);i.bindBuffer(i.ARRAY_BUFFER,Ge);for(let $e=0;$e<B.locationSize;$e++)E(B.location+$e,V/B.locationSize,j,oe,Fe*fe,(He+V/B.locationSize*$e)*fe,Re)}else{if(ie.isInstancedBufferAttribute){for(let Ee=0;Ee<B.locationSize;Ee++)g(B.location+Ee,ie.meshPerAttribute);w.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=ie.meshPerAttribute*ie.count)}else for(let Ee=0;Ee<B.locationSize;Ee++)_(B.location+Ee);i.bindBuffer(i.ARRAY_BUFFER,Ge);for(let Ee=0;Ee<B.locationSize;Ee++)E(B.location+Ee,V/B.locationSize,j,oe,V*fe,V/B.locationSize*Ee*fe,Re)}}else if(q!==void 0){const oe=q[K];if(oe!==void 0)switch(oe.length){case 2:i.vertexAttrib2fv(B.location,oe);break;case 3:i.vertexAttrib3fv(B.location,oe);break;case 4:i.vertexAttrib4fv(B.location,oe);break;default:i.vertexAttrib1fv(B.location,oe)}}}}b()}function L(){N();for(const w in n){const D=n[w];for(const X in D){const z=D[X];for(const G in z)h(z[G].object),delete z[G];delete D[X]}delete n[w]}}function C(w){if(n[w.id]===void 0)return;const D=n[w.id];for(const X in D){const z=D[X];for(const G in z)h(z[G].object),delete z[G];delete D[X]}delete n[w.id]}function P(w){for(const D in n){const X=n[D];if(X[w.id]===void 0)continue;const z=X[w.id];for(const G in z)h(z[G].object),delete z[G];delete X[w.id]}}function N(){A(),o=!0,s!==r&&(s=r,f(s.object))}function A(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:c,reset:N,resetDefaultState:A,dispose:L,releaseStatesOfGeometry:C,releaseStatesOfProgram:P,initAttributes:S,enableAttribute:_,disableUnusedAttributes:b}}function mD(i,e,t){let n;function r(f){n=f}function s(f,h){i.drawArrays(n,f,h),t.update(h,n,1)}function o(f,h,p){p!==0&&(i.drawArraysInstanced(n,f,h,p),t.update(h,n,p))}function c(f,h,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,h,0,p);let v=0;for(let y=0;y<p;y++)v+=h[y];t.update(v,n,1)}function u(f,h,p,m){if(p===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let y=0;y<f.length;y++)o(f[y],h[y],m[y]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,h,0,m,0,p);let y=0;for(let S=0;S<p;S++)y+=h[S]*m[S];t.update(y,n,1)}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function gD(i,e,t,n){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const P=e.get("EXT_texture_filter_anisotropic");r=i.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(P){return!(P!==$r&&n.convert(P)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(P){const N=P===Eh&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(P!==ks&&n.convert(P)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&P!==us&&!N)}function u(P){if(P==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";P="mediump"}return P==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=t.precision!==void 0?t.precision:"highp";const h=u(f);h!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",h,"instead."),f=h);const p=t.logarithmicDepthBuffer===!0,m=t.reverseDepthBuffer===!0&&e.has("EXT_clip_control"),v=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),y=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),S=i.getParameter(i.MAX_TEXTURE_SIZE),_=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),g=i.getParameter(i.MAX_VERTEX_ATTRIBS),b=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),E=i.getParameter(i.MAX_VARYING_VECTORS),T=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),L=y>0,C=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:o,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:p,reverseDepthBuffer:m,maxTextures:v,maxVertexTextures:y,maxTextureSize:S,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:b,maxVaryings:E,maxFragmentUniforms:T,vertexTextures:L,maxSamples:C}}function _D(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new rr,c=new Gt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||r;return r=m,n=p.length,v},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=h(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,S=p.clipIntersection,_=p.clipShadows,g=i.get(p);if(!r||y===null||y.length===0||s&&!_)s?h(null):f();else{const b=s?0:n,E=b*4;let T=g.clippingState||null;u.value=T,T=h(y,m,E,v);for(let L=0;L!==E;++L)T[L]=t[L];g.clippingState=T,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=b}};function f(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(p,m,v,y){const S=p!==null?p.length:0;let _=null;if(S!==0){if(_=u.value,y!==!0||_===null){const g=v+S*4,b=m.matrixWorldInverse;c.getNormalMatrix(b),(_===null||_.length<g)&&(_=new Float32Array(g));for(let E=0,T=v;E!==S;++E,T+=4)o.copy(p[E]).applyMatrix4(b,c),o.normal.toArray(_,T),_[T+3]=o.constant}u.value=_,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,_}}function vD(i){let e=new WeakMap;function t(o,c){return c===Pv?o.mapping=lu:c===Lv&&(o.mapping=cu),o}function n(o){if(o&&o.isTexture){const c=o.mapping;if(c===Pv||c===Lv)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const f=new N4(u.height);return f.fromEquirectangularTexture(i,o),e.set(o,f),o.addEventListener("dispose",r),t(f.texture,o.mapping)}else return null}}return o}function r(o){const c=o.target;c.removeEventListener("dispose",r);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}const Xc=4,q2=[.125,.215,.35,.446,.526,.582],gl=20,f_=new Vx,Y2=new Ut;let h_=null,d_=0,p_=0,m_=!1;const ul=(1+Math.sqrt(5))/2,Tc=1/ul,K2=[new he(-ul,Tc,0),new he(ul,Tc,0),new he(-Tc,0,ul),new he(Tc,0,ul),new he(0,ul,-Tc),new he(0,ul,Tc),new he(-1,1,-1),new he(1,1,-1),new he(-1,1,1),new he(1,1,1)],xD=new he;let Z2=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100,s={}){const{size:o=256,position:c=xD}=s;h_=this._renderer.getRenderTarget(),d_=this._renderer.getActiveCubeFace(),p_=this._renderer.getActiveMipmapLevel(),m_=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(e,n,r,u,c),t>0&&this._blur(u,0,0,t),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=eE(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=J2(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(h_,d_,p_),this._renderer.xr.enabled=m_,e.scissorTest=!1,ap(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===lu||e.mapping===cu?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),h_=this._renderer.getRenderTarget(),d_=this._renderer.getActiveCubeFace(),p_=this._renderer.getActiveMipmapLevel(),m_=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Wi,minFilter:Wi,generateMipmaps:!1,type:Eh,format:$r,colorSpace:ji,depthBuffer:!1},r=Q2(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Q2(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=yD(s)),this._blurMaterial=SD(s,e,t)}return r}_compileMaterial(e){const t=new Mi(this._lodPlanes[0],e);this._renderer.compile(t,f_)}_sceneToCubeUV(e,t,n,r,s){const u=new Gi(90,1,t,n),f=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,v=p.toneMapping;p.getClearColor(Y2),p.toneMapping=bo,p.autoClear=!1;const y=new fs({name:"PMREM.Background",side:lr,depthWrite:!1,depthTest:!1}),S=new Mi(new Nx,y);let _=!1;const g=e.background;g?g.isColor&&(y.color.copy(g),e.background=null,_=!0):(y.color.copy(Y2),_=!0);for(let b=0;b<6;b++){const E=b%3;E===0?(u.up.set(0,f[b],0),u.position.set(s.x,s.y,s.z),u.lookAt(s.x+h[b],s.y,s.z)):E===1?(u.up.set(0,0,f[b]),u.position.set(s.x,s.y,s.z),u.lookAt(s.x,s.y+h[b],s.z)):(u.up.set(0,f[b],0),u.position.set(s.x,s.y,s.z),u.lookAt(s.x,s.y,s.z+h[b]));const T=this._cubeSize;ap(r,E*T,b>2?T:0,T,T),p.setRenderTarget(r),_&&p.render(S,u),p.render(e,u)}S.geometry.dispose(),S.material.dispose(),p.toneMapping=v,p.autoClear=m,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===lu||e.mapping===cu;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=eE()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=J2());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new Mi(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;ap(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,f_)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=K2[(r-s-1)%K2.length];this._blur(e,s-1,s,o,c)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,c){const u=this._renderer,f=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,p=new Mi(this._lodPlanes[r],f),m=f.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*gl-1),S=s/y,_=isFinite(s)?1+Math.floor(h*S):gl;_>gl&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${gl}`);const g=[];let b=0;for(let P=0;P<gl;++P){const N=P/S,A=Math.exp(-N*N/2);g.push(A),P===0?b+=A:P<_&&(b+=2*A)}for(let P=0;P<g.length;P++)g[P]=g[P]/b;m.envMap.value=e.texture,m.samples.value=_,m.weights.value=g,m.latitudinal.value=o==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=y,m.mipInt.value=E-n;const T=this._sizeLods[r],L=3*T*(r>E-Xc?r-E+Xc:0),C=4*(this._cubeSize-T);ap(t,L,C,3*T,2*T),u.setRenderTarget(t),u.render(p,f_)}};function yD(i){const e=[],t=[],n=[];let r=i;const s=i-Xc+1+q2.length;for(let o=0;o<s;o++){const c=Math.pow(2,r);t.push(c);let u=1/c;o>i-Xc?u=q2[o-i+Xc-1]:o===0&&(u=0),n.push(u);const f=1/(c-2),h=-f,p=1+f,m=[h,h,p,h,p,p,h,h,p,p,h,p],v=6,y=6,S=3,_=2,g=1,b=new Float32Array(S*y*v),E=new Float32Array(_*y*v),T=new Float32Array(g*y*v);for(let C=0;C<v;C++){const P=C%3*2/3-1,N=C>2?0:-1,A=[P,N,0,P+2/3,N,0,P+2/3,N+1,0,P,N,0,P+2/3,N+1,0,P,N+1,0];b.set(A,S*y*C),E.set(m,_*y*C);const w=[C,C,C,C,C,C];T.set(w,g*y*C)}const L=new Ca;L.setAttribute("position",new $i(b,S)),L.setAttribute("uv",new $i(E,_)),L.setAttribute("faceIndex",new $i(T,g)),e.push(L),r>Xc&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Q2(i,e,t){const n=new Ll(i,e,t);return n.texture.mapping=km,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ap(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function SD(i,e,t){const n=new Float32Array(gl),r=new he(0,1,0);return new Po({name:"SphericalGaussianBlur",defines:{n:gl,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Xx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:wo,depthTest:!1,depthWrite:!1})}function J2(){return new Po({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Xx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:wo,depthTest:!1,depthWrite:!1})}function eE(){return new Po({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Xx(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:wo,depthTest:!1,depthWrite:!1})}function Xx(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function MD(i){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,f=u===Pv||u===Lv,h=u===lu||u===cu;if(f||h){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new Z2(i)),p=f?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const v=c.image;return f&&v&&v.height>0||h&&v&&r(v)?(t===null&&(t=new Z2(i)),p=f?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function r(c){let u=0;const f=6;for(let h=0;h<f;h++)c[h]!==void 0&&u++;return u===f}function s(c){const u=c.target;u.removeEventListener("dispose",s);const f=e.get(u);f!==void 0&&(e.delete(u),f.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function ED(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&eu("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function TD(i,e,t,n){const r={},s=new WeakMap;function o(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);m.removeEventListener("dispose",o),delete r[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return r[m.id]===!0||(m.addEventListener("dispose",o),r[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const v in m)e.update(m[v],i.ARRAY_BUFFER)}function f(p){const m=[],v=p.index,y=p.attributes.position;let S=0;if(v!==null){const b=v.array;S=v.version;for(let E=0,T=b.length;E<T;E+=3){const L=b[E+0],C=b[E+1],P=b[E+2];m.push(L,C,C,P,P,L)}}else if(y!==void 0){const b=y.array;S=y.version;for(let E=0,T=b.length/3-1;E<T;E+=3){const L=E+0,C=E+1,P=E+2;m.push(L,C,C,P,P,L)}}else return;const _=new(F3(m)?W3:G3)(m,1);_.version=S;const g=s.get(p);g&&e.remove(g),s.set(p,_)}function h(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&f(p)}else f(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:h}}function wD(i,e,t){let n;function r(m){n=m}let s,o;function c(m){s=m.type,o=m.bytesPerElement}function u(m,v){i.drawElements(n,v,s,m*o),t.update(v,n,1)}function f(m,v,y){y!==0&&(i.drawElementsInstanced(n,v,s,m*o,y),t.update(v,n,y))}function h(m,v,y){if(y===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,s,m,0,y);let _=0;for(let g=0;g<y;g++)_+=v[g];t.update(_,n,1)}function p(m,v,y,S){if(y===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let g=0;g<m.length;g++)f(m[g]/o,v[g],S[g]);else{_.multiDrawElementsInstancedWEBGL(n,v,0,s,m,0,S,0,y);let g=0;for(let b=0;b<y;b++)g+=v[b]*S[b];t.update(g,n,1)}}this.setMode=r,this.setIndex=c,this.render=u,this.renderInstances=f,this.renderMultiDraw=h,this.renderMultiDrawInstances=p}function bD(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,c){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=c*(s/3);break;case i.LINES:t.lines+=c*(s/2);break;case i.LINE_STRIP:t.lines+=c*(s-1);break;case i.LINE_LOOP:t.lines+=c*s;break;case i.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function AD(i,e,t){const n=new WeakMap,r=new un;function s(o,c,u){const f=o.morphTargetInfluences,h=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=h!==void 0?h.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let w=function(){N.dispose(),n.delete(c),c.removeEventListener("dispose",w)};var v=w;m!==void 0&&m.texture.dispose();const y=c.morphAttributes.position!==void 0,S=c.morphAttributes.normal!==void 0,_=c.morphAttributes.color!==void 0,g=c.morphAttributes.position||[],b=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let T=0;y===!0&&(T=1),S===!0&&(T=2),_===!0&&(T=3);let L=c.attributes.position.count*T,C=1;L>e.maxTextureSize&&(C=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const P=new Float32Array(L*C*4*p),N=new B3(P,L,C,p);N.type=us,N.needsUpdate=!0;const A=T*4;for(let D=0;D<p;D++){const X=g[D],z=b[D],G=E[D],Z=L*C*4*D;for(let q=0;q<X.count;q++){const K=q*A;y===!0&&(r.fromBufferAttribute(X,q),P[Z+K+0]=r.x,P[Z+K+1]=r.y,P[Z+K+2]=r.z,P[Z+K+3]=0),S===!0&&(r.fromBufferAttribute(z,q),P[Z+K+4]=r.x,P[Z+K+5]=r.y,P[Z+K+6]=r.z,P[Z+K+7]=0),_===!0&&(r.fromBufferAttribute(G,q),P[Z+K+8]=r.x,P[Z+K+9]=r.y,P[Z+K+10]=r.z,P[Z+K+11]=G.itemSize===4?r.w:1)}}m={count:p,texture:N,size:new Nt(L,C)},n.set(c,m),c.addEventListener("dispose",w)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let y=0;for(let _=0;_<f.length;_++)y+=f[_];const S=c.morphTargetsRelative?1:1-y;u.getUniforms().setValue(i,"morphTargetBaseInfluence",S),u.getUniforms().setValue(i,"morphTargetInfluences",f)}u.getUniforms().setValue(i,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(i,"morphTargetsTextureSize",m.size)}return{update:s}}function RD(i,e,t,n){let r=new WeakMap;function s(u){const f=n.render.frame,h=u.geometry,p=e.get(u,h);if(r.get(p)!==f&&(e.update(p),r.set(p,f)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),r.get(u)!==f&&(t.update(u.instanceMatrix,i.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,i.ARRAY_BUFFER),r.set(u,f))),u.isSkinnedMesh){const m=u.skeleton;r.get(m)!==f&&(m.update(),r.set(m,f))}return p}function o(){r=new WeakMap}function c(u){const f=u.target;f.removeEventListener("dispose",c),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return{update:s,dispose:o}}const lb=new Oi,tE=new eb(1,1),cb=new B3,ub=new _4,fb=new Y3,nE=[],iE=[],rE=new Float32Array(16),sE=new Float32Array(9),aE=new Float32Array(4);function Uu(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=nE[r];if(s===void 0&&(s=new Float32Array(r),nE[r]=s),e!==0){n.toArray(s,0);for(let o=1,c=0;o!==e;++o)c+=t,i[o].toArray(s,c)}return s}function ei(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function ti(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function zm(i,e){let t=iE[e];t===void 0&&(t=new Int32Array(e),iE[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function CD(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function PD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ei(t,e))return;i.uniform2fv(this.addr,e),ti(t,e)}}function LD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ei(t,e))return;i.uniform3fv(this.addr,e),ti(t,e)}}function ID(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ei(t,e))return;i.uniform4fv(this.addr,e),ti(t,e)}}function DD(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(ei(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),ti(t,e)}else{if(ei(t,n))return;aE.set(n),i.uniformMatrix2fv(this.addr,!1,aE),ti(t,n)}}function ND(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(ei(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),ti(t,e)}else{if(ei(t,n))return;sE.set(n),i.uniformMatrix3fv(this.addr,!1,sE),ti(t,n)}}function UD(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(ei(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),ti(t,e)}else{if(ei(t,n))return;rE.set(n),i.uniformMatrix4fv(this.addr,!1,rE),ti(t,n)}}function OD(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function FD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ei(t,e))return;i.uniform2iv(this.addr,e),ti(t,e)}}function kD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ei(t,e))return;i.uniform3iv(this.addr,e),ti(t,e)}}function BD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ei(t,e))return;i.uniform4iv(this.addr,e),ti(t,e)}}function zD(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function HD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ei(t,e))return;i.uniform2uiv(this.addr,e),ti(t,e)}}function VD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ei(t,e))return;i.uniform3uiv(this.addr,e),ti(t,e)}}function GD(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ei(t,e))return;i.uniform4uiv(this.addr,e),ti(t,e)}}function WD(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);let s;this.type===i.SAMPLER_2D_SHADOW?(tE.compareFunction=I3,s=tE):s=lb,t.setTexture2D(e||s,r)}function XD(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||ub,r)}function $D(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||fb,r)}function jD(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||cb,r)}function qD(i){switch(i){case 5126:return CD;case 35664:return PD;case 35665:return LD;case 35666:return ID;case 35674:return DD;case 35675:return ND;case 35676:return UD;case 5124:case 35670:return OD;case 35667:case 35671:return FD;case 35668:case 35672:return kD;case 35669:case 35673:return BD;case 5125:return zD;case 36294:return HD;case 36295:return VD;case 36296:return GD;case 35678:case 36198:case 36298:case 36306:case 35682:return WD;case 35679:case 36299:case 36307:return XD;case 35680:case 36300:case 36308:case 36293:return $D;case 36289:case 36303:case 36311:case 36292:return jD}}function YD(i,e){i.uniform1fv(this.addr,e)}function KD(i,e){const t=Uu(e,this.size,2);i.uniform2fv(this.addr,t)}function ZD(i,e){const t=Uu(e,this.size,3);i.uniform3fv(this.addr,t)}function QD(i,e){const t=Uu(e,this.size,4);i.uniform4fv(this.addr,t)}function JD(i,e){const t=Uu(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function eN(i,e){const t=Uu(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function tN(i,e){const t=Uu(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function nN(i,e){i.uniform1iv(this.addr,e)}function iN(i,e){i.uniform2iv(this.addr,e)}function rN(i,e){i.uniform3iv(this.addr,e)}function sN(i,e){i.uniform4iv(this.addr,e)}function aN(i,e){i.uniform1uiv(this.addr,e)}function oN(i,e){i.uniform2uiv(this.addr,e)}function lN(i,e){i.uniform3uiv(this.addr,e)}function cN(i,e){i.uniform4uiv(this.addr,e)}function uN(i,e,t){const n=this.cache,r=e.length,s=zm(t,r);ei(n,s)||(i.uniform1iv(this.addr,s),ti(n,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||lb,s[o])}function fN(i,e,t){const n=this.cache,r=e.length,s=zm(t,r);ei(n,s)||(i.uniform1iv(this.addr,s),ti(n,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||ub,s[o])}function hN(i,e,t){const n=this.cache,r=e.length,s=zm(t,r);ei(n,s)||(i.uniform1iv(this.addr,s),ti(n,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||fb,s[o])}function dN(i,e,t){const n=this.cache,r=e.length,s=zm(t,r);ei(n,s)||(i.uniform1iv(this.addr,s),ti(n,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||cb,s[o])}function pN(i){switch(i){case 5126:return YD;case 35664:return KD;case 35665:return ZD;case 35666:return QD;case 35674:return JD;case 35675:return eN;case 35676:return tN;case 5124:case 35670:return nN;case 35667:case 35671:return iN;case 35668:case 35672:return rN;case 35669:case 35673:return sN;case 5125:return aN;case 36294:return oN;case 36295:return lN;case 36296:return cN;case 35678:case 36198:case 36298:case 36306:case 35682:return uN;case 35679:case 36299:case 36307:return fN;case 35680:case 36300:case 36308:case 36293:return hN;case 36289:case 36303:case 36311:case 36292:return dN}}let mN=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=qD(t.type)}},gN=class{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=pN(t.type)}},_N=class{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const c=r[s];c.setValue(e,t[c.id],n)}}};const g_=/(\w+)(\])?(\[|\.)?/g;function oE(i,e){i.seq.push(e),i.map[e.id]=e}function vN(i,e,t){const n=i.name,r=n.length;for(g_.lastIndex=0;;){const s=g_.exec(n),o=g_.lastIndex;let c=s[1];const u=s[2]==="]",f=s[3];if(u&&(c=c|0),f===void 0||f==="["&&o+2===r){oE(t,f===void 0?new mN(c,i,e):new gN(c,i,e));break}else{let p=t.map[c];p===void 0&&(p=new _N(c),oE(t,p)),t=p}}}let Kp=class{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);vN(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}};function lE(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const xN=37297;let yN=0;function SN(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const c=o+1;n.push(`${c===e?">":" "} ${c}: ${t[o]}`)}return n.join(`
`)}const cE=new Gt;function MN(i){Zt._getMatrix(cE,Zt.workingColorSpace,i);const e=`mat3( ${cE.elements.map(t=>t.toFixed(4))} )`;switch(Zt.getTransfer(i)){case pm:return[e,"LinearTransferOETF"];case dn:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",i),[e,"LinearTransferOETF"]}}function uE(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+SN(i.getShaderSource(e),o)}else return r}function EN(i,e){const t=MN(e);return[`vec4 ${i}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function TN(i,e){let t;switch(e){case bP:t="Linear";break;case AP:t="Reinhard";break;case RP:t="Cineon";break;case CP:t="ACESFilmic";break;case LP:t="AgX";break;case IP:t="Neutral";break;case PP:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const op=new he;function wN(){Zt.getLuminanceCoefficients(op);const i=op.x.toFixed(4),e=op.y.toFixed(4),t=op.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function bN(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Gf).join(`
`)}function AN(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function RN(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let c=1;s.type===i.FLOAT_MAT2&&(c=2),s.type===i.FLOAT_MAT3&&(c=3),s.type===i.FLOAT_MAT4&&(c=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:c}}return t}function Gf(i){return i!==""}function fE(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function hE(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const CN=/^[ \t]*#include +<([\w\d./]+)>/gm;function c1(i){return i.replace(CN,LN)}const PN=new Map;function LN(i,e){let t=Ft[e];if(t===void 0){const n=PN.get(e);if(n!==void 0)t=Ft[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return c1(t)}const IN=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function dE(i){return i.replace(IN,DN)}function DN(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function pE(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function NN(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===x3?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===sP?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===ua&&(e="SHADOWMAP_TYPE_VSM"),e}function UN(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case lu:case cu:e="ENVMAP_TYPE_CUBE";break;case km:e="ENVMAP_TYPE_CUBE_UV";break}return e}function ON(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case cu:e="ENVMAP_MODE_REFRACTION";break}return e}function FN(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case y3:e="ENVMAP_BLENDING_MULTIPLY";break;case TP:e="ENVMAP_BLENDING_MIX";break;case wP:e="ENVMAP_BLENDING_ADD";break}return e}function kN(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function BN(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,c=t.fragmentShader;const u=NN(t),f=UN(t),h=ON(t),p=FN(t),m=kN(t),v=bN(t),y=AN(s),S=r.createProgram();let _,g,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Gf).join(`
`),_.length>0&&(_+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(Gf).join(`
`),g.length>0&&(g+=`
`)):(_=[pE(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Gf).join(`
`),g=[pE(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+h:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==bo?"#define TONE_MAPPING":"",t.toneMapping!==bo?Ft.tonemapping_pars_fragment:"",t.toneMapping!==bo?TN("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ft.colorspace_pars_fragment,EN("linearToOutputTexel",t.outputColorSpace),wN(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Gf).join(`
`)),o=c1(o),o=fE(o,t),o=hE(o,t),c=c1(c),c=fE(c,t),c=hE(c,t),o=dE(o),c=dE(c),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,_=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,g=["#define varying in",t.glslVersion===c2?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===c2?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const E=b+_+o,T=b+g+c,L=lE(r,r.VERTEX_SHADER,E),C=lE(r,r.FRAGMENT_SHADER,T);r.attachShader(S,L),r.attachShader(S,C),t.index0AttributeName!==void 0?r.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(S,0,"position"),r.linkProgram(S);function P(D){if(i.debug.checkShaderErrors){const X=r.getProgramInfoLog(S).trim(),z=r.getShaderInfoLog(L).trim(),G=r.getShaderInfoLog(C).trim();let Z=!0,q=!0;if(r.getProgramParameter(S,r.LINK_STATUS)===!1)if(Z=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,S,L,C);else{const K=uE(r,L,"vertex"),B=uE(r,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(S,r.VALIDATE_STATUS)+`

Material Name: `+D.name+`
Material Type: `+D.type+`

Program Info Log: `+X+`
`+K+`
`+B)}else X!==""?console.warn("THREE.WebGLProgram: Program Info Log:",X):(z===""||G==="")&&(q=!1);q&&(D.diagnostics={runnable:Z,programLog:X,vertexShader:{log:z,prefix:_},fragmentShader:{log:G,prefix:g}})}r.deleteShader(L),r.deleteShader(C),N=new Kp(r,S),A=RN(r,S)}let N;this.getUniforms=function(){return N===void 0&&P(this),N};let A;this.getAttributes=function(){return A===void 0&&P(this),A};let w=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=r.getProgramParameter(S,xN)),w},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=yN++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=L,this.fragmentShader=C,this}let zN=0,HN=class{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new VN(e),t.set(e,n)),n}},VN=class{constructor(e){this.id=zN++,this.code=e,this.usedTimes=0}};function GN(i,e,t,n,r,s,o){const c=new H3,u=new HN,f=new Set,h=[],p=r.logarithmicDepthBuffer,m=r.vertexTextures;let v=r.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(A){return f.add(A),A===0?"uv":`uv${A}`}function _(A,w,D,X,z){const G=X.fog,Z=z.geometry,q=A.isMeshStandardMaterial?X.environment:null,K=(A.isMeshStandardMaterial?t:e).get(A.envMap||q),B=K&&K.mapping===km?K.image.height:null,ie=y[A.type];A.precision!==null&&(v=r.getMaxPrecision(A.precision),v!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",v,"instead."));const oe=Z.morphAttributes.position||Z.morphAttributes.normal||Z.morphAttributes.color,V=oe!==void 0?oe.length:0;let de=0;Z.morphAttributes.position!==void 0&&(de=1),Z.morphAttributes.normal!==void 0&&(de=2),Z.morphAttributes.color!==void 0&&(de=3);let Ge,j,fe,Re;if(ie){const Ot=As[ie];Ge=Ot.vertexShader,j=Ot.fragmentShader}else Ge=A.vertexShader,j=A.fragmentShader,u.update(A),fe=u.getVertexShaderID(A),Re=u.getFragmentShaderID(A);const Ee=i.getRenderTarget(),Fe=i.state.buffers.depth.getReversed(),He=z.isInstancedMesh===!0,$e=z.isBatchedMesh===!0,wt=!!A.map,ee=!!A.matcap,Tt=!!K,te=!!A.aoMap,Lt=!!A.lightMap,st=!!A.bumpMap,Pt=!!A.normalMap,Ve=!!A.displacementMap,ot=!!A.emissiveMap,W=!!A.metalnessMap,O=!!A.roughnessMap,be=A.anisotropy>0,k=A.clearcoat>0,I=A.dispersion>0,Y=A.iridescence>0,Me=A.sheen>0,ye=A.transmission>0,ge=be&&!!A.anisotropyMap,qe=k&&!!A.clearcoatMap,Te=k&&!!A.clearcoatNormalMap,ze=k&&!!A.clearcoatRoughnessMap,tt=Y&&!!A.iridescenceMap,Ie=Y&&!!A.iridescenceThicknessMap,ke=Me&&!!A.sheenColorMap,Je=Me&&!!A.sheenRoughnessMap,nt=!!A.specularMap,We=!!A.specularColorMap,ne=!!A.specularIntensityMap,$=ye&&!!A.transmissionMap,ve=ye&&!!A.thicknessMap,le=!!A.gradientMap,Pe=!!A.alphaMap,Ue=A.alphaTest>0,Ne=!!A.alphaHash,at=!!A.extensions;let mt=bo;A.toneMapped&&(Ee===null||Ee.isXRRenderTarget===!0)&&(mt=i.toneMapping);const St={shaderID:ie,shaderType:A.type,shaderName:A.name,vertexShader:Ge,fragmentShader:j,defines:A.defines,customVertexShaderID:fe,customFragmentShaderID:Re,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:v,batching:$e,batchingColor:$e&&z._colorsTexture!==null,instancing:He,instancingColor:He&&z.instanceColor!==null,instancingMorph:He&&z.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:Ee===null?i.outputColorSpace:Ee.isXRRenderTarget===!0?Ee.texture.colorSpace:ji,alphaToCoverage:!!A.alphaToCoverage,map:wt,matcap:ee,envMap:Tt,envMapMode:Tt&&K.mapping,envMapCubeUVHeight:B,aoMap:te,lightMap:Lt,bumpMap:st,normalMap:Pt,displacementMap:m&&Ve,emissiveMap:ot,normalMapObjectSpace:Pt&&A.normalMapType===kP,normalMapTangentSpace:Pt&&A.normalMapType===L3,metalnessMap:W,roughnessMap:O,anisotropy:be,anisotropyMap:ge,clearcoat:k,clearcoatMap:qe,clearcoatNormalMap:Te,clearcoatRoughnessMap:ze,dispersion:I,iridescence:Y,iridescenceMap:tt,iridescenceThicknessMap:Ie,sheen:Me,sheenColorMap:ke,sheenRoughnessMap:Je,specularMap:nt,specularColorMap:We,specularIntensityMap:ne,transmission:ye,transmissionMap:$,thicknessMap:ve,gradientMap:le,opaque:A.transparent===!1&&A.blending===Jc&&A.alphaToCoverage===!1,alphaMap:Pe,alphaTest:Ue,alphaHash:Ne,combine:A.combine,mapUv:wt&&S(A.map.channel),aoMapUv:te&&S(A.aoMap.channel),lightMapUv:Lt&&S(A.lightMap.channel),bumpMapUv:st&&S(A.bumpMap.channel),normalMapUv:Pt&&S(A.normalMap.channel),displacementMapUv:Ve&&S(A.displacementMap.channel),emissiveMapUv:ot&&S(A.emissiveMap.channel),metalnessMapUv:W&&S(A.metalnessMap.channel),roughnessMapUv:O&&S(A.roughnessMap.channel),anisotropyMapUv:ge&&S(A.anisotropyMap.channel),clearcoatMapUv:qe&&S(A.clearcoatMap.channel),clearcoatNormalMapUv:Te&&S(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ze&&S(A.clearcoatRoughnessMap.channel),iridescenceMapUv:tt&&S(A.iridescenceMap.channel),iridescenceThicknessMapUv:Ie&&S(A.iridescenceThicknessMap.channel),sheenColorMapUv:ke&&S(A.sheenColorMap.channel),sheenRoughnessMapUv:Je&&S(A.sheenRoughnessMap.channel),specularMapUv:nt&&S(A.specularMap.channel),specularColorMapUv:We&&S(A.specularColorMap.channel),specularIntensityMapUv:ne&&S(A.specularIntensityMap.channel),transmissionMapUv:$&&S(A.transmissionMap.channel),thicknessMapUv:ve&&S(A.thicknessMap.channel),alphaMapUv:Pe&&S(A.alphaMap.channel),vertexTangents:!!Z.attributes.tangent&&(Pt||be),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!Z.attributes.color&&Z.attributes.color.itemSize===4,pointsUvs:z.isPoints===!0&&!!Z.attributes.uv&&(wt||Pe),fog:!!G,useFog:A.fog===!0,fogExp2:!!G&&G.isFogExp2,flatShading:A.flatShading===!0&&A.wireframe===!1,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,reverseDepthBuffer:Fe,skinning:z.isSkinnedMesh===!0,morphTargets:Z.morphAttributes.position!==void 0,morphNormals:Z.morphAttributes.normal!==void 0,morphColors:Z.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:de,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:A.dithering,shadowMapEnabled:i.shadowMap.enabled&&D.length>0,shadowMapType:i.shadowMap.type,toneMapping:mt,decodeVideoTexture:wt&&A.map.isVideoTexture===!0&&Zt.getTransfer(A.map.colorSpace)===dn,decodeVideoTextureEmissive:ot&&A.emissiveMap.isVideoTexture===!0&&Zt.getTransfer(A.emissiveMap.colorSpace)===dn,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Ls,flipSided:A.side===lr,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionClipCullDistance:at&&A.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(at&&A.extensions.multiDraw===!0||$e)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:A.customProgramCacheKey()};return St.vertexUv1s=f.has(1),St.vertexUv2s=f.has(2),St.vertexUv3s=f.has(3),f.clear(),St}function g(A){const w=[];if(A.shaderID?w.push(A.shaderID):(w.push(A.customVertexShaderID),w.push(A.customFragmentShaderID)),A.defines!==void 0)for(const D in A.defines)w.push(D),w.push(A.defines[D]);return A.isRawShaderMaterial===!1&&(b(w,A),E(w,A),w.push(i.outputColorSpace)),w.push(A.customProgramCacheKey),w.join()}function b(A,w){A.push(w.precision),A.push(w.outputColorSpace),A.push(w.envMapMode),A.push(w.envMapCubeUVHeight),A.push(w.mapUv),A.push(w.alphaMapUv),A.push(w.lightMapUv),A.push(w.aoMapUv),A.push(w.bumpMapUv),A.push(w.normalMapUv),A.push(w.displacementMapUv),A.push(w.emissiveMapUv),A.push(w.metalnessMapUv),A.push(w.roughnessMapUv),A.push(w.anisotropyMapUv),A.push(w.clearcoatMapUv),A.push(w.clearcoatNormalMapUv),A.push(w.clearcoatRoughnessMapUv),A.push(w.iridescenceMapUv),A.push(w.iridescenceThicknessMapUv),A.push(w.sheenColorMapUv),A.push(w.sheenRoughnessMapUv),A.push(w.specularMapUv),A.push(w.specularColorMapUv),A.push(w.specularIntensityMapUv),A.push(w.transmissionMapUv),A.push(w.thicknessMapUv),A.push(w.combine),A.push(w.fogExp2),A.push(w.sizeAttenuation),A.push(w.morphTargetsCount),A.push(w.morphAttributeCount),A.push(w.numDirLights),A.push(w.numPointLights),A.push(w.numSpotLights),A.push(w.numSpotLightMaps),A.push(w.numHemiLights),A.push(w.numRectAreaLights),A.push(w.numDirLightShadows),A.push(w.numPointLightShadows),A.push(w.numSpotLightShadows),A.push(w.numSpotLightShadowsWithMaps),A.push(w.numLightProbes),A.push(w.shadowMapType),A.push(w.toneMapping),A.push(w.numClippingPlanes),A.push(w.numClipIntersection),A.push(w.depthPacking)}function E(A,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),w.gradientMap&&c.enable(22),A.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.reverseDepthBuffer&&c.enable(4),w.skinning&&c.enable(5),w.morphTargets&&c.enable(6),w.morphNormals&&c.enable(7),w.morphColors&&c.enable(8),w.premultipliedAlpha&&c.enable(9),w.shadowMapEnabled&&c.enable(10),w.doubleSided&&c.enable(11),w.flipSided&&c.enable(12),w.useDepthPacking&&c.enable(13),w.dithering&&c.enable(14),w.transmission&&c.enable(15),w.sheen&&c.enable(16),w.opaque&&c.enable(17),w.pointsUvs&&c.enable(18),w.decodeVideoTexture&&c.enable(19),w.decodeVideoTextureEmissive&&c.enable(20),w.alphaToCoverage&&c.enable(21),A.push(c.mask)}function T(A){const w=y[A.type];let D;if(w){const X=As[w];D=P4.clone(X.uniforms)}else D=A.uniforms;return D}function L(A,w){let D;for(let X=0,z=h.length;X<z;X++){const G=h[X];if(G.cacheKey===w){D=G,++D.usedTimes;break}}return D===void 0&&(D=new BN(i,w,A,s),h.push(D)),D}function C(A){if(--A.usedTimes===0){const w=h.indexOf(A);h[w]=h[h.length-1],h.pop(),A.destroy()}}function P(A){u.remove(A)}function N(){u.dispose()}return{getParameters:_,getProgramCacheKey:g,getUniforms:T,acquireProgram:L,releaseProgram:C,releaseShaderCache:P,programs:h,dispose:N}}function WN(){let i=new WeakMap;function e(o){return i.has(o)}function t(o){let c=i.get(o);return c===void 0&&(c={},i.set(o,c)),c}function n(o){i.delete(o)}function r(o,c,u){i.get(o)[c]=u}function s(){i=new WeakMap}return{has:e,get:t,remove:n,update:r,dispose:s}}function XN(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function mE(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function gE(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(p,m,v,y,S,_){let g=i[e];return g===void 0?(g={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:S,group:_},i[e]=g):(g.id=p.id,g.object=p,g.geometry=m,g.material=v,g.groupOrder=y,g.renderOrder=p.renderOrder,g.z=S,g.group=_),e++,g}function c(p,m,v,y,S,_){const g=o(p,m,v,y,S,_);v.transmission>0?n.push(g):v.transparent===!0?r.push(g):t.push(g)}function u(p,m,v,y,S,_){const g=o(p,m,v,y,S,_);v.transmission>0?n.unshift(g):v.transparent===!0?r.unshift(g):t.unshift(g)}function f(p,m){t.length>1&&t.sort(p||XN),n.length>1&&n.sort(m||mE),r.length>1&&r.sort(m||mE)}function h(){for(let p=e,m=i.length;p<m;p++){const v=i[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:c,unshift:u,finish:h,sort:f}}function $N(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new gE,i.set(n,[o])):r>=s.length?(o=new gE,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function jN(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new he,color:new Ut};break;case"SpotLight":t={position:new he,direction:new he,color:new Ut,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new he,color:new Ut,distance:0,decay:0};break;case"HemisphereLight":t={direction:new he,skyColor:new Ut,groundColor:new Ut};break;case"RectAreaLight":t={color:new Ut,position:new he,halfWidth:new he,halfHeight:new he};break}return i[e.id]=t,t}}}function qN(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Nt};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Nt};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Nt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let YN=0;function KN(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function ZN(i){const e=new jN,t=qN(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new he);const r=new he,s=new $t,o=new $t;function c(f){let h=0,p=0,m=0;for(let A=0;A<9;A++)n.probe[A].set(0,0,0);let v=0,y=0,S=0,_=0,g=0,b=0,E=0,T=0,L=0,C=0,P=0;f.sort(KN);for(let A=0,w=f.length;A<w;A++){const D=f[A],X=D.color,z=D.intensity,G=D.distance,Z=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)h+=X.r*z,p+=X.g*z,m+=X.b*z;else if(D.isLightProbe){for(let q=0;q<9;q++)n.probe[q].addScaledVector(D.sh.coefficients[q],z);P++}else if(D.isDirectionalLight){const q=e.get(D);if(q.color.copy(D.color).multiplyScalar(D.intensity),D.castShadow){const K=D.shadow,B=t.get(D);B.shadowIntensity=K.intensity,B.shadowBias=K.bias,B.shadowNormalBias=K.normalBias,B.shadowRadius=K.radius,B.shadowMapSize=K.mapSize,n.directionalShadow[v]=B,n.directionalShadowMap[v]=Z,n.directionalShadowMatrix[v]=D.shadow.matrix,b++}n.directional[v]=q,v++}else if(D.isSpotLight){const q=e.get(D);q.position.setFromMatrixPosition(D.matrixWorld),q.color.copy(X).multiplyScalar(z),q.distance=G,q.coneCos=Math.cos(D.angle),q.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),q.decay=D.decay,n.spot[S]=q;const K=D.shadow;if(D.map&&(n.spotLightMap[L]=D.map,L++,K.updateMatrices(D),D.castShadow&&C++),n.spotLightMatrix[S]=K.matrix,D.castShadow){const B=t.get(D);B.shadowIntensity=K.intensity,B.shadowBias=K.bias,B.shadowNormalBias=K.normalBias,B.shadowRadius=K.radius,B.shadowMapSize=K.mapSize,n.spotShadow[S]=B,n.spotShadowMap[S]=Z,T++}S++}else if(D.isRectAreaLight){const q=e.get(D);q.color.copy(X).multiplyScalar(z),q.halfWidth.set(D.width*.5,0,0),q.halfHeight.set(0,D.height*.5,0),n.rectArea[_]=q,_++}else if(D.isPointLight){const q=e.get(D);if(q.color.copy(D.color).multiplyScalar(D.intensity),q.distance=D.distance,q.decay=D.decay,D.castShadow){const K=D.shadow,B=t.get(D);B.shadowIntensity=K.intensity,B.shadowBias=K.bias,B.shadowNormalBias=K.normalBias,B.shadowRadius=K.radius,B.shadowMapSize=K.mapSize,B.shadowCameraNear=K.camera.near,B.shadowCameraFar=K.camera.far,n.pointShadow[y]=B,n.pointShadowMap[y]=Z,n.pointShadowMatrix[y]=D.shadow.matrix,E++}n.point[y]=q,y++}else if(D.isHemisphereLight){const q=e.get(D);q.skyColor.copy(D.color).multiplyScalar(z),q.groundColor.copy(D.groundColor).multiplyScalar(z),n.hemi[g]=q,g++}}_>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=lt.LTC_FLOAT_1,n.rectAreaLTC2=lt.LTC_FLOAT_2):(n.rectAreaLTC1=lt.LTC_HALF_1,n.rectAreaLTC2=lt.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=p,n.ambient[2]=m;const N=n.hash;(N.directionalLength!==v||N.pointLength!==y||N.spotLength!==S||N.rectAreaLength!==_||N.hemiLength!==g||N.numDirectionalShadows!==b||N.numPointShadows!==E||N.numSpotShadows!==T||N.numSpotMaps!==L||N.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=S,n.rectArea.length=_,n.point.length=y,n.hemi.length=g,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=E,n.pointShadowMap.length=E,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=E,n.spotLightMatrix.length=T+L-C,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=C,n.numLightProbes=P,N.directionalLength=v,N.pointLength=y,N.spotLength=S,N.rectAreaLength=_,N.hemiLength=g,N.numDirectionalShadows=b,N.numPointShadows=E,N.numSpotShadows=T,N.numSpotMaps=L,N.numLightProbes=P,n.version=YN++)}function u(f,h){let p=0,m=0,v=0,y=0,S=0;const _=h.matrixWorldInverse;for(let g=0,b=f.length;g<b;g++){const E=f[g];if(E.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(_),p++}else if(E.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(_),T.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(_),v++}else if(E.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(_),o.identity(),s.copy(E.matrixWorld),s.premultiply(_),o.extractRotation(s),T.halfWidth.set(E.width*.5,0,0),T.halfHeight.set(0,E.height*.5,0),T.halfWidth.applyMatrix4(o),T.halfHeight.applyMatrix4(o),y++}else if(E.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(_),m++}else if(E.isHemisphereLight){const T=n.hemi[S];T.direction.setFromMatrixPosition(E.matrixWorld),T.direction.transformDirection(_),S++}}}return{setup:c,setupView:u,state:n}}function _E(i){const e=new ZN(i),t=[],n=[];function r(h){f.camera=h,t.length=0,n.length=0}function s(h){t.push(h)}function o(h){n.push(h)}function c(){e.setup(t)}function u(h){e.setupView(t,h)}const f={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:f,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:o}}function QN(i){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let c;return o===void 0?(c=new _E(i),e.set(r,[c])):s>=o.length?(c=new _E(i),o.push(c)):c=o[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}const JN=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,e6=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function t6(i,e,t){let n=new Fx;const r=new Nt,s=new Nt,o=new un,c=new Z4({depthPacking:FP}),u=new Q4,f={},h=t.maxTextureSize,p={[Ma]:lr,[lr]:Ma,[Ls]:Ls},m=new Po({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Nt},radius:{value:4}},vertexShader:JN,fragmentShader:e6}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new Ca;y.setAttribute("position",new $i(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new Mi(y,m),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=x3;let g=this.type;this.render=function(C,P,N){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||C.length===0)return;const A=i.getRenderTarget(),w=i.getActiveCubeFace(),D=i.getActiveMipmapLevel(),X=i.state;X.setBlending(wo),X.buffers.color.setClear(1,1,1,1),X.buffers.depth.setTest(!0),X.setScissorTest(!1);const z=g!==ua&&this.type===ua,G=g===ua&&this.type!==ua;for(let Z=0,q=C.length;Z<q;Z++){const K=C[Z],B=K.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",K,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;r.copy(B.mapSize);const ie=B.getFrameExtents();if(r.multiply(ie),s.copy(B.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/ie.x),r.x=s.x*ie.x,B.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/ie.y),r.y=s.y*ie.y,B.mapSize.y=s.y)),B.map===null||z===!0||G===!0){const V=this.type!==ua?{minFilter:Xi,magFilter:Xi}:{};B.map!==null&&B.map.dispose(),B.map=new Ll(r.x,r.y,V),B.map.texture.name=K.name+".shadowMap",B.camera.updateProjectionMatrix()}i.setRenderTarget(B.map),i.clear();const oe=B.getViewportCount();for(let V=0;V<oe;V++){const de=B.getViewport(V);o.set(s.x*de.x,s.y*de.y,s.x*de.z,s.y*de.w),X.viewport(o),B.updateMatrices(K,V),n=B.getFrustum(),T(P,N,B.camera,K,this.type)}B.isPointLightShadow!==!0&&this.type===ua&&b(B,N),B.needsUpdate=!1}g=this.type,_.needsUpdate=!1,i.setRenderTarget(A,w,D)};function b(C,P){const N=e.update(S);m.defines.VSM_SAMPLES!==C.blurSamples&&(m.defines.VSM_SAMPLES=C.blurSamples,v.defines.VSM_SAMPLES=C.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new Ll(r.x,r.y)),m.uniforms.shadow_pass.value=C.map.texture,m.uniforms.resolution.value=C.mapSize,m.uniforms.radius.value=C.radius,i.setRenderTarget(C.mapPass),i.clear(),i.renderBufferDirect(P,null,N,m,S,null),v.uniforms.shadow_pass.value=C.mapPass.texture,v.uniforms.resolution.value=C.mapSize,v.uniforms.radius.value=C.radius,i.setRenderTarget(C.map),i.clear(),i.renderBufferDirect(P,null,N,v,S,null)}function E(C,P,N,A){let w=null;const D=N.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(D!==void 0)w=D;else if(w=N.isPointLight===!0?u:c,i.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0||P.alphaToCoverage===!0){const X=w.uuid,z=P.uuid;let G=f[X];G===void 0&&(G={},f[X]=G);let Z=G[z];Z===void 0&&(Z=w.clone(),G[z]=Z,P.addEventListener("dispose",L)),w=Z}if(w.visible=P.visible,w.wireframe=P.wireframe,A===ua?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:p[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaToCoverage===!0?.5:P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,N.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const X=i.properties.get(w);X.light=N}return w}function T(C,P,N,A,w){if(C.visible===!1)return;if(C.layers.test(P.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&w===ua)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,C.matrixWorld);const z=e.update(C),G=C.material;if(Array.isArray(G)){const Z=z.groups;for(let q=0,K=Z.length;q<K;q++){const B=Z[q],ie=G[B.materialIndex];if(ie&&ie.visible){const oe=E(C,ie,A,w);C.onBeforeShadow(i,C,P,N,z,oe,B),i.renderBufferDirect(N,null,z,oe,C,B),C.onAfterShadow(i,C,P,N,z,oe,B)}}}else if(G.visible){const Z=E(C,G,A,w);C.onBeforeShadow(i,C,P,N,z,Z,null),i.renderBufferDirect(N,null,z,Z,C,null),C.onAfterShadow(i,C,P,N,z,Z,null)}}const X=C.children;for(let z=0,G=X.length;z<G;z++)T(X[z],P,N,A,w)}function L(C){C.target.removeEventListener("dispose",L);for(const N in f){const A=f[N],w=C.target.uuid;w in A&&(A[w].dispose(),delete A[w])}}}const n6={[Ev]:Tv,[wv]:Rv,[bv]:Cv,[ou]:Av,[Tv]:Ev,[Rv]:wv,[Cv]:bv,[Av]:ou};function i6(i,e){function t(){let $=!1;const ve=new un;let le=null;const Pe=new un(0,0,0,0);return{setMask:function(Ue){le!==Ue&&!$&&(i.colorMask(Ue,Ue,Ue,Ue),le=Ue)},setLocked:function(Ue){$=Ue},setClear:function(Ue,Ne,at,mt,St){St===!0&&(Ue*=mt,Ne*=mt,at*=mt),ve.set(Ue,Ne,at,mt),Pe.equals(ve)===!1&&(i.clearColor(Ue,Ne,at,mt),Pe.copy(ve))},reset:function(){$=!1,le=null,Pe.set(-1,0,0,0)}}}function n(){let $=!1,ve=!1,le=null,Pe=null,Ue=null;return{setReversed:function(Ne){if(ve!==Ne){const at=e.get("EXT_clip_control");Ne?at.clipControlEXT(at.LOWER_LEFT_EXT,at.ZERO_TO_ONE_EXT):at.clipControlEXT(at.LOWER_LEFT_EXT,at.NEGATIVE_ONE_TO_ONE_EXT),ve=Ne;const mt=Ue;Ue=null,this.setClear(mt)}},getReversed:function(){return ve},setTest:function(Ne){Ne?Ee(i.DEPTH_TEST):Fe(i.DEPTH_TEST)},setMask:function(Ne){le!==Ne&&!$&&(i.depthMask(Ne),le=Ne)},setFunc:function(Ne){if(ve&&(Ne=n6[Ne]),Pe!==Ne){switch(Ne){case Ev:i.depthFunc(i.NEVER);break;case Tv:i.depthFunc(i.ALWAYS);break;case wv:i.depthFunc(i.LESS);break;case ou:i.depthFunc(i.LEQUAL);break;case bv:i.depthFunc(i.EQUAL);break;case Av:i.depthFunc(i.GEQUAL);break;case Rv:i.depthFunc(i.GREATER);break;case Cv:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}Pe=Ne}},setLocked:function(Ne){$=Ne},setClear:function(Ne){Ue!==Ne&&(ve&&(Ne=1-Ne),i.clearDepth(Ne),Ue=Ne)},reset:function(){$=!1,le=null,Pe=null,Ue=null,ve=!1}}}function r(){let $=!1,ve=null,le=null,Pe=null,Ue=null,Ne=null,at=null,mt=null,St=null;return{setTest:function(Ot){$||(Ot?Ee(i.STENCIL_TEST):Fe(i.STENCIL_TEST))},setMask:function(Ot){ve!==Ot&&!$&&(i.stencilMask(Ot),ve=Ot)},setFunc:function(Ot,vn,ri){(le!==Ot||Pe!==vn||Ue!==ri)&&(i.stencilFunc(Ot,vn,ri),le=Ot,Pe=vn,Ue=ri)},setOp:function(Ot,vn,ri){(Ne!==Ot||at!==vn||mt!==ri)&&(i.stencilOp(Ot,vn,ri),Ne=Ot,at=vn,mt=ri)},setLocked:function(Ot){$=Ot},setClear:function(Ot){St!==Ot&&(i.clearStencil(Ot),St=Ot)},reset:function(){$=!1,ve=null,le=null,Pe=null,Ue=null,Ne=null,at=null,mt=null,St=null}}}const s=new t,o=new n,c=new r,u=new WeakMap,f=new WeakMap;let h={},p={},m=new WeakMap,v=[],y=null,S=!1,_=null,g=null,b=null,E=null,T=null,L=null,C=null,P=new Ut(0,0,0),N=0,A=!1,w=null,D=null,X=null,z=null,G=null;const Z=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let q=!1,K=0;const B=i.getParameter(i.VERSION);B.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(B)[1]),q=K>=1):B.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(B)[1]),q=K>=2);let ie=null,oe={};const V=i.getParameter(i.SCISSOR_BOX),de=i.getParameter(i.VIEWPORT),Ge=new un().fromArray(V),j=new un().fromArray(de);function fe($,ve,le,Pe){const Ue=new Uint8Array(4),Ne=i.createTexture();i.bindTexture($,Ne),i.texParameteri($,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri($,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let at=0;at<le;at++)$===i.TEXTURE_3D||$===i.TEXTURE_2D_ARRAY?i.texImage3D(ve,0,i.RGBA,1,1,Pe,0,i.RGBA,i.UNSIGNED_BYTE,Ue):i.texImage2D(ve+at,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,Ue);return Ne}const Re={};Re[i.TEXTURE_2D]=fe(i.TEXTURE_2D,i.TEXTURE_2D,1),Re[i.TEXTURE_CUBE_MAP]=fe(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),Re[i.TEXTURE_2D_ARRAY]=fe(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),Re[i.TEXTURE_3D]=fe(i.TEXTURE_3D,i.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),c.setClear(0),Ee(i.DEPTH_TEST),o.setFunc(ou),st(!1),Pt(e2),Ee(i.CULL_FACE),te(wo);function Ee($){h[$]!==!0&&(i.enable($),h[$]=!0)}function Fe($){h[$]!==!1&&(i.disable($),h[$]=!1)}function He($,ve){return p[$]!==ve?(i.bindFramebuffer($,ve),p[$]=ve,$===i.DRAW_FRAMEBUFFER&&(p[i.FRAMEBUFFER]=ve),$===i.FRAMEBUFFER&&(p[i.DRAW_FRAMEBUFFER]=ve),!0):!1}function $e($,ve){let le=v,Pe=!1;if($){le=m.get(ve),le===void 0&&(le=[],m.set(ve,le));const Ue=$.textures;if(le.length!==Ue.length||le[0]!==i.COLOR_ATTACHMENT0){for(let Ne=0,at=Ue.length;Ne<at;Ne++)le[Ne]=i.COLOR_ATTACHMENT0+Ne;le.length=Ue.length,Pe=!0}}else le[0]!==i.BACK&&(le[0]=i.BACK,Pe=!0);Pe&&i.drawBuffers(le)}function wt($){return y!==$?(i.useProgram($),y=$,!0):!1}const ee={[ml]:i.FUNC_ADD,[oP]:i.FUNC_SUBTRACT,[lP]:i.FUNC_REVERSE_SUBTRACT};ee[cP]=i.MIN,ee[uP]=i.MAX;const Tt={[fP]:i.ZERO,[hP]:i.ONE,[dP]:i.SRC_COLOR,[Sv]:i.SRC_ALPHA,[xP]:i.SRC_ALPHA_SATURATE,[_P]:i.DST_COLOR,[mP]:i.DST_ALPHA,[pP]:i.ONE_MINUS_SRC_COLOR,[Mv]:i.ONE_MINUS_SRC_ALPHA,[vP]:i.ONE_MINUS_DST_COLOR,[gP]:i.ONE_MINUS_DST_ALPHA,[yP]:i.CONSTANT_COLOR,[SP]:i.ONE_MINUS_CONSTANT_COLOR,[MP]:i.CONSTANT_ALPHA,[EP]:i.ONE_MINUS_CONSTANT_ALPHA};function te($,ve,le,Pe,Ue,Ne,at,mt,St,Ot){if($===wo){S===!0&&(Fe(i.BLEND),S=!1);return}if(S===!1&&(Ee(i.BLEND),S=!0),$!==aP){if($!==_||Ot!==A){if((g!==ml||T!==ml)&&(i.blendEquation(i.FUNC_ADD),g=ml,T=ml),Ot)switch($){case Jc:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case t2:i.blendFunc(i.ONE,i.ONE);break;case n2:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case i2:i.blendFuncSeparate(i.DST_COLOR,i.ONE_MINUS_SRC_ALPHA,i.ZERO,i.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",$);break}else switch($){case Jc:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case t2:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE,i.ONE,i.ONE);break;case n2:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case i2:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",$);break}b=null,E=null,L=null,C=null,P.set(0,0,0),N=0,_=$,A=Ot}return}Ue=Ue||ve,Ne=Ne||le,at=at||Pe,(ve!==g||Ue!==T)&&(i.blendEquationSeparate(ee[ve],ee[Ue]),g=ve,T=Ue),(le!==b||Pe!==E||Ne!==L||at!==C)&&(i.blendFuncSeparate(Tt[le],Tt[Pe],Tt[Ne],Tt[at]),b=le,E=Pe,L=Ne,C=at),(mt.equals(P)===!1||St!==N)&&(i.blendColor(mt.r,mt.g,mt.b,St),P.copy(mt),N=St),_=$,A=!1}function Lt($,ve){$.side===Ls?Fe(i.CULL_FACE):Ee(i.CULL_FACE);let le=$.side===lr;ve&&(le=!le),st(le),$.blending===Jc&&$.transparent===!1?te(wo):te($.blending,$.blendEquation,$.blendSrc,$.blendDst,$.blendEquationAlpha,$.blendSrcAlpha,$.blendDstAlpha,$.blendColor,$.blendAlpha,$.premultipliedAlpha),o.setFunc($.depthFunc),o.setTest($.depthTest),o.setMask($.depthWrite),s.setMask($.colorWrite);const Pe=$.stencilWrite;c.setTest(Pe),Pe&&(c.setMask($.stencilWriteMask),c.setFunc($.stencilFunc,$.stencilRef,$.stencilFuncMask),c.setOp($.stencilFail,$.stencilZFail,$.stencilZPass)),ot($.polygonOffset,$.polygonOffsetFactor,$.polygonOffsetUnits),$.alphaToCoverage===!0?Ee(i.SAMPLE_ALPHA_TO_COVERAGE):Fe(i.SAMPLE_ALPHA_TO_COVERAGE)}function st($){w!==$&&($?i.frontFace(i.CW):i.frontFace(i.CCW),w=$)}function Pt($){$!==iP?(Ee(i.CULL_FACE),$!==D&&($===e2?i.cullFace(i.BACK):$===rP?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):Fe(i.CULL_FACE),D=$}function Ve($){$!==X&&(q&&i.lineWidth($),X=$)}function ot($,ve,le){$?(Ee(i.POLYGON_OFFSET_FILL),(z!==ve||G!==le)&&(i.polygonOffset(ve,le),z=ve,G=le)):Fe(i.POLYGON_OFFSET_FILL)}function W($){$?Ee(i.SCISSOR_TEST):Fe(i.SCISSOR_TEST)}function O($){$===void 0&&($=i.TEXTURE0+Z-1),ie!==$&&(i.activeTexture($),ie=$)}function be($,ve,le){le===void 0&&(ie===null?le=i.TEXTURE0+Z-1:le=ie);let Pe=oe[le];Pe===void 0&&(Pe={type:void 0,texture:void 0},oe[le]=Pe),(Pe.type!==$||Pe.texture!==ve)&&(ie!==le&&(i.activeTexture(le),ie=le),i.bindTexture($,ve||Re[$]),Pe.type=$,Pe.texture=ve)}function k(){const $=oe[ie];$!==void 0&&$.type!==void 0&&(i.bindTexture($.type,null),$.type=void 0,$.texture=void 0)}function I(){try{i.compressedTexImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Y(){try{i.compressedTexImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Me(){try{i.texSubImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function ye(){try{i.texSubImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function ge(){try{i.compressedTexSubImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function qe(){try{i.compressedTexSubImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Te(){try{i.texStorage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function ze(){try{i.texStorage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function tt(){try{i.texImage2D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function Ie(){try{i.texImage3D(...arguments)}catch($){console.error("THREE.WebGLState:",$)}}function ke($){Ge.equals($)===!1&&(i.scissor($.x,$.y,$.z,$.w),Ge.copy($))}function Je($){j.equals($)===!1&&(i.viewport($.x,$.y,$.z,$.w),j.copy($))}function nt($,ve){let le=f.get(ve);le===void 0&&(le=new WeakMap,f.set(ve,le));let Pe=le.get($);Pe===void 0&&(Pe=i.getUniformBlockIndex(ve,$.name),le.set($,Pe))}function We($,ve){const Pe=f.get(ve).get($);u.get(ve)!==Pe&&(i.uniformBlockBinding(ve,Pe,$.__bindingPointIndex),u.set(ve,Pe))}function ne(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),o.setReversed(!1),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),h={},ie=null,oe={},p={},m=new WeakMap,v=[],y=null,S=!1,_=null,g=null,b=null,E=null,T=null,L=null,C=null,P=new Ut(0,0,0),N=0,A=!1,w=null,D=null,X=null,z=null,G=null,Ge.set(0,0,i.canvas.width,i.canvas.height),j.set(0,0,i.canvas.width,i.canvas.height),s.reset(),o.reset(),c.reset()}return{buffers:{color:s,depth:o,stencil:c},enable:Ee,disable:Fe,bindFramebuffer:He,drawBuffers:$e,useProgram:wt,setBlending:te,setMaterial:Lt,setFlipSided:st,setCullFace:Pt,setLineWidth:Ve,setPolygonOffset:ot,setScissorTest:W,activeTexture:O,bindTexture:be,unbindTexture:k,compressedTexImage2D:I,compressedTexImage3D:Y,texImage2D:tt,texImage3D:Ie,updateUBOMapping:nt,uniformBlockBinding:We,texStorage2D:Te,texStorage3D:ze,texSubImage2D:Me,texSubImage3D:ye,compressedTexSubImage2D:ge,compressedTexSubImage3D:qe,scissor:ke,viewport:Je,reset:ne}}function r6(i,e,t,n,r,s,o){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new Nt,h=new WeakMap;let p;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(k,I){return v?new OffscreenCanvas(k,I):dh("canvas")}function S(k,I,Y){let Me=1;const ye=be(k);if((ye.width>Y||ye.height>Y)&&(Me=Y/Math.max(ye.width,ye.height)),Me<1)if(typeof HTMLImageElement<"u"&&k instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&k instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&k instanceof ImageBitmap||typeof VideoFrame<"u"&&k instanceof VideoFrame){const ge=Math.floor(Me*ye.width),qe=Math.floor(Me*ye.height);p===void 0&&(p=y(ge,qe));const Te=I?y(ge,qe):p;return Te.width=ge,Te.height=qe,Te.getContext("2d").drawImage(k,0,0,ge,qe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+ye.width+"x"+ye.height+") to ("+ge+"x"+qe+")."),Te}else return"data"in k&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+ye.width+"x"+ye.height+")."),k;return k}function _(k){return k.generateMipmaps}function g(k){i.generateMipmap(k)}function b(k){return k.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:k.isWebGL3DRenderTarget?i.TEXTURE_3D:k.isWebGLArrayRenderTarget||k.isCompressedArrayTexture?i.TEXTURE_2D_ARRAY:i.TEXTURE_2D}function E(k,I,Y,Me,ye=!1){if(k!==null){if(i[k]!==void 0)return i[k];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+k+"'")}let ge=I;if(I===i.RED&&(Y===i.FLOAT&&(ge=i.R32F),Y===i.HALF_FLOAT&&(ge=i.R16F),Y===i.UNSIGNED_BYTE&&(ge=i.R8)),I===i.RED_INTEGER&&(Y===i.UNSIGNED_BYTE&&(ge=i.R8UI),Y===i.UNSIGNED_SHORT&&(ge=i.R16UI),Y===i.UNSIGNED_INT&&(ge=i.R32UI),Y===i.BYTE&&(ge=i.R8I),Y===i.SHORT&&(ge=i.R16I),Y===i.INT&&(ge=i.R32I)),I===i.RG&&(Y===i.FLOAT&&(ge=i.RG32F),Y===i.HALF_FLOAT&&(ge=i.RG16F),Y===i.UNSIGNED_BYTE&&(ge=i.RG8)),I===i.RG_INTEGER&&(Y===i.UNSIGNED_BYTE&&(ge=i.RG8UI),Y===i.UNSIGNED_SHORT&&(ge=i.RG16UI),Y===i.UNSIGNED_INT&&(ge=i.RG32UI),Y===i.BYTE&&(ge=i.RG8I),Y===i.SHORT&&(ge=i.RG16I),Y===i.INT&&(ge=i.RG32I)),I===i.RGB_INTEGER&&(Y===i.UNSIGNED_BYTE&&(ge=i.RGB8UI),Y===i.UNSIGNED_SHORT&&(ge=i.RGB16UI),Y===i.UNSIGNED_INT&&(ge=i.RGB32UI),Y===i.BYTE&&(ge=i.RGB8I),Y===i.SHORT&&(ge=i.RGB16I),Y===i.INT&&(ge=i.RGB32I)),I===i.RGBA_INTEGER&&(Y===i.UNSIGNED_BYTE&&(ge=i.RGBA8UI),Y===i.UNSIGNED_SHORT&&(ge=i.RGBA16UI),Y===i.UNSIGNED_INT&&(ge=i.RGBA32UI),Y===i.BYTE&&(ge=i.RGBA8I),Y===i.SHORT&&(ge=i.RGBA16I),Y===i.INT&&(ge=i.RGBA32I)),I===i.RGB&&Y===i.UNSIGNED_INT_5_9_9_9_REV&&(ge=i.RGB9_E5),I===i.RGBA){const qe=ye?pm:Zt.getTransfer(Me);Y===i.FLOAT&&(ge=i.RGBA32F),Y===i.HALF_FLOAT&&(ge=i.RGBA16F),Y===i.UNSIGNED_BYTE&&(ge=qe===dn?i.SRGB8_ALPHA8:i.RGBA8),Y===i.UNSIGNED_SHORT_4_4_4_4&&(ge=i.RGBA4),Y===i.UNSIGNED_SHORT_5_5_5_1&&(ge=i.RGB5_A1)}return(ge===i.R16F||ge===i.R32F||ge===i.RG16F||ge===i.RG32F||ge===i.RGBA16F||ge===i.RGBA32F)&&e.get("EXT_color_buffer_float"),ge}function T(k,I){let Y;return k?I===null||I===Pl||I===lh?Y=i.DEPTH24_STENCIL8:I===us?Y=i.DEPTH32F_STENCIL8:I===oh&&(Y=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):I===null||I===Pl||I===lh?Y=i.DEPTH_COMPONENT24:I===us?Y=i.DEPTH_COMPONENT32F:I===oh&&(Y=i.DEPTH_COMPONENT16),Y}function L(k,I){return _(k)===!0||k.isFramebufferTexture&&k.minFilter!==Xi&&k.minFilter!==Wi?Math.log2(Math.max(I.width,I.height))+1:k.mipmaps!==void 0&&k.mipmaps.length>0?k.mipmaps.length:k.isCompressedTexture&&Array.isArray(k.image)?I.mipmaps.length:1}function C(k){const I=k.target;I.removeEventListener("dispose",C),N(I),I.isVideoTexture&&h.delete(I)}function P(k){const I=k.target;I.removeEventListener("dispose",P),w(I)}function N(k){const I=n.get(k);if(I.__webglInit===void 0)return;const Y=k.source,Me=m.get(Y);if(Me){const ye=Me[I.__cacheKey];ye.usedTimes--,ye.usedTimes===0&&A(k),Object.keys(Me).length===0&&m.delete(Y)}n.remove(k)}function A(k){const I=n.get(k);i.deleteTexture(I.__webglTexture);const Y=k.source,Me=m.get(Y);delete Me[I.__cacheKey],o.memory.textures--}function w(k){const I=n.get(k);if(k.depthTexture&&(k.depthTexture.dispose(),n.remove(k.depthTexture)),k.isWebGLCubeRenderTarget)for(let Me=0;Me<6;Me++){if(Array.isArray(I.__webglFramebuffer[Me]))for(let ye=0;ye<I.__webglFramebuffer[Me].length;ye++)i.deleteFramebuffer(I.__webglFramebuffer[Me][ye]);else i.deleteFramebuffer(I.__webglFramebuffer[Me]);I.__webglDepthbuffer&&i.deleteRenderbuffer(I.__webglDepthbuffer[Me])}else{if(Array.isArray(I.__webglFramebuffer))for(let Me=0;Me<I.__webglFramebuffer.length;Me++)i.deleteFramebuffer(I.__webglFramebuffer[Me]);else i.deleteFramebuffer(I.__webglFramebuffer);if(I.__webglDepthbuffer&&i.deleteRenderbuffer(I.__webglDepthbuffer),I.__webglMultisampledFramebuffer&&i.deleteFramebuffer(I.__webglMultisampledFramebuffer),I.__webglColorRenderbuffer)for(let Me=0;Me<I.__webglColorRenderbuffer.length;Me++)I.__webglColorRenderbuffer[Me]&&i.deleteRenderbuffer(I.__webglColorRenderbuffer[Me]);I.__webglDepthRenderbuffer&&i.deleteRenderbuffer(I.__webglDepthRenderbuffer)}const Y=k.textures;for(let Me=0,ye=Y.length;Me<ye;Me++){const ge=n.get(Y[Me]);ge.__webglTexture&&(i.deleteTexture(ge.__webglTexture),o.memory.textures--),n.remove(Y[Me])}n.remove(k)}let D=0;function X(){D=0}function z(){const k=D;return k>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+k+" texture units while this GPU supports only "+r.maxTextures),D+=1,k}function G(k){const I=[];return I.push(k.wrapS),I.push(k.wrapT),I.push(k.wrapR||0),I.push(k.magFilter),I.push(k.minFilter),I.push(k.anisotropy),I.push(k.internalFormat),I.push(k.format),I.push(k.type),I.push(k.generateMipmaps),I.push(k.premultiplyAlpha),I.push(k.flipY),I.push(k.unpackAlignment),I.push(k.colorSpace),I.join()}function Z(k,I){const Y=n.get(k);if(k.isVideoTexture&&W(k),k.isRenderTargetTexture===!1&&k.version>0&&Y.__version!==k.version){const Me=k.image;if(Me===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Me.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Re(Y,k,I);return}}t.bindTexture(i.TEXTURE_2D,Y.__webglTexture,i.TEXTURE0+I)}function q(k,I){const Y=n.get(k);if(k.version>0&&Y.__version!==k.version){Re(Y,k,I);return}t.bindTexture(i.TEXTURE_2D_ARRAY,Y.__webglTexture,i.TEXTURE0+I)}function K(k,I){const Y=n.get(k);if(k.version>0&&Y.__version!==k.version){Re(Y,k,I);return}t.bindTexture(i.TEXTURE_3D,Y.__webglTexture,i.TEXTURE0+I)}function B(k,I){const Y=n.get(k);if(k.version>0&&Y.__version!==k.version){Ee(Y,k,I);return}t.bindTexture(i.TEXTURE_CUBE_MAP,Y.__webglTexture,i.TEXTURE0+I)}const ie={[uu]:i.REPEAT,[Eo]:i.CLAMP_TO_EDGE,[dm]:i.MIRRORED_REPEAT},oe={[Xi]:i.NEAREST,[M3]:i.NEAREST_MIPMAP_NEAREST,[Vf]:i.NEAREST_MIPMAP_LINEAR,[Wi]:i.LINEAR,[Vp]:i.LINEAR_MIPMAP_NEAREST,[ga]:i.LINEAR_MIPMAP_LINEAR},V={[BP]:i.NEVER,[XP]:i.ALWAYS,[zP]:i.LESS,[I3]:i.LEQUAL,[HP]:i.EQUAL,[WP]:i.GEQUAL,[VP]:i.GREATER,[GP]:i.NOTEQUAL};function de(k,I){if(I.type===us&&e.has("OES_texture_float_linear")===!1&&(I.magFilter===Wi||I.magFilter===Vp||I.magFilter===Vf||I.magFilter===ga||I.minFilter===Wi||I.minFilter===Vp||I.minFilter===Vf||I.minFilter===ga)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(k,i.TEXTURE_WRAP_S,ie[I.wrapS]),i.texParameteri(k,i.TEXTURE_WRAP_T,ie[I.wrapT]),(k===i.TEXTURE_3D||k===i.TEXTURE_2D_ARRAY)&&i.texParameteri(k,i.TEXTURE_WRAP_R,ie[I.wrapR]),i.texParameteri(k,i.TEXTURE_MAG_FILTER,oe[I.magFilter]),i.texParameteri(k,i.TEXTURE_MIN_FILTER,oe[I.minFilter]),I.compareFunction&&(i.texParameteri(k,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(k,i.TEXTURE_COMPARE_FUNC,V[I.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(I.magFilter===Xi||I.minFilter!==Vf&&I.minFilter!==ga||I.type===us&&e.has("OES_texture_float_linear")===!1)return;if(I.anisotropy>1||n.get(I).__currentAnisotropy){const Y=e.get("EXT_texture_filter_anisotropic");i.texParameterf(k,Y.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,r.getMaxAnisotropy())),n.get(I).__currentAnisotropy=I.anisotropy}}}function Ge(k,I){let Y=!1;k.__webglInit===void 0&&(k.__webglInit=!0,I.addEventListener("dispose",C));const Me=I.source;let ye=m.get(Me);ye===void 0&&(ye={},m.set(Me,ye));const ge=G(I);if(ge!==k.__cacheKey){ye[ge]===void 0&&(ye[ge]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,Y=!0),ye[ge].usedTimes++;const qe=ye[k.__cacheKey];qe!==void 0&&(ye[k.__cacheKey].usedTimes--,qe.usedTimes===0&&A(I)),k.__cacheKey=ge,k.__webglTexture=ye[ge].texture}return Y}function j(k,I,Y){return Math.floor(Math.floor(k/Y)/I)}function fe(k,I,Y,Me){const ge=k.updateRanges;if(ge.length===0)t.texSubImage2D(i.TEXTURE_2D,0,0,0,I.width,I.height,Y,Me,I.data);else{ge.sort((Ie,ke)=>Ie.start-ke.start);let qe=0;for(let Ie=1;Ie<ge.length;Ie++){const ke=ge[qe],Je=ge[Ie],nt=ke.start+ke.count,We=j(Je.start,I.width,4),ne=j(ke.start,I.width,4);Je.start<=nt+1&&We===ne&&j(Je.start+Je.count-1,I.width,4)===We?ke.count=Math.max(ke.count,Je.start+Je.count-ke.start):(++qe,ge[qe]=Je)}ge.length=qe+1;const Te=i.getParameter(i.UNPACK_ROW_LENGTH),ze=i.getParameter(i.UNPACK_SKIP_PIXELS),tt=i.getParameter(i.UNPACK_SKIP_ROWS);i.pixelStorei(i.UNPACK_ROW_LENGTH,I.width);for(let Ie=0,ke=ge.length;Ie<ke;Ie++){const Je=ge[Ie],nt=Math.floor(Je.start/4),We=Math.ceil(Je.count/4),ne=nt%I.width,$=Math.floor(nt/I.width),ve=We,le=1;i.pixelStorei(i.UNPACK_SKIP_PIXELS,ne),i.pixelStorei(i.UNPACK_SKIP_ROWS,$),t.texSubImage2D(i.TEXTURE_2D,0,ne,$,ve,le,Y,Me,I.data)}k.clearUpdateRanges(),i.pixelStorei(i.UNPACK_ROW_LENGTH,Te),i.pixelStorei(i.UNPACK_SKIP_PIXELS,ze),i.pixelStorei(i.UNPACK_SKIP_ROWS,tt)}}function Re(k,I,Y){let Me=i.TEXTURE_2D;(I.isDataArrayTexture||I.isCompressedArrayTexture)&&(Me=i.TEXTURE_2D_ARRAY),I.isData3DTexture&&(Me=i.TEXTURE_3D);const ye=Ge(k,I),ge=I.source;t.bindTexture(Me,k.__webglTexture,i.TEXTURE0+Y);const qe=n.get(ge);if(ge.version!==qe.__version||ye===!0){t.activeTexture(i.TEXTURE0+Y);const Te=Zt.getPrimaries(Zt.workingColorSpace),ze=I.colorSpace===yo?null:Zt.getPrimaries(I.colorSpace),tt=I.colorSpace===yo||Te===ze?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,I.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,I.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,tt);let Ie=S(I.image,!1,r.maxTextureSize);Ie=O(I,Ie);const ke=s.convert(I.format,I.colorSpace),Je=s.convert(I.type);let nt=E(I.internalFormat,ke,Je,I.colorSpace,I.isVideoTexture);de(Me,I);let We;const ne=I.mipmaps,$=I.isVideoTexture!==!0,ve=qe.__version===void 0||ye===!0,le=ge.dataReady,Pe=L(I,Ie);if(I.isDepthTexture)nt=T(I.format===uh,I.type),ve&&($?t.texStorage2D(i.TEXTURE_2D,1,nt,Ie.width,Ie.height):t.texImage2D(i.TEXTURE_2D,0,nt,Ie.width,Ie.height,0,ke,Je,null));else if(I.isDataTexture)if(ne.length>0){$&&ve&&t.texStorage2D(i.TEXTURE_2D,Pe,nt,ne[0].width,ne[0].height);for(let Ue=0,Ne=ne.length;Ue<Ne;Ue++)We=ne[Ue],$?le&&t.texSubImage2D(i.TEXTURE_2D,Ue,0,0,We.width,We.height,ke,Je,We.data):t.texImage2D(i.TEXTURE_2D,Ue,nt,We.width,We.height,0,ke,Je,We.data);I.generateMipmaps=!1}else $?(ve&&t.texStorage2D(i.TEXTURE_2D,Pe,nt,Ie.width,Ie.height),le&&fe(I,Ie,ke,Je)):t.texImage2D(i.TEXTURE_2D,0,nt,Ie.width,Ie.height,0,ke,Je,Ie.data);else if(I.isCompressedTexture)if(I.isCompressedArrayTexture){$&&ve&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Pe,nt,ne[0].width,ne[0].height,Ie.depth);for(let Ue=0,Ne=ne.length;Ue<Ne;Ue++)if(We=ne[Ue],I.format!==$r)if(ke!==null)if($){if(le)if(I.layerUpdates.size>0){const at=j2(We.width,We.height,I.format,I.type);for(const mt of I.layerUpdates){const St=We.data.subarray(mt*at/We.data.BYTES_PER_ELEMENT,(mt+1)*at/We.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,Ue,0,0,mt,We.width,We.height,1,ke,St)}I.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,Ue,0,0,0,We.width,We.height,Ie.depth,ke,We.data)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,Ue,nt,We.width,We.height,Ie.depth,0,We.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else $?le&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,Ue,0,0,0,We.width,We.height,Ie.depth,ke,Je,We.data):t.texImage3D(i.TEXTURE_2D_ARRAY,Ue,nt,We.width,We.height,Ie.depth,0,ke,Je,We.data)}else{$&&ve&&t.texStorage2D(i.TEXTURE_2D,Pe,nt,ne[0].width,ne[0].height);for(let Ue=0,Ne=ne.length;Ue<Ne;Ue++)We=ne[Ue],I.format!==$r?ke!==null?$?le&&t.compressedTexSubImage2D(i.TEXTURE_2D,Ue,0,0,We.width,We.height,ke,We.data):t.compressedTexImage2D(i.TEXTURE_2D,Ue,nt,We.width,We.height,0,We.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):$?le&&t.texSubImage2D(i.TEXTURE_2D,Ue,0,0,We.width,We.height,ke,Je,We.data):t.texImage2D(i.TEXTURE_2D,Ue,nt,We.width,We.height,0,ke,Je,We.data)}else if(I.isDataArrayTexture)if($){if(ve&&t.texStorage3D(i.TEXTURE_2D_ARRAY,Pe,nt,Ie.width,Ie.height,Ie.depth),le)if(I.layerUpdates.size>0){const Ue=j2(Ie.width,Ie.height,I.format,I.type);for(const Ne of I.layerUpdates){const at=Ie.data.subarray(Ne*Ue/Ie.data.BYTES_PER_ELEMENT,(Ne+1)*Ue/Ie.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,Ne,Ie.width,Ie.height,1,ke,Je,at)}I.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,Ie.width,Ie.height,Ie.depth,ke,Je,Ie.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,nt,Ie.width,Ie.height,Ie.depth,0,ke,Je,Ie.data);else if(I.isData3DTexture)$?(ve&&t.texStorage3D(i.TEXTURE_3D,Pe,nt,Ie.width,Ie.height,Ie.depth),le&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,Ie.width,Ie.height,Ie.depth,ke,Je,Ie.data)):t.texImage3D(i.TEXTURE_3D,0,nt,Ie.width,Ie.height,Ie.depth,0,ke,Je,Ie.data);else if(I.isFramebufferTexture){if(ve)if($)t.texStorage2D(i.TEXTURE_2D,Pe,nt,Ie.width,Ie.height);else{let Ue=Ie.width,Ne=Ie.height;for(let at=0;at<Pe;at++)t.texImage2D(i.TEXTURE_2D,at,nt,Ue,Ne,0,ke,Je,null),Ue>>=1,Ne>>=1}}else if(ne.length>0){if($&&ve){const Ue=be(ne[0]);t.texStorage2D(i.TEXTURE_2D,Pe,nt,Ue.width,Ue.height)}for(let Ue=0,Ne=ne.length;Ue<Ne;Ue++)We=ne[Ue],$?le&&t.texSubImage2D(i.TEXTURE_2D,Ue,0,0,ke,Je,We):t.texImage2D(i.TEXTURE_2D,Ue,nt,ke,Je,We);I.generateMipmaps=!1}else if($){if(ve){const Ue=be(Ie);t.texStorage2D(i.TEXTURE_2D,Pe,nt,Ue.width,Ue.height)}le&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,ke,Je,Ie)}else t.texImage2D(i.TEXTURE_2D,0,nt,ke,Je,Ie);_(I)&&g(Me),qe.__version=ge.version,I.onUpdate&&I.onUpdate(I)}k.__version=I.version}function Ee(k,I,Y){if(I.image.length!==6)return;const Me=Ge(k,I),ye=I.source;t.bindTexture(i.TEXTURE_CUBE_MAP,k.__webglTexture,i.TEXTURE0+Y);const ge=n.get(ye);if(ye.version!==ge.__version||Me===!0){t.activeTexture(i.TEXTURE0+Y);const qe=Zt.getPrimaries(Zt.workingColorSpace),Te=I.colorSpace===yo?null:Zt.getPrimaries(I.colorSpace),ze=I.colorSpace===yo||qe===Te?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,I.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,I.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,ze);const tt=I.isCompressedTexture||I.image[0].isCompressedTexture,Ie=I.image[0]&&I.image[0].isDataTexture,ke=[];for(let Ne=0;Ne<6;Ne++)!tt&&!Ie?ke[Ne]=S(I.image[Ne],!0,r.maxCubemapSize):ke[Ne]=Ie?I.image[Ne].image:I.image[Ne],ke[Ne]=O(I,ke[Ne]);const Je=ke[0],nt=s.convert(I.format,I.colorSpace),We=s.convert(I.type),ne=E(I.internalFormat,nt,We,I.colorSpace),$=I.isVideoTexture!==!0,ve=ge.__version===void 0||Me===!0,le=ye.dataReady;let Pe=L(I,Je);de(i.TEXTURE_CUBE_MAP,I);let Ue;if(tt){$&&ve&&t.texStorage2D(i.TEXTURE_CUBE_MAP,Pe,ne,Je.width,Je.height);for(let Ne=0;Ne<6;Ne++){Ue=ke[Ne].mipmaps;for(let at=0;at<Ue.length;at++){const mt=Ue[at];I.format!==$r?nt!==null?$?le&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at,0,0,mt.width,mt.height,nt,mt.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at,ne,mt.width,mt.height,0,mt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):$?le&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at,0,0,mt.width,mt.height,nt,We,mt.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at,ne,mt.width,mt.height,0,nt,We,mt.data)}}}else{if(Ue=I.mipmaps,$&&ve){Ue.length>0&&Pe++;const Ne=be(ke[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,Pe,ne,Ne.width,Ne.height)}for(let Ne=0;Ne<6;Ne++)if(Ie){$?le&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,0,0,0,ke[Ne].width,ke[Ne].height,nt,We,ke[Ne].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,0,ne,ke[Ne].width,ke[Ne].height,0,nt,We,ke[Ne].data);for(let at=0;at<Ue.length;at++){const St=Ue[at].image[Ne].image;$?le&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at+1,0,0,St.width,St.height,nt,We,St.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at+1,ne,St.width,St.height,0,nt,We,St.data)}}else{$?le&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,0,0,0,nt,We,ke[Ne]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,0,ne,nt,We,ke[Ne]);for(let at=0;at<Ue.length;at++){const mt=Ue[at];$?le&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at+1,0,0,nt,We,mt.image[Ne]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+Ne,at+1,ne,nt,We,mt.image[Ne])}}}_(I)&&g(i.TEXTURE_CUBE_MAP),ge.__version=ye.version,I.onUpdate&&I.onUpdate(I)}k.__version=I.version}function Fe(k,I,Y,Me,ye,ge){const qe=s.convert(Y.format,Y.colorSpace),Te=s.convert(Y.type),ze=E(Y.internalFormat,qe,Te,Y.colorSpace),tt=n.get(I),Ie=n.get(Y);if(Ie.__renderTarget=I,!tt.__hasExternalTextures){const ke=Math.max(1,I.width>>ge),Je=Math.max(1,I.height>>ge);ye===i.TEXTURE_3D||ye===i.TEXTURE_2D_ARRAY?t.texImage3D(ye,ge,ze,ke,Je,I.depth,0,qe,Te,null):t.texImage2D(ye,ge,ze,ke,Je,0,qe,Te,null)}t.bindFramebuffer(i.FRAMEBUFFER,k),ot(I)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,Me,ye,Ie.__webglTexture,0,Ve(I)):(ye===i.TEXTURE_2D||ye>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&ye<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,Me,ye,Ie.__webglTexture,ge),t.bindFramebuffer(i.FRAMEBUFFER,null)}function He(k,I,Y){if(i.bindRenderbuffer(i.RENDERBUFFER,k),I.depthBuffer){const Me=I.depthTexture,ye=Me&&Me.isDepthTexture?Me.type:null,ge=T(I.stencilBuffer,ye),qe=I.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Te=Ve(I);ot(I)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,Te,ge,I.width,I.height):Y?i.renderbufferStorageMultisample(i.RENDERBUFFER,Te,ge,I.width,I.height):i.renderbufferStorage(i.RENDERBUFFER,ge,I.width,I.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,qe,i.RENDERBUFFER,k)}else{const Me=I.textures;for(let ye=0;ye<Me.length;ye++){const ge=Me[ye],qe=s.convert(ge.format,ge.colorSpace),Te=s.convert(ge.type),ze=E(ge.internalFormat,qe,Te,ge.colorSpace),tt=Ve(I);Y&&ot(I)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,tt,ze,I.width,I.height):ot(I)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,tt,ze,I.width,I.height):i.renderbufferStorage(i.RENDERBUFFER,ze,I.width,I.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function $e(k,I){if(I&&I.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,k),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Me=n.get(I.depthTexture);Me.__renderTarget=I,(!Me.__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),Z(I.depthTexture,0);const ye=Me.__webglTexture,ge=Ve(I);if(I.depthTexture.format===ch)ot(I)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ye,0,ge):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,ye,0);else if(I.depthTexture.format===uh)ot(I)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ye,0,ge):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,ye,0);else throw new Error("Unknown depthTexture format")}function wt(k){const I=n.get(k),Y=k.isWebGLCubeRenderTarget===!0;if(I.__boundDepthTexture!==k.depthTexture){const Me=k.depthTexture;if(I.__depthDisposeCallback&&I.__depthDisposeCallback(),Me){const ye=()=>{delete I.__boundDepthTexture,delete I.__depthDisposeCallback,Me.removeEventListener("dispose",ye)};Me.addEventListener("dispose",ye),I.__depthDisposeCallback=ye}I.__boundDepthTexture=Me}if(k.depthTexture&&!I.__autoAllocateDepthBuffer){if(Y)throw new Error("target.depthTexture not supported in Cube render targets");const Me=k.texture.mipmaps;Me&&Me.length>0?$e(I.__webglFramebuffer[0],k):$e(I.__webglFramebuffer,k)}else if(Y){I.__webglDepthbuffer=[];for(let Me=0;Me<6;Me++)if(t.bindFramebuffer(i.FRAMEBUFFER,I.__webglFramebuffer[Me]),I.__webglDepthbuffer[Me]===void 0)I.__webglDepthbuffer[Me]=i.createRenderbuffer(),He(I.__webglDepthbuffer[Me],k,!1);else{const ye=k.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ge=I.__webglDepthbuffer[Me];i.bindRenderbuffer(i.RENDERBUFFER,ge),i.framebufferRenderbuffer(i.FRAMEBUFFER,ye,i.RENDERBUFFER,ge)}}else{const Me=k.texture.mipmaps;if(Me&&Me.length>0?t.bindFramebuffer(i.FRAMEBUFFER,I.__webglFramebuffer[0]):t.bindFramebuffer(i.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer===void 0)I.__webglDepthbuffer=i.createRenderbuffer(),He(I.__webglDepthbuffer,k,!1);else{const ye=k.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ge=I.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,ge),i.framebufferRenderbuffer(i.FRAMEBUFFER,ye,i.RENDERBUFFER,ge)}}t.bindFramebuffer(i.FRAMEBUFFER,null)}function ee(k,I,Y){const Me=n.get(k);I!==void 0&&Fe(Me.__webglFramebuffer,k,k.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),Y!==void 0&&wt(k)}function Tt(k){const I=k.texture,Y=n.get(k),Me=n.get(I);k.addEventListener("dispose",P);const ye=k.textures,ge=k.isWebGLCubeRenderTarget===!0,qe=ye.length>1;if(qe||(Me.__webglTexture===void 0&&(Me.__webglTexture=i.createTexture()),Me.__version=I.version,o.memory.textures++),ge){Y.__webglFramebuffer=[];for(let Te=0;Te<6;Te++)if(I.mipmaps&&I.mipmaps.length>0){Y.__webglFramebuffer[Te]=[];for(let ze=0;ze<I.mipmaps.length;ze++)Y.__webglFramebuffer[Te][ze]=i.createFramebuffer()}else Y.__webglFramebuffer[Te]=i.createFramebuffer()}else{if(I.mipmaps&&I.mipmaps.length>0){Y.__webglFramebuffer=[];for(let Te=0;Te<I.mipmaps.length;Te++)Y.__webglFramebuffer[Te]=i.createFramebuffer()}else Y.__webglFramebuffer=i.createFramebuffer();if(qe)for(let Te=0,ze=ye.length;Te<ze;Te++){const tt=n.get(ye[Te]);tt.__webglTexture===void 0&&(tt.__webglTexture=i.createTexture(),o.memory.textures++)}if(k.samples>0&&ot(k)===!1){Y.__webglMultisampledFramebuffer=i.createFramebuffer(),Y.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,Y.__webglMultisampledFramebuffer);for(let Te=0;Te<ye.length;Te++){const ze=ye[Te];Y.__webglColorRenderbuffer[Te]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,Y.__webglColorRenderbuffer[Te]);const tt=s.convert(ze.format,ze.colorSpace),Ie=s.convert(ze.type),ke=E(ze.internalFormat,tt,Ie,ze.colorSpace,k.isXRRenderTarget===!0),Je=Ve(k);i.renderbufferStorageMultisample(i.RENDERBUFFER,Je,ke,k.width,k.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+Te,i.RENDERBUFFER,Y.__webglColorRenderbuffer[Te])}i.bindRenderbuffer(i.RENDERBUFFER,null),k.depthBuffer&&(Y.__webglDepthRenderbuffer=i.createRenderbuffer(),He(Y.__webglDepthRenderbuffer,k,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(ge){t.bindTexture(i.TEXTURE_CUBE_MAP,Me.__webglTexture),de(i.TEXTURE_CUBE_MAP,I);for(let Te=0;Te<6;Te++)if(I.mipmaps&&I.mipmaps.length>0)for(let ze=0;ze<I.mipmaps.length;ze++)Fe(Y.__webglFramebuffer[Te][ze],k,I,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+Te,ze);else Fe(Y.__webglFramebuffer[Te],k,I,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+Te,0);_(I)&&g(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(qe){for(let Te=0,ze=ye.length;Te<ze;Te++){const tt=ye[Te],Ie=n.get(tt);t.bindTexture(i.TEXTURE_2D,Ie.__webglTexture),de(i.TEXTURE_2D,tt),Fe(Y.__webglFramebuffer,k,tt,i.COLOR_ATTACHMENT0+Te,i.TEXTURE_2D,0),_(tt)&&g(i.TEXTURE_2D)}t.unbindTexture()}else{let Te=i.TEXTURE_2D;if((k.isWebGL3DRenderTarget||k.isWebGLArrayRenderTarget)&&(Te=k.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(Te,Me.__webglTexture),de(Te,I),I.mipmaps&&I.mipmaps.length>0)for(let ze=0;ze<I.mipmaps.length;ze++)Fe(Y.__webglFramebuffer[ze],k,I,i.COLOR_ATTACHMENT0,Te,ze);else Fe(Y.__webglFramebuffer,k,I,i.COLOR_ATTACHMENT0,Te,0);_(I)&&g(Te),t.unbindTexture()}k.depthBuffer&&wt(k)}function te(k){const I=k.textures;for(let Y=0,Me=I.length;Y<Me;Y++){const ye=I[Y];if(_(ye)){const ge=b(k),qe=n.get(ye).__webglTexture;t.bindTexture(ge,qe),g(ge),t.unbindTexture()}}}const Lt=[],st=[];function Pt(k){if(k.samples>0){if(ot(k)===!1){const I=k.textures,Y=k.width,Me=k.height;let ye=i.COLOR_BUFFER_BIT;const ge=k.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,qe=n.get(k),Te=I.length>1;if(Te)for(let tt=0;tt<I.length;tt++)t.bindFramebuffer(i.FRAMEBUFFER,qe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+tt,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,qe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+tt,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,qe.__webglMultisampledFramebuffer);const ze=k.texture.mipmaps;ze&&ze.length>0?t.bindFramebuffer(i.DRAW_FRAMEBUFFER,qe.__webglFramebuffer[0]):t.bindFramebuffer(i.DRAW_FRAMEBUFFER,qe.__webglFramebuffer);for(let tt=0;tt<I.length;tt++){if(k.resolveDepthBuffer&&(k.depthBuffer&&(ye|=i.DEPTH_BUFFER_BIT),k.stencilBuffer&&k.resolveStencilBuffer&&(ye|=i.STENCIL_BUFFER_BIT)),Te){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,qe.__webglColorRenderbuffer[tt]);const Ie=n.get(I[tt]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,Ie,0)}i.blitFramebuffer(0,0,Y,Me,0,0,Y,Me,ye,i.NEAREST),u===!0&&(Lt.length=0,st.length=0,Lt.push(i.COLOR_ATTACHMENT0+tt),k.depthBuffer&&k.resolveDepthBuffer===!1&&(Lt.push(ge),st.push(ge),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,st)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,Lt))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),Te)for(let tt=0;tt<I.length;tt++){t.bindFramebuffer(i.FRAMEBUFFER,qe.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+tt,i.RENDERBUFFER,qe.__webglColorRenderbuffer[tt]);const Ie=n.get(I[tt]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,qe.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+tt,i.TEXTURE_2D,Ie,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,qe.__webglMultisampledFramebuffer)}else if(k.depthBuffer&&k.resolveDepthBuffer===!1&&u){const I=k.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[I])}}}function Ve(k){return Math.min(r.maxSamples,k.samples)}function ot(k){const I=n.get(k);return k.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function W(k){const I=o.render.frame;h.get(k)!==I&&(h.set(k,I),k.update())}function O(k,I){const Y=k.colorSpace,Me=k.format,ye=k.type;return k.isCompressedTexture===!0||k.isVideoTexture===!0||Y!==ji&&Y!==yo&&(Zt.getTransfer(Y)===dn?(Me!==$r||ye!==ks)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",Y)),I}function be(k){return typeof HTMLImageElement<"u"&&k instanceof HTMLImageElement?(f.width=k.naturalWidth||k.width,f.height=k.naturalHeight||k.height):typeof VideoFrame<"u"&&k instanceof VideoFrame?(f.width=k.displayWidth,f.height=k.displayHeight):(f.width=k.width,f.height=k.height),f}this.allocateTextureUnit=z,this.resetTextureUnits=X,this.setTexture2D=Z,this.setTexture2DArray=q,this.setTexture3D=K,this.setTextureCube=B,this.rebindTextures=ee,this.setupRenderTarget=Tt,this.updateRenderTargetMipmap=te,this.updateMultisampleRenderTarget=Pt,this.setupDepthRenderbuffer=wt,this.setupFrameBufferTexture=Fe,this.useMultisampledRTT=ot}function s6(i,e){function t(n,r=yo){let s;const o=Zt.getTransfer(r);if(n===ks)return i.UNSIGNED_BYTE;if(n===bx)return i.UNSIGNED_SHORT_4_4_4_4;if(n===Ax)return i.UNSIGNED_SHORT_5_5_5_1;if(n===w3)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===E3)return i.BYTE;if(n===T3)return i.SHORT;if(n===oh)return i.UNSIGNED_SHORT;if(n===wx)return i.INT;if(n===Pl)return i.UNSIGNED_INT;if(n===us)return i.FLOAT;if(n===Eh)return i.HALF_FLOAT;if(n===b3)return i.ALPHA;if(n===A3)return i.RGB;if(n===$r)return i.RGBA;if(n===ch)return i.DEPTH_COMPONENT;if(n===uh)return i.DEPTH_STENCIL;if(n===Rx)return i.RED;if(n===Cx)return i.RED_INTEGER;if(n===R3)return i.RG;if(n===Px)return i.RG_INTEGER;if(n===Lx)return i.RGBA_INTEGER;if(n===Gp||n===Wp||n===Xp||n===$p)if(o===dn)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Gp)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Wp)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Xp)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===$p)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Gp)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Wp)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Xp)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===$p)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===Iv||n===Dv||n===Nv||n===Uv)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===Iv)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===Dv)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===Nv)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===Uv)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Ov||n===Fv||n===kv)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Ov||n===Fv)return o===dn?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===kv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Bv||n===zv||n===Hv||n===Vv||n===Gv||n===Wv||n===Xv||n===$v||n===jv||n===qv||n===Yv||n===Kv||n===Zv||n===Qv)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===Bv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===zv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Hv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Vv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===Gv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Wv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Xv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===$v)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===jv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===qv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Yv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Kv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Zv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Qv)return o===dn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===jp||n===Jv||n===e1)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===jp)return o===dn?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Jv)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===e1)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===C3||n===t1||n===n1||n===i1)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===jp)return s.COMPRESSED_RED_RGTC1_EXT;if(n===t1)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===n1)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===i1)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===lh?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}const a6=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,o6=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;let l6=class{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const r=new Oi,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!==n.depthNear||t.depthFar!==n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new Po({vertexShader:a6,fragmentShader:o6,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new Mi(new Bm(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}},c6=class extends kl{constructor(e,t){super();const n=this;let r=null,s=1,o=null,c="local-floor",u=1,f=null,h=null,p=null,m=null,v=null,y=null;const S=new l6,_=t.getContextAttributes();let g=null,b=null;const E=[],T=[],L=new Nt;let C=null;const P=new Gi;P.viewport=new un;const N=new Gi;N.viewport=new un;const A=[P,N],w=new x5;let D=null,X=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let fe=E[j];return fe===void 0&&(fe=new i_,E[j]=fe),fe.getTargetRaySpace()},this.getControllerGrip=function(j){let fe=E[j];return fe===void 0&&(fe=new i_,E[j]=fe),fe.getGripSpace()},this.getHand=function(j){let fe=E[j];return fe===void 0&&(fe=new i_,E[j]=fe),fe.getHandSpace()};function z(j){const fe=T.indexOf(j.inputSource);if(fe===-1)return;const Re=E[fe];Re!==void 0&&(Re.update(j.inputSource,j.frame,f||o),Re.dispatchEvent({type:j.type,data:j.inputSource}))}function G(){r.removeEventListener("select",z),r.removeEventListener("selectstart",z),r.removeEventListener("selectend",z),r.removeEventListener("squeeze",z),r.removeEventListener("squeezestart",z),r.removeEventListener("squeezeend",z),r.removeEventListener("end",G),r.removeEventListener("inputsourceschange",Z);for(let j=0;j<E.length;j++){const fe=T[j];fe!==null&&(T[j]=null,E[j].disconnect(fe))}D=null,X=null,S.reset(),e.setRenderTarget(g),v=null,m=null,p=null,r=null,b=null,Ge.stop(),n.isPresenting=!1,e.setPixelRatio(C),e.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){c=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||o},this.setReferenceSpace=function(j){f=j},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",z),r.addEventListener("selectstart",z),r.addEventListener("selectend",z),r.addEventListener("squeeze",z),r.addEventListener("squeezestart",z),r.addEventListener("squeezeend",z),r.addEventListener("end",G),r.addEventListener("inputsourceschange",Z),_.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(L),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Re=null,Ee=null,Fe=null;_.depth&&(Fe=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Re=_.stencil?uh:ch,Ee=_.stencil?lh:Pl);const He={colorFormat:t.RGBA8,depthFormat:Fe,scaleFactor:s};p=new XRWebGLBinding(r,t),m=p.createProjectionLayer(He),r.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),b=new Ll(m.textureWidth,m.textureHeight,{format:$r,type:ks,depthTexture:new eb(m.textureWidth,m.textureHeight,Ee,void 0,void 0,void 0,void 0,void 0,void 0,Re),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1,resolveStencilBuffer:m.ignoreDepthValues===!1})}else{const Re={antialias:_.antialias,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(r,t,Re),r.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),b=new Ll(v.framebufferWidth,v.framebufferHeight,{format:$r,type:ks,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil,resolveDepthBuffer:v.ignoreDepthValues===!1,resolveStencilBuffer:v.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(u),f=null,o=await r.requestReferenceSpace(c),Ge.setContext(r),Ge.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return S.getDepthTexture()};function Z(j){for(let fe=0;fe<j.removed.length;fe++){const Re=j.removed[fe],Ee=T.indexOf(Re);Ee>=0&&(T[Ee]=null,E[Ee].disconnect(Re))}for(let fe=0;fe<j.added.length;fe++){const Re=j.added[fe];let Ee=T.indexOf(Re);if(Ee===-1){for(let He=0;He<E.length;He++)if(He>=T.length){T.push(Re),Ee=He;break}else if(T[He]===null){T[He]=Re,Ee=He;break}if(Ee===-1)break}const Fe=E[Ee];Fe&&Fe.connect(Re)}}const q=new he,K=new he;function B(j,fe,Re){q.setFromMatrixPosition(fe.matrixWorld),K.setFromMatrixPosition(Re.matrixWorld);const Ee=q.distanceTo(K),Fe=fe.projectionMatrix.elements,He=Re.projectionMatrix.elements,$e=Fe[14]/(Fe[10]-1),wt=Fe[14]/(Fe[10]+1),ee=(Fe[9]+1)/Fe[5],Tt=(Fe[9]-1)/Fe[5],te=(Fe[8]-1)/Fe[0],Lt=(He[8]+1)/He[0],st=$e*te,Pt=$e*Lt,Ve=Ee/(-te+Lt),ot=Ve*-te;if(fe.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(ot),j.translateZ(Ve),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert(),Fe[10]===-1)j.projectionMatrix.copy(fe.projectionMatrix),j.projectionMatrixInverse.copy(fe.projectionMatrixInverse);else{const W=$e+Ve,O=wt+Ve,be=st-ot,k=Pt+(Ee-ot),I=ee*wt/O*W,Y=Tt*wt/O*W;j.projectionMatrix.makePerspective(be,k,I,Y,W,O),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}}function ie(j,fe){fe===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(fe.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;let fe=j.near,Re=j.far;S.texture!==null&&(S.depthNear>0&&(fe=S.depthNear),S.depthFar>0&&(Re=S.depthFar)),w.near=N.near=P.near=fe,w.far=N.far=P.far=Re,(D!==w.near||X!==w.far)&&(r.updateRenderState({depthNear:w.near,depthFar:w.far}),D=w.near,X=w.far),P.layers.mask=j.layers.mask|2,N.layers.mask=j.layers.mask|4,w.layers.mask=P.layers.mask|N.layers.mask;const Ee=j.parent,Fe=w.cameras;ie(w,Ee);for(let He=0;He<Fe.length;He++)ie(Fe[He],Ee);Fe.length===2?B(w,P,N):w.projectionMatrix.copy(P.projectionMatrix),oe(j,w,Ee)};function oe(j,fe,Re){Re===null?j.matrix.copy(fe.matrixWorld):(j.matrix.copy(Re.matrixWorld),j.matrix.invert(),j.matrix.multiply(fe.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(fe.projectionMatrix),j.projectionMatrixInverse.copy(fe.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=fu*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(j){u=j,m!==null&&(m.fixedFoveation=j),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=j)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(w)};let V=null;function de(j,fe){if(h=fe.getViewerPose(f||o),y=fe,h!==null){const Re=h.views;v!==null&&(e.setRenderTargetFramebuffer(b,v.framebuffer),e.setRenderTarget(b));let Ee=!1;Re.length!==w.cameras.length&&(w.cameras.length=0,Ee=!0);for(let $e=0;$e<Re.length;$e++){const wt=Re[$e];let ee=null;if(v!==null)ee=v.getViewport(wt);else{const te=p.getViewSubImage(m,wt);ee=te.viewport,$e===0&&(e.setRenderTargetTextures(b,te.colorTexture,te.depthStencilTexture),e.setRenderTarget(b))}let Tt=A[$e];Tt===void 0&&(Tt=new Gi,Tt.layers.enable($e),Tt.viewport=new un,A[$e]=Tt),Tt.matrix.fromArray(wt.transform.matrix),Tt.matrix.decompose(Tt.position,Tt.quaternion,Tt.scale),Tt.projectionMatrix.fromArray(wt.projectionMatrix),Tt.projectionMatrixInverse.copy(Tt.projectionMatrix).invert(),Tt.viewport.set(ee.x,ee.y,ee.width,ee.height),$e===0&&(w.matrix.copy(Tt.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),Ee===!0&&w.cameras.push(Tt)}const Fe=r.enabledFeatures;if(Fe&&Fe.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&p){const $e=p.getDepthInformation(Re[0]);$e&&$e.isValid&&$e.texture&&S.init(e,$e,r.renderState)}}for(let Re=0;Re<E.length;Re++){const Ee=T[Re],Fe=E[Re];Ee!==null&&Fe!==void 0&&Fe.update(Ee,fe,f||o)}V&&V(j,fe),fe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:fe}),y=null}const Ge=new ob;Ge.setAnimationLoop(de),this.setAnimationLoop=function(j){V=j},this.dispose=function(){}}};const el=new Co,u6=new $t;function f6(i,e){function t(_,g){_.matrixAutoUpdate===!0&&_.updateMatrix(),g.value.copy(_.matrix)}function n(_,g){g.color.getRGB(_.fogColor.value,j3(i)),g.isFog?(_.fogNear.value=g.near,_.fogFar.value=g.far):g.isFogExp2&&(_.fogDensity.value=g.density)}function r(_,g,b,E,T){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(_,g):g.isMeshToonMaterial?(s(_,g),p(_,g)):g.isMeshPhongMaterial?(s(_,g),h(_,g)):g.isMeshStandardMaterial?(s(_,g),m(_,g),g.isMeshPhysicalMaterial&&v(_,g,T)):g.isMeshMatcapMaterial?(s(_,g),y(_,g)):g.isMeshDepthMaterial?s(_,g):g.isMeshDistanceMaterial?(s(_,g),S(_,g)):g.isMeshNormalMaterial?s(_,g):g.isLineBasicMaterial?(o(_,g),g.isLineDashedMaterial&&c(_,g)):g.isPointsMaterial?u(_,g,b,E):g.isSpriteMaterial?f(_,g):g.isShadowMaterial?(_.color.value.copy(g.color),_.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(_,g){_.opacity.value=g.opacity,g.color&&_.diffuse.value.copy(g.color),g.emissive&&_.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.bumpMap&&(_.bumpMap.value=g.bumpMap,t(g.bumpMap,_.bumpMapTransform),_.bumpScale.value=g.bumpScale,g.side===lr&&(_.bumpScale.value*=-1)),g.normalMap&&(_.normalMap.value=g.normalMap,t(g.normalMap,_.normalMapTransform),_.normalScale.value.copy(g.normalScale),g.side===lr&&_.normalScale.value.negate()),g.displacementMap&&(_.displacementMap.value=g.displacementMap,t(g.displacementMap,_.displacementMapTransform),_.displacementScale.value=g.displacementScale,_.displacementBias.value=g.displacementBias),g.emissiveMap&&(_.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,_.emissiveMapTransform)),g.specularMap&&(_.specularMap.value=g.specularMap,t(g.specularMap,_.specularMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest);const b=e.get(g),E=b.envMap,T=b.envMapRotation;E&&(_.envMap.value=E,el.copy(T),el.x*=-1,el.y*=-1,el.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(el.y*=-1,el.z*=-1),_.envMapRotation.value.setFromMatrix4(u6.makeRotationFromEuler(el)),_.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=g.reflectivity,_.ior.value=g.ior,_.refractionRatio.value=g.refractionRatio),g.lightMap&&(_.lightMap.value=g.lightMap,_.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,_.lightMapTransform)),g.aoMap&&(_.aoMap.value=g.aoMap,_.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,_.aoMapTransform))}function o(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform))}function c(_,g){_.dashSize.value=g.dashSize,_.totalSize.value=g.dashSize+g.gapSize,_.scale.value=g.scale}function u(_,g,b,E){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.size.value=g.size*b,_.scale.value=E*.5,g.map&&(_.map.value=g.map,t(g.map,_.uvTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function f(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.rotation.value=g.rotation,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function h(_,g){_.specular.value.copy(g.specular),_.shininess.value=Math.max(g.shininess,1e-4)}function p(_,g){g.gradientMap&&(_.gradientMap.value=g.gradientMap)}function m(_,g){_.metalness.value=g.metalness,g.metalnessMap&&(_.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,_.metalnessMapTransform)),_.roughness.value=g.roughness,g.roughnessMap&&(_.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,_.roughnessMapTransform)),g.envMap&&(_.envMapIntensity.value=g.envMapIntensity)}function v(_,g,b){_.ior.value=g.ior,g.sheen>0&&(_.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),_.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(_.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,_.sheenColorMapTransform)),g.sheenRoughnessMap&&(_.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,_.sheenRoughnessMapTransform))),g.clearcoat>0&&(_.clearcoat.value=g.clearcoat,_.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(_.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,_.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(_.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===lr&&_.clearcoatNormalScale.value.negate())),g.dispersion>0&&(_.dispersion.value=g.dispersion),g.iridescence>0&&(_.iridescence.value=g.iridescence,_.iridescenceIOR.value=g.iridescenceIOR,_.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(_.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,_.iridescenceMapTransform)),g.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),g.transmission>0&&(_.transmission.value=g.transmission,_.transmissionSamplerMap.value=b.texture,_.transmissionSamplerSize.value.set(b.width,b.height),g.transmissionMap&&(_.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,_.transmissionMapTransform)),_.thickness.value=g.thickness,g.thicknessMap&&(_.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=g.attenuationDistance,_.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(_.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(_.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=g.specularIntensity,_.specularColor.value.copy(g.specularColor),g.specularColorMap&&(_.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,_.specularColorMapTransform)),g.specularIntensityMap&&(_.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,_.specularIntensityMapTransform))}function y(_,g){g.matcap&&(_.matcap.value=g.matcap)}function S(_,g){const b=e.get(g).light;_.referencePosition.value.setFromMatrixPosition(b.matrixWorld),_.nearDistance.value=b.shadow.camera.near,_.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function h6(i,e,t,n){let r={},s={},o=[];const c=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function u(b,E){const T=E.program;n.uniformBlockBinding(b,T)}function f(b,E){let T=r[b.id];T===void 0&&(y(b),T=h(b),r[b.id]=T,b.addEventListener("dispose",_));const L=E.program;n.updateUBOMapping(b,L);const C=e.render.frame;s[b.id]!==C&&(m(b),s[b.id]=C)}function h(b){const E=p();b.__bindingPointIndex=E;const T=i.createBuffer(),L=b.__size,C=b.usage;return i.bindBuffer(i.UNIFORM_BUFFER,T),i.bufferData(i.UNIFORM_BUFFER,L,C),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,E,T),T}function p(){for(let b=0;b<c;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(b){const E=r[b.id],T=b.uniforms,L=b.__cache;i.bindBuffer(i.UNIFORM_BUFFER,E);for(let C=0,P=T.length;C<P;C++){const N=Array.isArray(T[C])?T[C]:[T[C]];for(let A=0,w=N.length;A<w;A++){const D=N[A];if(v(D,C,A,L)===!0){const X=D.__offset,z=Array.isArray(D.value)?D.value:[D.value];let G=0;for(let Z=0;Z<z.length;Z++){const q=z[Z],K=S(q);typeof q=="number"||typeof q=="boolean"?(D.__data[0]=q,i.bufferSubData(i.UNIFORM_BUFFER,X+G,D.__data)):q.isMatrix3?(D.__data[0]=q.elements[0],D.__data[1]=q.elements[1],D.__data[2]=q.elements[2],D.__data[3]=0,D.__data[4]=q.elements[3],D.__data[5]=q.elements[4],D.__data[6]=q.elements[5],D.__data[7]=0,D.__data[8]=q.elements[6],D.__data[9]=q.elements[7],D.__data[10]=q.elements[8],D.__data[11]=0):(q.toArray(D.__data,G),G+=K.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,X,D.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function v(b,E,T,L){const C=b.value,P=E+"_"+T;if(L[P]===void 0)return typeof C=="number"||typeof C=="boolean"?L[P]=C:L[P]=C.clone(),!0;{const N=L[P];if(typeof C=="number"||typeof C=="boolean"){if(N!==C)return L[P]=C,!0}else if(N.equals(C)===!1)return N.copy(C),!0}return!1}function y(b){const E=b.uniforms;let T=0;const L=16;for(let P=0,N=E.length;P<N;P++){const A=Array.isArray(E[P])?E[P]:[E[P]];for(let w=0,D=A.length;w<D;w++){const X=A[w],z=Array.isArray(X.value)?X.value:[X.value];for(let G=0,Z=z.length;G<Z;G++){const q=z[G],K=S(q),B=T%L,ie=B%K.boundary,oe=B+ie;T+=ie,oe!==0&&L-oe<K.storage&&(T+=L-oe),X.__data=new Float32Array(K.storage/Float32Array.BYTES_PER_ELEMENT),X.__offset=T,T+=K.storage}}}const C=T%L;return C>0&&(T+=L-C),b.__size=T,b.__cache={},this}function S(b){const E={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(E.boundary=4,E.storage=4):b.isVector2?(E.boundary=8,E.storage=8):b.isVector3||b.isColor?(E.boundary=16,E.storage=12):b.isVector4?(E.boundary=16,E.storage=16):b.isMatrix3?(E.boundary=48,E.storage=48):b.isMatrix4?(E.boundary=64,E.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),E}function _(b){const E=b.target;E.removeEventListener("dispose",_);const T=o.indexOf(E.__bindingPointIndex);o.splice(T,1),i.deleteBuffer(r[E.id]),delete r[E.id],delete s[E.id]}function g(){for(const b in r)i.deleteBuffer(r[b]);o=[],r={},s={}}return{bind:u,update:f,dispose:g}}let d6=class{constructor(e={}){const{canvas:t=l4(),context:n=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:f=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:p=!1,reverseDepthBuffer:m=!1}=e;this.isWebGLRenderer=!0;let v;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");v=n.getContextAttributes().alpha}else v=o;const y=new Uint32Array(4),S=new Int32Array(4);let _=null,g=null;const b=[],E=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=bo,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const T=this;let L=!1;this._outputColorSpace=Xn;let C=0,P=0,N=null,A=-1,w=null;const D=new un,X=new un;let z=null;const G=new Ut(0);let Z=0,q=t.width,K=t.height,B=1,ie=null,oe=null;const V=new un(0,0,q,K),de=new un(0,0,q,K);let Ge=!1;const j=new Fx;let fe=!1,Re=!1;const Ee=new $t,Fe=new $t,He=new he,$e=new un,wt={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let ee=!1;function Tt(){return N===null?B:1}let te=n;function Lt(U,J){return t.getContext(U,J)}try{const U={alpha:!0,depth:r,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:f,powerPreference:h,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Tx}`),t.addEventListener("webglcontextlost",Pe,!1),t.addEventListener("webglcontextrestored",Ue,!1),t.addEventListener("webglcontextcreationerror",Ne,!1),te===null){const J="webgl2";if(te=Lt(J,U),te===null)throw Lt(J)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(U){throw console.error("THREE.WebGLRenderer: "+U.message),U}let st,Pt,Ve,ot,W,O,be,k,I,Y,Me,ye,ge,qe,Te,ze,tt,Ie,ke,Je,nt,We,ne,$;function ve(){st=new ED(te),st.init(),We=new s6(te,st),Pt=new gD(te,st,e,We),Ve=new i6(te,st),Pt.reverseDepthBuffer&&m&&Ve.buffers.depth.setReversed(!0),ot=new bD(te),W=new WN,O=new r6(te,st,Ve,W,Pt,We,ot),be=new vD(T),k=new MD(T),I=new I5(te),ne=new pD(te,I),Y=new TD(te,I,ot,ne),Me=new RD(te,Y,I,ot),ke=new AD(te,Pt,O),ze=new _D(W),ye=new GN(T,be,k,st,Pt,ne,ze),ge=new f6(T,W),qe=new $N,Te=new QN(st),Ie=new dD(T,be,k,Ve,Me,v,u),tt=new t6(T,Me,Pt),$=new h6(te,ot,Pt,Ve),Je=new mD(te,st,ot),nt=new wD(te,st,ot),ot.programs=ye.programs,T.capabilities=Pt,T.extensions=st,T.properties=W,T.renderLists=qe,T.shadowMap=tt,T.state=Ve,T.info=ot}ve();const le=new c6(T,te);this.xr=le,this.getContext=function(){return te},this.getContextAttributes=function(){return te.getContextAttributes()},this.forceContextLoss=function(){const U=st.get("WEBGL_lose_context");U&&U.loseContext()},this.forceContextRestore=function(){const U=st.get("WEBGL_lose_context");U&&U.restoreContext()},this.getPixelRatio=function(){return B},this.setPixelRatio=function(U){U!==void 0&&(B=U,this.setSize(q,K,!1))},this.getSize=function(U){return U.set(q,K)},this.setSize=function(U,J,ue=!0){if(le.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}q=U,K=J,t.width=Math.floor(U*B),t.height=Math.floor(J*B),ue===!0&&(t.style.width=U+"px",t.style.height=J+"px"),this.setViewport(0,0,U,J)},this.getDrawingBufferSize=function(U){return U.set(q*B,K*B).floor()},this.setDrawingBufferSize=function(U,J,ue){q=U,K=J,B=ue,t.width=Math.floor(U*ue),t.height=Math.floor(J*ue),this.setViewport(0,0,U,J)},this.getCurrentViewport=function(U){return U.copy(D)},this.getViewport=function(U){return U.copy(V)},this.setViewport=function(U,J,ue,re){U.isVector4?V.set(U.x,U.y,U.z,U.w):V.set(U,J,ue,re),Ve.viewport(D.copy(V).multiplyScalar(B).round())},this.getScissor=function(U){return U.copy(de)},this.setScissor=function(U,J,ue,re){U.isVector4?de.set(U.x,U.y,U.z,U.w):de.set(U,J,ue,re),Ve.scissor(X.copy(de).multiplyScalar(B).round())},this.getScissorTest=function(){return Ge},this.setScissorTest=function(U){Ve.setScissorTest(Ge=U)},this.setOpaqueSort=function(U){ie=U},this.setTransparentSort=function(U){oe=U},this.getClearColor=function(U){return U.copy(Ie.getClearColor())},this.setClearColor=function(){Ie.setClearColor(...arguments)},this.getClearAlpha=function(){return Ie.getClearAlpha()},this.setClearAlpha=function(){Ie.setClearAlpha(...arguments)},this.clear=function(U=!0,J=!0,ue=!0){let re=0;if(U){let se=!1;if(N!==null){const Oe=N.texture.format;se=Oe===Lx||Oe===Px||Oe===Cx}if(se){const Oe=N.texture.type,Be=Oe===ks||Oe===Pl||Oe===oh||Oe===lh||Oe===bx||Oe===Ax,Ke=Ie.getClearColor(),it=Ie.getClearAlpha(),ut=Ke.r,gt=Ke.g,Qe=Ke.b;Be?(y[0]=ut,y[1]=gt,y[2]=Qe,y[3]=it,te.clearBufferuiv(te.COLOR,0,y)):(S[0]=ut,S[1]=gt,S[2]=Qe,S[3]=it,te.clearBufferiv(te.COLOR,0,S))}else re|=te.COLOR_BUFFER_BIT}J&&(re|=te.DEPTH_BUFFER_BIT),ue&&(re|=te.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),te.clear(re)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Pe,!1),t.removeEventListener("webglcontextrestored",Ue,!1),t.removeEventListener("webglcontextcreationerror",Ne,!1),Ie.dispose(),qe.dispose(),Te.dispose(),W.dispose(),be.dispose(),k.dispose(),Me.dispose(),ne.dispose(),$.dispose(),ye.dispose(),le.dispose(),le.removeEventListener("sessionstart",Yi),le.removeEventListener("sessionend",Cr),Pr.stop()};function Pe(U){U.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),L=!0}function Ue(){console.log("THREE.WebGLRenderer: Context Restored."),L=!1;const U=ot.autoReset,J=tt.enabled,ue=tt.autoUpdate,re=tt.needsUpdate,se=tt.type;ve(),ot.autoReset=U,tt.enabled=J,tt.autoUpdate=ue,tt.needsUpdate=re,tt.type=se}function Ne(U){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",U.statusMessage)}function at(U){const J=U.target;J.removeEventListener("dispose",at),mt(J)}function mt(U){St(U),W.remove(U)}function St(U){const J=W.get(U).programs;J!==void 0&&(J.forEach(function(ue){ye.releaseProgram(ue)}),U.isShaderMaterial&&ye.releaseShaderCache(U))}this.renderBufferDirect=function(U,J,ue,re,se,Oe){J===null&&(J=wt);const Be=se.isMesh&&se.matrixWorld.determinant()<0,Ke=zl(U,J,ue,re,se);Ve.setMaterial(re,Be);let it=ue.index,ut=1;if(re.wireframe===!0){if(it=Y.getWireframeAttribute(ue),it===void 0)return;ut=2}const gt=ue.drawRange,Qe=ue.attributes.position;let et=gt.start*ut,Et=(gt.start+gt.count)*ut;Oe!==null&&(et=Math.max(et,Oe.start*ut),Et=Math.min(Et,(Oe.start+Oe.count)*ut)),it!==null?(et=Math.max(et,0),Et=Math.min(Et,it.count)):Qe!=null&&(et=Math.max(et,0),Et=Math.min(Et,Qe.count));const At=Et-et;if(At<0||At===1/0)return;ne.setup(se,re,Ke,ue,it);let Ht,Yt=Je;if(it!==null&&(Ht=I.get(it),Yt=nt,Yt.setIndex(Ht)),se.isMesh)re.wireframe===!0?(Ve.setLineWidth(re.wireframeLinewidth*Tt()),Yt.setMode(te.LINES)):Yt.setMode(te.TRIANGLES);else if(se.isLine){let ft=re.linewidth;ft===void 0&&(ft=1),Ve.setLineWidth(ft*Tt()),se.isLineSegments?Yt.setMode(te.LINES):se.isLineLoop?Yt.setMode(te.LINE_LOOP):Yt.setMode(te.LINE_STRIP)}else se.isPoints?Yt.setMode(te.POINTS):se.isSprite&&Yt.setMode(te.TRIANGLES);if(se.isBatchedMesh)if(se._multiDrawInstances!==null)eu("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Yt.renderMultiDrawInstances(se._multiDrawStarts,se._multiDrawCounts,se._multiDrawCount,se._multiDrawInstances);else if(st.get("WEBGL_multi_draw"))Yt.renderMultiDraw(se._multiDrawStarts,se._multiDrawCounts,se._multiDrawCount);else{const ft=se._multiDrawStarts,tn=se._multiDrawCounts,Mt=se._multiDrawCount,mn=it?I.get(it).bytesPerElement:1,Nr=W.get(re).currentProgram.getUniforms();for(let hn=0;hn<Mt;hn++)Nr.setValue(te,"_gl_DrawID",hn),Yt.render(ft[hn]/mn,tn[hn])}else if(se.isInstancedMesh)Yt.renderInstances(et,At,se.count);else if(ue.isInstancedBufferGeometry){const ft=ue._maxInstanceCount!==void 0?ue._maxInstanceCount:1/0,tn=Math.min(ue.instanceCount,ft);Yt.renderInstances(et,At,tn)}else Yt.render(et,At)};function Ot(U,J,ue){U.transparent===!0&&U.side===Ls&&U.forceSinglePass===!1?(U.side=lr,U.needsUpdate=!0,Ws(U,J,ue),U.side=Ma,U.needsUpdate=!0,Ws(U,J,ue),U.side=Ls):Ws(U,J,ue)}this.compile=function(U,J,ue=null){ue===null&&(ue=U),g=Te.get(ue),g.init(J),E.push(g),ue.traverseVisible(function(se){se.isLight&&se.layers.test(J.layers)&&(g.pushLight(se),se.castShadow&&g.pushShadow(se))}),U!==ue&&U.traverseVisible(function(se){se.isLight&&se.layers.test(J.layers)&&(g.pushLight(se),se.castShadow&&g.pushShadow(se))}),g.setupLights();const re=new Set;return U.traverse(function(se){if(!(se.isMesh||se.isPoints||se.isLine||se.isSprite))return;const Oe=se.material;if(Oe)if(Array.isArray(Oe))for(let Be=0;Be<Oe.length;Be++){const Ke=Oe[Be];Ot(Ke,ue,se),re.add(Ke)}else Ot(Oe,ue,se),re.add(Oe)}),g=E.pop(),re},this.compileAsync=function(U,J,ue=null){const re=this.compile(U,J,ue);return new Promise(se=>{function Oe(){if(re.forEach(function(Be){W.get(Be).currentProgram.isReady()&&re.delete(Be)}),re.size===0){se(U);return}setTimeout(Oe,10)}st.get("KHR_parallel_shader_compile")!==null?Oe():setTimeout(Oe,10)})};let vn=null;function ri(U){vn&&vn(U)}function Yi(){Pr.stop()}function Cr(){Pr.start()}const Pr=new ob;Pr.setAnimationLoop(ri),typeof self<"u"&&Pr.setContext(self),this.setAnimationLoop=function(U){vn=U,le.setAnimationLoop(U),U===null?Pr.stop():Pr.start()},le.addEventListener("sessionstart",Yi),le.addEventListener("sessionend",Cr),this.render=function(U,J){if(J!==void 0&&J.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(L===!0)return;if(U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),J.parent===null&&J.matrixWorldAutoUpdate===!0&&J.updateMatrixWorld(),le.enabled===!0&&le.isPresenting===!0&&(le.cameraAutoUpdate===!0&&le.updateCamera(J),J=le.getCamera()),U.isScene===!0&&U.onBeforeRender(T,U,J,N),g=Te.get(U,E.length),g.init(J),E.push(g),Fe.multiplyMatrices(J.projectionMatrix,J.matrixWorldInverse),j.setFromProjectionMatrix(Fe),Re=this.localClippingEnabled,fe=ze.init(this.clippingPlanes,Re),_=qe.get(U,b.length),_.init(),b.push(_),le.enabled===!0&&le.isPresenting===!0){const Oe=T.xr.getDepthSensingMesh();Oe!==null&&Lr(Oe,J,-1/0,T.sortObjects)}Lr(U,J,0,T.sortObjects),_.finish(),T.sortObjects===!0&&_.sort(ie,oe),ee=le.enabled===!1||le.isPresenting===!1||le.hasDepthSensing()===!1,ee&&Ie.addToRenderList(_,U),this.info.render.frame++,fe===!0&&ze.beginShadows();const ue=g.state.shadowsArray;tt.render(ue,U,J),fe===!0&&ze.endShadows(),this.info.autoReset===!0&&this.info.reset();const re=_.opaque,se=_.transmissive;if(g.setupLights(),J.isArrayCamera){const Oe=J.cameras;if(se.length>0)for(let Be=0,Ke=Oe.length;Be<Ke;Be++){const it=Oe[Be];xs(re,se,U,it)}ee&&Ie.render(U);for(let Be=0,Ke=Oe.length;Be<Ke;Be++){const it=Oe[Be];Ir(_,U,it,it.viewport)}}else se.length>0&&xs(re,se,U,J),ee&&Ie.render(U),Ir(_,U,J);N!==null&&P===0&&(O.updateMultisampleRenderTarget(N),O.updateRenderTargetMipmap(N)),U.isScene===!0&&U.onAfterRender(T,U,J),ne.resetDefaultState(),A=-1,w=null,E.pop(),E.length>0?(g=E[E.length-1],fe===!0&&ze.setGlobalState(T.clippingPlanes,g.state.camera)):g=null,b.pop(),b.length>0?_=b[b.length-1]:_=null};function Lr(U,J,ue,re){if(U.visible===!1)return;if(U.layers.test(J.layers)){if(U.isGroup)ue=U.renderOrder;else if(U.isLOD)U.autoUpdate===!0&&U.update(J);else if(U.isLight)g.pushLight(U),U.castShadow&&g.pushShadow(U);else if(U.isSprite){if(!U.frustumCulled||j.intersectsSprite(U)){re&&$e.setFromMatrixPosition(U.matrixWorld).applyMatrix4(Fe);const Be=Me.update(U),Ke=U.material;Ke.visible&&_.push(U,Be,Ke,ue,$e.z,null)}}else if((U.isMesh||U.isLine||U.isPoints)&&(!U.frustumCulled||j.intersectsObject(U))){const Be=Me.update(U),Ke=U.material;if(re&&(U.boundingSphere!==void 0?(U.boundingSphere===null&&U.computeBoundingSphere(),$e.copy(U.boundingSphere.center)):(Be.boundingSphere===null&&Be.computeBoundingSphere(),$e.copy(Be.boundingSphere.center)),$e.applyMatrix4(U.matrixWorld).applyMatrix4(Fe)),Array.isArray(Ke)){const it=Be.groups;for(let ut=0,gt=it.length;ut<gt;ut++){const Qe=it[ut],et=Ke[Qe.materialIndex];et&&et.visible&&_.push(U,Be,et,ue,$e.z,Qe)}}else Ke.visible&&_.push(U,Be,Ke,ue,$e.z,null)}}const Oe=U.children;for(let Be=0,Ke=Oe.length;Be<Ke;Be++)Lr(Oe[Be],J,ue,re)}function Ir(U,J,ue,re){const se=U.opaque,Oe=U.transmissive,Be=U.transparent;g.setupLightsView(ue),fe===!0&&ze.setGlobalState(T.clippingPlanes,ue),re&&Ve.viewport(D.copy(re)),se.length>0&&hr(se,J,ue),Oe.length>0&&hr(Oe,J,ue),Be.length>0&&hr(Be,J,ue),Ve.buffers.depth.setTest(!0),Ve.buffers.depth.setMask(!0),Ve.buffers.color.setMask(!0),Ve.setPolygonOffset(!1)}function xs(U,J,ue,re){if((ue.isScene===!0?ue.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[re.id]===void 0&&(g.state.transmissionRenderTarget[re.id]=new Ll(1,1,{generateMipmaps:!0,type:st.has("EXT_color_buffer_half_float")||st.has("EXT_color_buffer_float")?Eh:ks,minFilter:ga,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Zt.workingColorSpace}));const Oe=g.state.transmissionRenderTarget[re.id],Be=re.viewport||D;Oe.setSize(Be.z*T.transmissionResolutionScale,Be.w*T.transmissionResolutionScale);const Ke=T.getRenderTarget(),it=T.getActiveCubeFace(),ut=T.getActiveMipmapLevel();T.setRenderTarget(Oe),T.getClearColor(G),Z=T.getClearAlpha(),Z<1&&T.setClearColor(16777215,.5),T.clear(),ee&&Ie.render(ue);const gt=T.toneMapping;T.toneMapping=bo;const Qe=re.viewport;if(re.viewport!==void 0&&(re.viewport=void 0),g.setupLightsView(re),fe===!0&&ze.setGlobalState(T.clippingPlanes,re),hr(U,ue,re),O.updateMultisampleRenderTarget(Oe),O.updateRenderTargetMipmap(Oe),st.has("WEBGL_multisampled_render_to_texture")===!1){let et=!1;for(let Et=0,At=J.length;Et<At;Et++){const Ht=J[Et],Yt=Ht.object,ft=Ht.geometry,tn=Ht.material,Mt=Ht.group;if(tn.side===Ls&&Yt.layers.test(re.layers)){const mn=tn.side;tn.side=lr,tn.needsUpdate=!0,Oo(Yt,ue,re,ft,tn,Mt),tn.side=mn,tn.needsUpdate=!0,et=!0}}et===!0&&(O.updateMultisampleRenderTarget(Oe),O.updateRenderTargetMipmap(Oe))}T.setRenderTarget(Ke,it,ut),T.setClearColor(G,Z),Qe!==void 0&&(re.viewport=Qe),T.toneMapping=gt}function hr(U,J,ue){const re=J.isScene===!0?J.overrideMaterial:null;for(let se=0,Oe=U.length;se<Oe;se++){const Be=U[se],Ke=Be.object,it=Be.geometry,ut=Be.group;let gt=Be.material;gt.allowOverride===!0&&re!==null&&(gt=re),Ke.layers.test(ue.layers)&&Oo(Ke,J,ue,it,gt,ut)}}function Oo(U,J,ue,re,se,Oe){U.onBeforeRender(T,J,ue,re,se,Oe),U.modelViewMatrix.multiplyMatrices(ue.matrixWorldInverse,U.matrixWorld),U.normalMatrix.getNormalMatrix(U.modelViewMatrix),se.onBeforeRender(T,J,ue,re,U,Oe),se.transparent===!0&&se.side===Ls&&se.forceSinglePass===!1?(se.side=lr,se.needsUpdate=!0,T.renderBufferDirect(ue,J,re,se,U,Oe),se.side=Ma,se.needsUpdate=!0,T.renderBufferDirect(ue,J,re,se,U,Oe),se.side=Ls):T.renderBufferDirect(ue,J,re,se,U,Oe),U.onAfterRender(T,J,ue,re,se,Oe)}function Ws(U,J,ue){J.isScene!==!0&&(J=wt);const re=W.get(U),se=g.state.lights,Oe=g.state.shadowsArray,Be=se.state.version,Ke=ye.getParameters(U,se.state,Oe,J,ue),it=ye.getProgramCacheKey(Ke);let ut=re.programs;re.environment=U.isMeshStandardMaterial?J.environment:null,re.fog=J.fog,re.envMap=(U.isMeshStandardMaterial?k:be).get(U.envMap||re.environment),re.envMapRotation=re.environment!==null&&U.envMap===null?J.environmentRotation:U.envMapRotation,ut===void 0&&(U.addEventListener("dispose",at),ut=new Map,re.programs=ut);let gt=ut.get(it);if(gt!==void 0){if(re.currentProgram===gt&&re.lightsStateVersion===Be)return Dr(U,Ke),gt}else Ke.uniforms=ye.getUniforms(U),U.onBeforeCompile(Ke,T),gt=ye.acquireProgram(Ke,it),ut.set(it,gt),re.uniforms=Ke.uniforms;const Qe=re.uniforms;return(!U.isShaderMaterial&&!U.isRawShaderMaterial||U.clipping===!0)&&(Qe.clippingPlanes=ze.uniform),Dr(U,Ke),re.needsLights=xe(U),re.lightsStateVersion=Be,re.needsLights&&(Qe.ambientLightColor.value=se.state.ambient,Qe.lightProbe.value=se.state.probe,Qe.directionalLights.value=se.state.directional,Qe.directionalLightShadows.value=se.state.directionalShadow,Qe.spotLights.value=se.state.spot,Qe.spotLightShadows.value=se.state.spotShadow,Qe.rectAreaLights.value=se.state.rectArea,Qe.ltc_1.value=se.state.rectAreaLTC1,Qe.ltc_2.value=se.state.rectAreaLTC2,Qe.pointLights.value=se.state.point,Qe.pointLightShadows.value=se.state.pointShadow,Qe.hemisphereLights.value=se.state.hemi,Qe.directionalShadowMap.value=se.state.directionalShadowMap,Qe.directionalShadowMatrix.value=se.state.directionalShadowMatrix,Qe.spotShadowMap.value=se.state.spotShadowMap,Qe.spotLightMatrix.value=se.state.spotLightMatrix,Qe.spotLightMap.value=se.state.spotLightMap,Qe.pointShadowMap.value=se.state.pointShadowMap,Qe.pointShadowMatrix.value=se.state.pointShadowMatrix),re.currentProgram=gt,re.uniformsList=null,gt}function Bl(U){if(U.uniformsList===null){const J=U.currentProgram.getUniforms();U.uniformsList=Kp.seqWithValue(J.seq,U.uniforms)}return U.uniformsList}function Dr(U,J){const ue=W.get(U);ue.outputColorSpace=J.outputColorSpace,ue.batching=J.batching,ue.batchingColor=J.batchingColor,ue.instancing=J.instancing,ue.instancingColor=J.instancingColor,ue.instancingMorph=J.instancingMorph,ue.skinning=J.skinning,ue.morphTargets=J.morphTargets,ue.morphNormals=J.morphNormals,ue.morphColors=J.morphColors,ue.morphTargetsCount=J.morphTargetsCount,ue.numClippingPlanes=J.numClippingPlanes,ue.numIntersection=J.numClipIntersection,ue.vertexAlphas=J.vertexAlphas,ue.vertexTangents=J.vertexTangents,ue.toneMapping=J.toneMapping}function zl(U,J,ue,re,se){J.isScene!==!0&&(J=wt),O.resetTextureUnits();const Oe=J.fog,Be=re.isMeshStandardMaterial?J.environment:null,Ke=N===null?T.outputColorSpace:N.isXRRenderTarget===!0?N.texture.colorSpace:ji,it=(re.isMeshStandardMaterial?k:be).get(re.envMap||Be),ut=re.vertexColors===!0&&!!ue.attributes.color&&ue.attributes.color.itemSize===4,gt=!!ue.attributes.tangent&&(!!re.normalMap||re.anisotropy>0),Qe=!!ue.morphAttributes.position,et=!!ue.morphAttributes.normal,Et=!!ue.morphAttributes.color;let At=bo;re.toneMapped&&(N===null||N.isXRRenderTarget===!0)&&(At=T.toneMapping);const Ht=ue.morphAttributes.position||ue.morphAttributes.normal||ue.morphAttributes.color,Yt=Ht!==void 0?Ht.length:0,ft=W.get(re),tn=g.state.lights;if(fe===!0&&(Re===!0||U!==w)){const vi=U===w&&re.id===A;ze.setState(re,U,vi)}let Mt=!1;re.version===ft.__version?(ft.needsLights&&ft.lightsStateVersion!==tn.state.version||ft.outputColorSpace!==Ke||se.isBatchedMesh&&ft.batching===!1||!se.isBatchedMesh&&ft.batching===!0||se.isBatchedMesh&&ft.batchingColor===!0&&se.colorTexture===null||se.isBatchedMesh&&ft.batchingColor===!1&&se.colorTexture!==null||se.isInstancedMesh&&ft.instancing===!1||!se.isInstancedMesh&&ft.instancing===!0||se.isSkinnedMesh&&ft.skinning===!1||!se.isSkinnedMesh&&ft.skinning===!0||se.isInstancedMesh&&ft.instancingColor===!0&&se.instanceColor===null||se.isInstancedMesh&&ft.instancingColor===!1&&se.instanceColor!==null||se.isInstancedMesh&&ft.instancingMorph===!0&&se.morphTexture===null||se.isInstancedMesh&&ft.instancingMorph===!1&&se.morphTexture!==null||ft.envMap!==it||re.fog===!0&&ft.fog!==Oe||ft.numClippingPlanes!==void 0&&(ft.numClippingPlanes!==ze.numPlanes||ft.numIntersection!==ze.numIntersection)||ft.vertexAlphas!==ut||ft.vertexTangents!==gt||ft.morphTargets!==Qe||ft.morphNormals!==et||ft.morphColors!==Et||ft.toneMapping!==At||ft.morphTargetsCount!==Yt)&&(Mt=!0):(Mt=!0,ft.__version=re.version);let mn=ft.currentProgram;Mt===!0&&(mn=Ws(re,J,se));let Nr=!1,hn=!1,dr=!1;const on=mn.getUniforms(),Yn=ft.uniforms;if(Ve.useProgram(mn.program)&&(Nr=!0,hn=!0,dr=!0),re.id!==A&&(A=re.id,hn=!0),Nr||w!==U){Ve.buffers.depth.getReversed()?(Ee.copy(U.projectionMatrix),u4(Ee),f4(Ee),on.setValue(te,"projectionMatrix",Ee)):on.setValue(te,"projectionMatrix",U.projectionMatrix),on.setValue(te,"viewMatrix",U.matrixWorldInverse);const ai=on.map.cameraPosition;ai!==void 0&&ai.setValue(te,He.setFromMatrixPosition(U.matrixWorld)),Pt.logarithmicDepthBuffer&&on.setValue(te,"logDepthBufFC",2/(Math.log(U.far+1)/Math.LN2)),(re.isMeshPhongMaterial||re.isMeshToonMaterial||re.isMeshLambertMaterial||re.isMeshBasicMaterial||re.isMeshStandardMaterial||re.isShaderMaterial)&&on.setValue(te,"isOrthographic",U.isOrthographicCamera===!0),w!==U&&(w=U,hn=!0,dr=!0)}if(se.isSkinnedMesh){on.setOptional(te,se,"bindMatrix"),on.setOptional(te,se,"bindMatrixInverse");const vi=se.skeleton;vi&&(vi.boneTexture===null&&vi.computeBoneTexture(),on.setValue(te,"boneTexture",vi.boneTexture,O))}se.isBatchedMesh&&(on.setOptional(te,se,"batchingTexture"),on.setValue(te,"batchingTexture",se._matricesTexture,O),on.setOptional(te,se,"batchingIdTexture"),on.setValue(te,"batchingIdTexture",se._indirectTexture,O),on.setOptional(te,se,"batchingColorTexture"),se._colorsTexture!==null&&on.setValue(te,"batchingColorTexture",se._colorsTexture,O));const si=ue.morphAttributes;if((si.position!==void 0||si.normal!==void 0||si.color!==void 0)&&ke.update(se,ue,mn),(hn||ft.receiveShadow!==se.receiveShadow)&&(ft.receiveShadow=se.receiveShadow,on.setValue(te,"receiveShadow",se.receiveShadow)),re.isMeshGouraudMaterial&&re.envMap!==null&&(Yn.envMap.value=it,Yn.flipEnvMap.value=it.isCubeTexture&&it.isRenderTargetTexture===!1?-1:1),re.isMeshStandardMaterial&&re.envMap===null&&J.environment!==null&&(Yn.envMapIntensity.value=J.environmentIntensity),hn&&(on.setValue(te,"toneMappingExposure",T.toneMappingExposure),ft.needsLights&&H(Yn,dr),Oe&&re.fog===!0&&ge.refreshFogUniforms(Yn,Oe),ge.refreshMaterialUniforms(Yn,re,B,K,g.state.transmissionRenderTarget[U.id]),Kp.upload(te,Bl(ft),Yn,O)),re.isShaderMaterial&&re.uniformsNeedUpdate===!0&&(Kp.upload(te,Bl(ft),Yn,O),re.uniformsNeedUpdate=!1),re.isSpriteMaterial&&on.setValue(te,"center",se.center),on.setValue(te,"modelViewMatrix",se.modelViewMatrix),on.setValue(te,"normalMatrix",se.normalMatrix),on.setValue(te,"modelMatrix",se.matrixWorld),re.isShaderMaterial||re.isRawShaderMaterial){const vi=re.uniformsGroups;for(let ai=0,Qt=vi.length;ai<Qt;ai++){const ys=vi[ai];$.update(ys,mn),$.bind(ys,mn)}}return mn}function H(U,J){U.ambientLightColor.needsUpdate=J,U.lightProbe.needsUpdate=J,U.directionalLights.needsUpdate=J,U.directionalLightShadows.needsUpdate=J,U.pointLights.needsUpdate=J,U.pointLightShadows.needsUpdate=J,U.spotLights.needsUpdate=J,U.spotLightShadows.needsUpdate=J,U.rectAreaLights.needsUpdate=J,U.hemisphereLights.needsUpdate=J}function xe(U){return U.isMeshLambertMaterial||U.isMeshToonMaterial||U.isMeshPhongMaterial||U.isMeshStandardMaterial||U.isShadowMaterial||U.isShaderMaterial&&U.lights===!0}this.getActiveCubeFace=function(){return C},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return N},this.setRenderTargetTextures=function(U,J,ue){const re=W.get(U);re.__autoAllocateDepthBuffer=U.resolveDepthBuffer===!1,re.__autoAllocateDepthBuffer===!1&&(re.__useRenderToTexture=!1),W.get(U.texture).__webglTexture=J,W.get(U.depthTexture).__webglTexture=re.__autoAllocateDepthBuffer?void 0:ue,re.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(U,J){const ue=W.get(U);ue.__webglFramebuffer=J,ue.__useDefaultFramebuffer=J===void 0};const Ce=te.createFramebuffer();this.setRenderTarget=function(U,J=0,ue=0){N=U,C=J,P=ue;let re=!0,se=null,Oe=!1,Be=!1;if(U){const it=W.get(U);if(it.__useDefaultFramebuffer!==void 0)Ve.bindFramebuffer(te.FRAMEBUFFER,null),re=!1;else if(it.__webglFramebuffer===void 0)O.setupRenderTarget(U);else if(it.__hasExternalTextures)O.rebindTextures(U,W.get(U.texture).__webglTexture,W.get(U.depthTexture).__webglTexture);else if(U.depthBuffer){const Qe=U.depthTexture;if(it.__boundDepthTexture!==Qe){if(Qe!==null&&W.has(Qe)&&(U.width!==Qe.image.width||U.height!==Qe.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");O.setupDepthRenderbuffer(U)}}const ut=U.texture;(ut.isData3DTexture||ut.isDataArrayTexture||ut.isCompressedArrayTexture)&&(Be=!0);const gt=W.get(U).__webglFramebuffer;U.isWebGLCubeRenderTarget?(Array.isArray(gt[J])?se=gt[J][ue]:se=gt[J],Oe=!0):U.samples>0&&O.useMultisampledRTT(U)===!1?se=W.get(U).__webglMultisampledFramebuffer:Array.isArray(gt)?se=gt[ue]:se=gt,D.copy(U.viewport),X.copy(U.scissor),z=U.scissorTest}else D.copy(V).multiplyScalar(B).floor(),X.copy(de).multiplyScalar(B).floor(),z=Ge;if(ue!==0&&(se=Ce),Ve.bindFramebuffer(te.FRAMEBUFFER,se)&&re&&Ve.drawBuffers(U,se),Ve.viewport(D),Ve.scissor(X),Ve.setScissorTest(z),Oe){const it=W.get(U.texture);te.framebufferTexture2D(te.FRAMEBUFFER,te.COLOR_ATTACHMENT0,te.TEXTURE_CUBE_MAP_POSITIVE_X+J,it.__webglTexture,ue)}else if(Be){const it=W.get(U.texture),ut=J;te.framebufferTextureLayer(te.FRAMEBUFFER,te.COLOR_ATTACHMENT0,it.__webglTexture,ue,ut)}else if(U!==null&&ue!==0){const it=W.get(U.texture);te.framebufferTexture2D(te.FRAMEBUFFER,te.COLOR_ATTACHMENT0,te.TEXTURE_2D,it.__webglTexture,ue)}A=-1},this.readRenderTargetPixels=function(U,J,ue,re,se,Oe,Be,Ke=0){if(!(U&&U.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let it=W.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Be!==void 0&&(it=it[Be]),it){Ve.bindFramebuffer(te.FRAMEBUFFER,it);try{const ut=U.textures[Ke],gt=ut.format,Qe=ut.type;if(!Pt.textureFormatReadable(gt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Pt.textureTypeReadable(Qe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}J>=0&&J<=U.width-re&&ue>=0&&ue<=U.height-se&&(U.textures.length>1&&te.readBuffer(te.COLOR_ATTACHMENT0+Ke),te.readPixels(J,ue,re,se,We.convert(gt),We.convert(Qe),Oe))}finally{const ut=N!==null?W.get(N).__webglFramebuffer:null;Ve.bindFramebuffer(te.FRAMEBUFFER,ut)}}},this.readRenderTargetPixelsAsync=async function(U,J,ue,re,se,Oe,Be,Ke=0){if(!(U&&U.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let it=W.get(U).__webglFramebuffer;if(U.isWebGLCubeRenderTarget&&Be!==void 0&&(it=it[Be]),it)if(J>=0&&J<=U.width-re&&ue>=0&&ue<=U.height-se){Ve.bindFramebuffer(te.FRAMEBUFFER,it);const ut=U.textures[Ke],gt=ut.format,Qe=ut.type;if(!Pt.textureFormatReadable(gt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Pt.textureTypeReadable(Qe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const et=te.createBuffer();te.bindBuffer(te.PIXEL_PACK_BUFFER,et),te.bufferData(te.PIXEL_PACK_BUFFER,Oe.byteLength,te.STREAM_READ),U.textures.length>1&&te.readBuffer(te.COLOR_ATTACHMENT0+Ke),te.readPixels(J,ue,re,se,We.convert(gt),We.convert(Qe),0);const Et=N!==null?W.get(N).__webglFramebuffer:null;Ve.bindFramebuffer(te.FRAMEBUFFER,Et);const At=te.fenceSync(te.SYNC_GPU_COMMANDS_COMPLETE,0);return te.flush(),await c4(te,At,4),te.bindBuffer(te.PIXEL_PACK_BUFFER,et),te.getBufferSubData(te.PIXEL_PACK_BUFFER,0,Oe),te.deleteBuffer(et),te.deleteSync(At),Oe}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(U,J=null,ue=0){const re=Math.pow(2,-ue),se=Math.floor(U.image.width*re),Oe=Math.floor(U.image.height*re),Be=J!==null?J.x:0,Ke=J!==null?J.y:0;O.setTexture2D(U,0),te.copyTexSubImage2D(te.TEXTURE_2D,ue,0,0,Be,Ke,se,Oe),Ve.unbindTexture()};const Le=te.createFramebuffer(),Se=te.createFramebuffer();this.copyTextureToTexture=function(U,J,ue=null,re=null,se=0,Oe=null){Oe===null&&(se!==0?(eu("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Oe=se,se=0):Oe=0);let Be,Ke,it,ut,gt,Qe,et,Et,At;const Ht=U.isCompressedTexture?U.mipmaps[Oe]:U.image;if(ue!==null)Be=ue.max.x-ue.min.x,Ke=ue.max.y-ue.min.y,it=ue.isBox3?ue.max.z-ue.min.z:1,ut=ue.min.x,gt=ue.min.y,Qe=ue.isBox3?ue.min.z:0;else{const si=Math.pow(2,-se);Be=Math.floor(Ht.width*si),Ke=Math.floor(Ht.height*si),U.isDataArrayTexture?it=Ht.depth:U.isData3DTexture?it=Math.floor(Ht.depth*si):it=1,ut=0,gt=0,Qe=0}re!==null?(et=re.x,Et=re.y,At=re.z):(et=0,Et=0,At=0);const Yt=We.convert(J.format),ft=We.convert(J.type);let tn;J.isData3DTexture?(O.setTexture3D(J,0),tn=te.TEXTURE_3D):J.isDataArrayTexture||J.isCompressedArrayTexture?(O.setTexture2DArray(J,0),tn=te.TEXTURE_2D_ARRAY):(O.setTexture2D(J,0),tn=te.TEXTURE_2D),te.pixelStorei(te.UNPACK_FLIP_Y_WEBGL,J.flipY),te.pixelStorei(te.UNPACK_PREMULTIPLY_ALPHA_WEBGL,J.premultiplyAlpha),te.pixelStorei(te.UNPACK_ALIGNMENT,J.unpackAlignment);const Mt=te.getParameter(te.UNPACK_ROW_LENGTH),mn=te.getParameter(te.UNPACK_IMAGE_HEIGHT),Nr=te.getParameter(te.UNPACK_SKIP_PIXELS),hn=te.getParameter(te.UNPACK_SKIP_ROWS),dr=te.getParameter(te.UNPACK_SKIP_IMAGES);te.pixelStorei(te.UNPACK_ROW_LENGTH,Ht.width),te.pixelStorei(te.UNPACK_IMAGE_HEIGHT,Ht.height),te.pixelStorei(te.UNPACK_SKIP_PIXELS,ut),te.pixelStorei(te.UNPACK_SKIP_ROWS,gt),te.pixelStorei(te.UNPACK_SKIP_IMAGES,Qe);const on=U.isDataArrayTexture||U.isData3DTexture,Yn=J.isDataArrayTexture||J.isData3DTexture;if(U.isDepthTexture){const si=W.get(U),vi=W.get(J),ai=W.get(si.__renderTarget),Qt=W.get(vi.__renderTarget);Ve.bindFramebuffer(te.READ_FRAMEBUFFER,ai.__webglFramebuffer),Ve.bindFramebuffer(te.DRAW_FRAMEBUFFER,Qt.__webglFramebuffer);for(let ys=0;ys<it;ys++)on&&(te.framebufferTextureLayer(te.READ_FRAMEBUFFER,te.COLOR_ATTACHMENT0,W.get(U).__webglTexture,se,Qe+ys),te.framebufferTextureLayer(te.DRAW_FRAMEBUFFER,te.COLOR_ATTACHMENT0,W.get(J).__webglTexture,Oe,At+ys)),te.blitFramebuffer(ut,gt,Be,Ke,et,Et,Be,Ke,te.DEPTH_BUFFER_BIT,te.NEAREST);Ve.bindFramebuffer(te.READ_FRAMEBUFFER,null),Ve.bindFramebuffer(te.DRAW_FRAMEBUFFER,null)}else if(se!==0||U.isRenderTargetTexture||W.has(U)){const si=W.get(U),vi=W.get(J);Ve.bindFramebuffer(te.READ_FRAMEBUFFER,Le),Ve.bindFramebuffer(te.DRAW_FRAMEBUFFER,Se);for(let ai=0;ai<it;ai++)on?te.framebufferTextureLayer(te.READ_FRAMEBUFFER,te.COLOR_ATTACHMENT0,si.__webglTexture,se,Qe+ai):te.framebufferTexture2D(te.READ_FRAMEBUFFER,te.COLOR_ATTACHMENT0,te.TEXTURE_2D,si.__webglTexture,se),Yn?te.framebufferTextureLayer(te.DRAW_FRAMEBUFFER,te.COLOR_ATTACHMENT0,vi.__webglTexture,Oe,At+ai):te.framebufferTexture2D(te.DRAW_FRAMEBUFFER,te.COLOR_ATTACHMENT0,te.TEXTURE_2D,vi.__webglTexture,Oe),se!==0?te.blitFramebuffer(ut,gt,Be,Ke,et,Et,Be,Ke,te.COLOR_BUFFER_BIT,te.NEAREST):Yn?te.copyTexSubImage3D(tn,Oe,et,Et,At+ai,ut,gt,Be,Ke):te.copyTexSubImage2D(tn,Oe,et,Et,ut,gt,Be,Ke);Ve.bindFramebuffer(te.READ_FRAMEBUFFER,null),Ve.bindFramebuffer(te.DRAW_FRAMEBUFFER,null)}else Yn?U.isDataTexture||U.isData3DTexture?te.texSubImage3D(tn,Oe,et,Et,At,Be,Ke,it,Yt,ft,Ht.data):J.isCompressedArrayTexture?te.compressedTexSubImage3D(tn,Oe,et,Et,At,Be,Ke,it,Yt,Ht.data):te.texSubImage3D(tn,Oe,et,Et,At,Be,Ke,it,Yt,ft,Ht):U.isDataTexture?te.texSubImage2D(te.TEXTURE_2D,Oe,et,Et,Be,Ke,Yt,ft,Ht.data):U.isCompressedTexture?te.compressedTexSubImage2D(te.TEXTURE_2D,Oe,et,Et,Ht.width,Ht.height,Yt,Ht.data):te.texSubImage2D(te.TEXTURE_2D,Oe,et,Et,Be,Ke,Yt,ft,Ht);te.pixelStorei(te.UNPACK_ROW_LENGTH,Mt),te.pixelStorei(te.UNPACK_IMAGE_HEIGHT,mn),te.pixelStorei(te.UNPACK_SKIP_PIXELS,Nr),te.pixelStorei(te.UNPACK_SKIP_ROWS,hn),te.pixelStorei(te.UNPACK_SKIP_IMAGES,dr),Oe===0&&J.generateMipmaps&&te.generateMipmap(tn),Ve.unbindTexture()},this.copyTextureToTexture3D=function(U,J,ue=null,re=null,se=0){return eu('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(U,J,ue,re,se)},this.initRenderTarget=function(U){W.get(U).__webglFramebuffer===void 0&&O.setupRenderTarget(U)},this.initTexture=function(U){U.isCubeTexture?O.setTextureCube(U,0):U.isData3DTexture?O.setTexture3D(U,0):U.isDataArrayTexture||U.isCompressedArrayTexture?O.setTexture2DArray(U,0):O.setTexture2D(U,0),Ve.unbindTexture()},this.resetState=function(){C=0,P=0,N=null,Ve.reset(),ne.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return _a}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Zt._getDrawingBufferColorSpace(e),t.unpackColorSpace=Zt._getUnpackColorSpace()}};var hb=1e-6,fr=typeof Float32Array<"u"?Float32Array:Array;function p6(){var i=new fr(9);return fr!=Float32Array&&(i[1]=0,i[2]=0,i[3]=0,i[5]=0,i[6]=0,i[7]=0),i[0]=1,i[4]=1,i[8]=1,i}function _i(){var i=new fr(16);return fr!=Float32Array&&(i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[11]=0,i[12]=0,i[13]=0,i[14]=0),i[0]=1,i[5]=1,i[10]=1,i[15]=1,i}function m6(i){var e=new fr(16);return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],e}function db(i,e){return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=e[4],i[5]=e[5],i[6]=e[6],i[7]=e[7],i[8]=e[8],i[9]=e[9],i[10]=e[10],i[11]=e[11],i[12]=e[12],i[13]=e[13],i[14]=e[14],i[15]=e[15],i}function g6(i){return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,i}function pb(i,e){var t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8],p=e[9],m=e[10],v=e[11],y=e[12],S=e[13],_=e[14],g=e[15],b=t*c-n*o,E=t*u-r*o,T=t*f-s*o,L=n*u-r*c,C=n*f-s*c,P=r*f-s*u,N=h*S-p*y,A=h*_-m*y,w=h*g-v*y,D=p*_-m*S,X=p*g-v*S,z=m*g-v*_,G=b*z-E*X+T*D+L*w-C*A+P*N;return G?(G=1/G,i[0]=(c*z-u*X+f*D)*G,i[1]=(r*X-n*z-s*D)*G,i[2]=(S*P-_*C+g*L)*G,i[3]=(m*C-p*P-v*L)*G,i[4]=(u*w-o*z-f*A)*G,i[5]=(t*z-r*w+s*A)*G,i[6]=(_*T-y*P-g*E)*G,i[7]=(h*P-m*T+v*E)*G,i[8]=(o*X-c*w+f*N)*G,i[9]=(n*w-t*X-s*N)*G,i[10]=(y*C-S*T+g*b)*G,i[11]=(p*T-h*C-v*b)*G,i[12]=(c*A-o*D-u*N)*G,i[13]=(t*D-n*A+r*N)*G,i[14]=(S*E-y*L-_*b)*G,i[15]=(h*L-p*E+m*b)*G,i):null}function Hm(i,e,t){var n=e[0],r=e[1],s=e[2],o=e[3],c=e[4],u=e[5],f=e[6],h=e[7],p=e[8],m=e[9],v=e[10],y=e[11],S=e[12],_=e[13],g=e[14],b=e[15],E=t[0],T=t[1],L=t[2],C=t[3];return i[0]=E*n+T*c+L*p+C*S,i[1]=E*r+T*u+L*m+C*_,i[2]=E*s+T*f+L*v+C*g,i[3]=E*o+T*h+L*y+C*b,E=t[4],T=t[5],L=t[6],C=t[7],i[4]=E*n+T*c+L*p+C*S,i[5]=E*r+T*u+L*m+C*_,i[6]=E*s+T*f+L*v+C*g,i[7]=E*o+T*h+L*y+C*b,E=t[8],T=t[9],L=t[10],C=t[11],i[8]=E*n+T*c+L*p+C*S,i[9]=E*r+T*u+L*m+C*_,i[10]=E*s+T*f+L*v+C*g,i[11]=E*o+T*h+L*y+C*b,E=t[12],T=t[13],L=t[14],C=t[15],i[12]=E*n+T*c+L*p+C*S,i[13]=E*r+T*u+L*m+C*_,i[14]=E*s+T*f+L*v+C*g,i[15]=E*o+T*h+L*y+C*b,i}function gu(i,e){return i[0]=1,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=1,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[10]=1,i[11]=0,i[12]=e[0],i[13]=e[1],i[14]=e[2],i[15]=1,i}function vE(i,e,t){var n=t[0],r=t[1],s=t[2],o=Math.sqrt(n*n+r*r+s*s),c,u,f;return o<hb?null:(o=1/o,n*=o,r*=o,s*=o,c=Math.sin(e),u=Math.cos(e),f=1-u,i[0]=n*n*f+u,i[1]=r*n*f+s*c,i[2]=s*n*f-r*c,i[3]=0,i[4]=n*r*f-s*c,i[5]=r*r*f+u,i[6]=s*r*f+n*c,i[7]=0,i[8]=n*s*f+r*c,i[9]=r*s*f-n*c,i[10]=s*s*f+u,i[11]=0,i[12]=0,i[13]=0,i[14]=0,i[15]=1,i)}function bh(i,e,t){var n=e[0],r=e[1],s=e[2],o=e[3],c=n+n,u=r+r,f=s+s,h=n*c,p=n*u,m=n*f,v=r*u,y=r*f,S=s*f,_=o*c,g=o*u,b=o*f;return i[0]=1-(v+S),i[1]=p+b,i[2]=m-g,i[3]=0,i[4]=p-b,i[5]=1-(h+S),i[6]=y+_,i[7]=0,i[8]=m+g,i[9]=y-_,i[10]=1-(h+v),i[11]=0,i[12]=t[0],i[13]=t[1],i[14]=t[2],i[15]=1,i}function ph(i,e){return i[0]=e[12],i[1]=e[13],i[2]=e[14],i}function u1(i,e){var t=e[0],n=e[1],r=e[2],s=e[4],o=e[5],c=e[6],u=e[8],f=e[9],h=e[10];return i[0]=Math.sqrt(t*t+n*n+r*r),i[1]=Math.sqrt(s*s+o*o+c*c),i[2]=Math.sqrt(u*u+f*f+h*h),i}function vm(i,e){var t=new fr(3);u1(t,e);var n=1/t[0],r=1/t[1],s=1/t[2],o=e[0]*n,c=e[1]*r,u=e[2]*s,f=e[4]*n,h=e[5]*r,p=e[6]*s,m=e[8]*n,v=e[9]*r,y=e[10]*s,S=o+h+y,_=0;return S>0?(_=Math.sqrt(S+1)*2,i[3]=.25*_,i[0]=(p-v)/_,i[1]=(m-u)/_,i[2]=(c-f)/_):o>h&&o>y?(_=Math.sqrt(1+o-h-y)*2,i[3]=(p-v)/_,i[0]=.25*_,i[1]=(c+f)/_,i[2]=(m+u)/_):h>y?(_=Math.sqrt(1+h-o-y)*2,i[3]=(m-u)/_,i[0]=(c+f)/_,i[1]=.25*_,i[2]=(p+v)/_):(_=Math.sqrt(1+y-o-h)*2,i[3]=(c-f)/_,i[0]=(m+u)/_,i[1]=(p+v)/_,i[2]=.25*_),i}function _6(i,e,t,n){var r=e[0],s=e[1],o=e[2],c=e[3],u=r+r,f=s+s,h=o+o,p=r*u,m=r*f,v=r*h,y=s*f,S=s*h,_=o*h,g=c*u,b=c*f,E=c*h,T=n[0],L=n[1],C=n[2];return i[0]=(1-(y+_))*T,i[1]=(m+E)*T,i[2]=(v-b)*T,i[3]=0,i[4]=(m-E)*L,i[5]=(1-(p+_))*L,i[6]=(S+g)*L,i[7]=0,i[8]=(v+b)*C,i[9]=(S-g)*C,i[10]=(1-(p+y))*C,i[11]=0,i[12]=t[0],i[13]=t[1],i[14]=t[2],i[15]=1,i}function v6(i,e,t,n,r){var s=1/Math.tan(e/2);if(i[0]=s/t,i[1]=0,i[2]=0,i[3]=0,i[4]=0,i[5]=s,i[6]=0,i[7]=0,i[8]=0,i[9]=0,i[11]=-1,i[12]=0,i[13]=0,i[15]=0,r!=null&&r!==1/0){var o=1/(n-r);i[10]=(r+n)*o,i[14]=2*r*n*o}else i[10]=-1,i[14]=-2*n;return i}var xE=v6;function pi(){var i=new fr(3);return fr!=Float32Array&&(i[0]=0,i[1]=0,i[2]=0),i}function x6(i){var e=i[0],t=i[1],n=i[2];return Math.sqrt(e*e+t*t+n*n)}function hs(i,e,t){var n=new fr(3);return n[0]=i,n[1]=e,n[2]=t,n}function __(i,e){return i[0]=e[0],i[1]=e[1],i[2]=e[2],i}function Wf(i,e,t,n){return i[0]=e,i[1]=t,i[2]=n,i}function y6(i,e,t){return i[0]=e[0]+t[0],i[1]=e[1]+t[1],i[2]=e[2]+t[2],i}function mb(i,e){var t=e[0],n=e[1],r=e[2],s=t*t+n*n+r*r;return s>0&&(s=1/Math.sqrt(s)),i[0]=e[0]*s,i[1]=e[1]*s,i[2]=e[2]*s,i}function gb(i,e){return i[0]*e[0]+i[1]*e[1]+i[2]*e[2]}function Zp(i,e,t){var n=e[0],r=e[1],s=e[2],o=t[0],c=t[1],u=t[2];return i[0]=r*u-s*c,i[1]=s*o-n*u,i[2]=n*c-r*o,i}function f1(i,e,t,n){var r=e[0],s=e[1],o=e[2];return i[0]=r+n*(t[0]-r),i[1]=s+n*(t[1]-s),i[2]=o+n*(t[2]-o),i}function S6(i,e,t){var n=t[0],r=t[1],s=t[2],o=t[3],c=e[0],u=e[1],f=e[2],h=r*f-s*u,p=s*c-n*f,m=n*u-r*c;return h=h+h,p=p+p,m=m+m,i[0]=c+o*h+r*m-s*p,i[1]=u+o*p+s*h-n*m,i[2]=f+o*m+n*p-r*h,i}var M6=x6;(function(){var i=pi();return function(e,t,n,r,s,o){var c,u;for(t||(t=3),n||(n=0),r?u=Math.min(r*t+n,e.length):u=e.length,c=n;c<u;c+=t)i[0]=e[c],i[1]=e[c+1],i[2]=e[c+2],s(i,i,o),e[c]=i[0],e[c+1]=i[1],e[c+2]=i[2];return e}})();function h1(){var i=new fr(4);return fr!=Float32Array&&(i[0]=0,i[1]=0,i[2]=0,i[3]=0),i}function E6(i,e,t,n){var r=new fr(4);return r[0]=i,r[1]=e,r[2]=t,r[3]=n,r}function T6(i,e){return i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=e[3],i}function d1(i,e,t,n,r){return i[0]=e,i[1]=t,i[2]=n,i[3]=r,i}function w6(i,e){var t=e[0],n=e[1],r=e[2],s=e[3],o=t*t+n*n+r*r+s*s;return o>0&&(o=1/Math.sqrt(o)),i[0]=t*o,i[1]=n*o,i[2]=r*o,i[3]=s*o,i}function yE(i,e,t){var n=e[0],r=e[1],s=e[2],o=e[3];return i[0]=t[0]*n+t[4]*r+t[8]*s+t[12]*o,i[1]=t[1]*n+t[5]*r+t[9]*s+t[13]*o,i[2]=t[2]*n+t[6]*r+t[10]*s+t[14]*o,i[3]=t[3]*n+t[7]*r+t[11]*s+t[15]*o,i}(function(){var i=h1();return function(e,t,n,r,s,o){var c,u;for(t||(t=4),n||(n=0),r?u=Math.min(r*t+n,e.length):u=e.length,c=n;c<u;c+=t)i[0]=e[c],i[1]=e[c+1],i[2]=e[c+2],i[3]=e[c+3],s(i,i,o),e[c]=i[0],e[c+1]=i[1],e[c+2]=i[2],e[c+3]=i[3];return e}})();function ms(){var i=new fr(4);return fr!=Float32Array&&(i[0]=0,i[1]=0,i[2]=0),i[3]=1,i}function _b(i,e,t){t=t*.5;var n=Math.sin(t);return i[0]=n*e[0],i[1]=n*e[1],i[2]=n*e[2],i[3]=Math.cos(t),i}function b6(i,e,t){var n=e[0],r=e[1],s=e[2],o=e[3],c=t[0],u=t[1],f=t[2],h=t[3];return i[0]=n*h+o*c+r*f-s*u,i[1]=r*h+o*u+s*c-n*f,i[2]=s*h+o*f+n*u-r*c,i[3]=o*h-n*c-r*u-s*f,i}function eh(i,e,t,n){var r=e[0],s=e[1],o=e[2],c=e[3],u=t[0],f=t[1],h=t[2],p=t[3],m,v,y,S,_;return v=r*u+s*f+o*h+c*p,v<0&&(v=-v,u=-u,f=-f,h=-h,p=-p),1-v>hb?(m=Math.acos(v),y=Math.sin(m),S=Math.sin((1-n)*m)/y,_=Math.sin(n*m)/y):(S=1-n,_=n),i[0]=S*r+_*u,i[1]=S*s+_*f,i[2]=S*o+_*h,i[3]=S*c+_*p,i}function A6(i,e){return i[0]=-e[0],i[1]=-e[1],i[2]=-e[2],i[3]=e[3],i}function R6(i,e){var t=e[0]+e[4]+e[8],n;if(t>0)n=Math.sqrt(t+1),i[3]=.5*n,n=.5/n,i[0]=(e[5]-e[7])*n,i[1]=(e[6]-e[2])*n,i[2]=(e[1]-e[3])*n;else{var r=0;e[4]>e[0]&&(r=1),e[8]>e[r*3+r]&&(r=2);var s=(r+1)%3,o=(r+2)%3;n=Math.sqrt(e[r*3+r]-e[s*3+s]-e[o*3+o]+1),i[r]=.5*n,n=.5/n,i[3]=(e[s*3+o]-e[o*3+s])*n,i[s]=(e[s*3+r]+e[r*3+s])*n,i[o]=(e[o*3+r]+e[r*3+o])*n}return i}var xm=E6,v_=T6,SE=d1,Vm=w6;(function(){var i=pi(),e=hs(1,0,0),t=hs(0,1,0);return function(n,r,s){var o=gb(r,s);return o<-.999999?(Zp(i,e,r),M6(i)<1e-6&&Zp(i,t,r),mb(i,i),_b(n,i,Math.PI),n):o>.999999?(n[0]=0,n[1]=0,n[2]=0,n[3]=1,n):(Zp(i,r,s),n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=1+o,Vm(n,n))}})();(function(){var i=ms(),e=ms();return function(t,n,r,s,o,c){return eh(i,n,o,c),eh(e,r,s,c),eh(t,i,e,2*c*(1-c)),t}})();(function(){var i=p6();return function(e,t,n,r){return i[0]=n[0],i[3]=n[1],i[6]=n[2],i[1]=r[0],i[4]=r[1],i[7]=r[2],i[2]=-t[0],i[5]=-t[1],i[8]=-t[2],Vm(e,R6(e,i))}})();const Vt=Symbol("@iwer/action-player"),Gr=Symbol("@iwer/xr-anchor"),ME=Symbol("@iwer/xr-controller"),Ye=Symbol("@iwer/xr-device"),tl=Symbol("@iwer/xr-hand-input"),Ln=Symbol("@iwer/xr-tracked-input"),rn=Symbol("@iwer/xr-frame"),bt=Symbol("@iwer/gamepad"),po=Symbol("@iwer/xr-system"),no=Symbol("@iwer/xr-input-source"),mo=Symbol("@iwer/xr-webgl-layer"),_o=Symbol("@iwer/xr-mesh"),vo=Symbol("@iwer/xr-plane"),EE=Symbol("@iwer/xr-joint-pose"),Af=Symbol("@iwer/xr-pose"),TE=Symbol("@iwer/xr-viewer-pose"),yr=Symbol("@iwer/xr-rigid-transform"),Rf=Symbol("@iwer/xr-render-state"),_e=Symbol("@iwer/xr-session"),Tl=Symbol("@iwer/xr-joint-space"),xo=Symbol("@iwer/xr-reference-space"),$n=Symbol("@iwer/xr-space"),fl=Symbol("@iwer/xr-view"),Cf=Symbol("@iwer/xr-viewport"),Sr=Symbol("@iwer/xr-ray"),pa=Symbol("@iwer/xr-hit-test");class Fn extends EventTarget{constructor(e,t){super(),this[$n]={parentSpace:e,offsetMatrix:t?m6(t):_i(),emulated:!0}}}class C6 extends Fn{constructor(){super(void 0,_i())}}class _u{static updateOffsetPosition(e,t){const n=e[$n].offsetMatrix;gu(n,t)}static updateOffsetQuaternion(e,t){const n=e[$n].offsetMatrix,r=pi();ph(r,n),bh(n,t,r)}static updateOffsetMatrix(e,t){const n=e[$n].offsetMatrix;db(n,t)}static calculateGlobalOffsetMatrix(e,t=_i()){const n=e[$n].parentSpace?_u.calculateGlobalOffsetMatrix(e[$n].parentSpace):_i();return Hm(t,n,e[$n].offsetMatrix),t}}let wl=class vb{constructor(e=0,t=0,n=0){this.vec3=hs(e,t,n),this.tempVec3=pi()}get x(){return this.vec3[0]}set x(e){this.vec3[0]=e}get y(){return this.vec3[1]}set y(e){this.vec3[1]=e}get z(){return this.vec3[2]}set z(e){this.vec3[2]=e}set(e,t,n){return Wf(this.vec3,e,t,n),this}clone(){return new vb(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}normalize(){return __(this.tempVec3,this.vec3),mb(this.vec3,this.tempVec3),this}add(e){return __(this.tempVec3,this.vec3),y6(this.vec3,this.tempVec3,e.vec3),this}applyQuaternion(e){return __(this.tempVec3,this.vec3),S6(this.vec3,this.tempVec3,e.quat),this}},th=class xb{constructor(e=0,t=0,n=0,r=1){this.quat=xm(e,t,n,r),this.tempQuat=ms()}get x(){return this.quat[0]}set x(e){this.quat[0]=e}get y(){return this.quat[1]}set y(e){this.quat[1]=e}get z(){return this.quat[2]}set z(e){this.quat[2]=e}get w(){return this.quat[3]}set w(e){this.quat[3]=e}set(e,t,n,r){return SE(this.quat,e,t,n,r),this}clone(){return new xb(this.x,this.y,this.z,this.w)}copy(e){return SE(this.quat,e.x,e.y,e.z,e.w),this}normalize(){return v_(this.tempQuat,this.quat),Vm(this.quat,this.tempQuat),this}invert(){return v_(this.tempQuat,this.quat),A6(this.quat,this.tempQuat),this}multiply(e){return v_(this.tempQuat,this.quat),b6(this.quat,this.tempQuat,e.quat),this}setFromAxisAngle(e,t){return _b(this.quat,e.vec3,t),this}};var mh;(function(i){i.None="",i.Standard="standard",i.XRStandard="xr-standard"})(mh||(mh={}));class yb{constructor(e,t){this[bt]={type:e,eventTrigger:t,pressed:!1,touched:!1,value:0,lastFrameValue:0,pendingValue:null}}get pressed(){return this[bt].type==="manual"?this[bt].pressed:this[bt].value>0}get touched(){return this[bt].type==="manual"?this[bt].touched:this[bt].touched||this.pressed}get value(){return this[bt].value}}class P6{constructor(){this.pressed=!1,this.touched=!1,this.value=0}}class $x{constructor(e,t="",n=-1){this[bt]={id:t,index:n,connected:!1,timestamp:performance.now(),mapping:e.mapping,buttonsMap:{},buttonsSequence:[],axesMap:{},axesSequence:[],hapticActuators:[]},e.buttons.forEach(r=>{var s;r===null?this[bt].buttonsSequence.push(null):(this[bt].buttonsSequence.push(r.id),this[bt].buttonsMap[r.id]=new yb(r.type,(s=r.eventTrigger)!==null&&s!==void 0?s:null))}),e.axes.forEach(r=>{r===null?this[bt].axesSequence.push(null):(this[bt].axesSequence.push(r.id+r.type),this[bt].axesMap[r.id]||(this[bt].axesMap[r.id]={x:0,y:0}))})}get id(){return this[bt].id}get index(){return this[bt].index}get connected(){return this[bt].connected}get timestamp(){return this[bt].timestamp}get mapping(){return this[bt].mapping}get axes(){const e=[];return this[bt].axesSequence.forEach(t=>{if(t===null)e.push(null);else{const n=t.substring(0,t.length-6),r=t.substring(t.length-6);e.push(r==="y-axis"?this[bt].axesMap[n].y:this[bt].axesMap[n].x)}}),e}get buttons(){return this[bt].buttonsSequence.map(e=>e===null?new P6:this[bt].buttonsMap[e])}get hapticActuators(){return this[bt].hapticActuators}get vibrationActuator(){return null}}var wr;(function(i){i.None="none",i.Left="left",i.Right="right"})(wr||(wr={}));var ym;(function(i){i.Gaze="gaze",i.TrackedPointer="tracked-pointer",i.Screen="screen",i.TransientPointer="transient-pointer"})(ym||(ym={}));class L6 extends Array{}class Gm{constructor(e,t,n,r,s,o,c){this[no]={handedness:e,targetRayMode:t,targetRaySpace:r,gripSpace:o,profiles:n,gamepad:s,hand:c}}get handedness(){return this[no].handedness}get targetRayMode(){return this[no].targetRayMode}get targetRaySpace(){return this[no].targetRaySpace}get gripSpace(){return this[no].gripSpace}get profiles(){return this[no].profiles}get gamepad(){return this[no].gamepad}get hand(){return this[no].hand}}class Qp extends Event{constructor(e,t){if(super(e,t),!t.frame)throw new Error("XRInputSourceEventInit.frame is required");if(!t.inputSource)throw new Error("XRInputSourceEventInit.inputSource is required");this.frame=t.frame,this.inputSource=t.inputSource}}const wE={[wr.Left]:{position:new wl(-.25,1.5,-.4),quaternion:new th},[wr.Right]:{position:new wl(.25,1.5,-.4),quaternion:new th},[wr.None]:{position:new wl(.25,1.5,-.4),quaternion:new th}};class Sb{constructor(e){this[Ln]={inputSource:e,position:wE[e.handedness].position.clone(),quaternion:wE[e.handedness].quaternion.clone(),connected:!0,lastFrameConnected:!1,inputSourceChanged:!0}}get position(){return this[Ln].position}get quaternion(){return this[Ln].quaternion}get inputSource(){return this[Ln].inputSource}get connected(){return this[Ln].connected}set connected(e){this[Ln].connected=e,this[Ln].inputSource.gamepad[bt].connected=e}onFrameStart(e){const t=this[Ln].inputSource.targetRaySpace;bh(t[$n].offsetMatrix,this[Ln].quaternion.quat,this[Ln].position.vec3);const n=e.session;this[Ln].inputSource.gamepad.buttons.forEach(r=>{r instanceof yb&&(r[bt].lastFrameValue=r[bt].value,r[bt].pendingValue!=null&&(r[bt].value=r[bt].pendingValue,r[bt].pendingValue=null),r[bt].eventTrigger!=null&&(r[bt].lastFrameValue===0&&r[bt].value>0?(n.dispatchEvent(new Qp(r[bt].eventTrigger,{frame:e,inputSource:this[Ln].inputSource})),n.dispatchEvent(new Qp(r[bt].eventTrigger+"start",{frame:e,inputSource:this[Ln].inputSource}))):r[bt].lastFrameValue>0&&r[bt].value===0&&n.dispatchEvent(new Qp(r[bt].eventTrigger+"end",{frame:e,inputSource:this[Ln].inputSource}))))}),this[Ln].inputSourceChanged=this.connected!==this[Ln].lastFrameConnected,this[Ln].lastFrameConnected=this.connected}}class I6 extends Sb{constructor(e,t,n){if(!e.layout[t])throw new DOMException("Handedness not supported","InvalidStateError");const r=new Fn(n),s=e.layout[t].gripOffsetMatrix?new Fn(r,e.layout[t].gripOffsetMatrix):void 0,o=[e.profileId,...e.fallbackProfileIds],c=new Gm(t,ym.TrackedPointer,o,r,new $x(e.layout[t].gamepad),s);super(c),this[ME]={gamepadConfig:e.layout[t].gamepad}}get gamepadConfig(){return this[ME].gamepadConfig}updateButtonValue(e,t){if(t>1||t<0){console.warn(`Out-of-range value ${t} provided for button ${e}.`);return}const n=this[Ln].inputSource.gamepad[bt].buttonsMap[e];if(n){if(n[bt].type==="binary"&&t!=1&&t!=0){console.warn(`Non-binary value ${t} provided for binary button ${e}.`);return}n[bt].pendingValue=t}else console.warn(`Current controller does not have button ${e}.`)}updateButtonTouch(e,t){const n=this[Ln].inputSource.gamepad[bt].buttonsMap[e];n?n[bt].touched=t:console.warn(`Current controller does not have button ${e}.`)}updateAxis(e,t,n){if(n>1||n<-1){console.warn(`Out-of-range value ${n} provided for ${e} axes.`);return}const r=this[Ln].inputSource.gamepad[bt].axesMap[e];r?t==="x-axis"?r.x=n:t==="y-axis"&&(r.y=n):console.warn(`Current controller does not have ${e} axes.`)}updateAxes(e,t,n){if(t>1||t<-1||n>1||n<-1){console.warn(`Out-of-range value x:${t}, y:${n} provided for ${e} axes.`);return}const r=this[Ln].inputSource.gamepad[bt].axesMap[e];r?(r.x=t,r.y=n):console.warn(`Current controller does not have ${e} axes.`)}}class D6{constructor(e,t,n,r,s){this[_o]={nativeMesh:e,frame:void 0,meshSpace:t,vertices:n,indices:r,lastChangedTime:performance.now(),semanticLabel:s}}get meshSpace(){return this[_o].meshSpace}get vertices(){return this[_o].vertices}get indices(){return this[_o].indices}get lastChangedTime(){return this[_o].lastChangedTime}get semanticLabel(){return this[_o].semanticLabel}}class N6 extends Set{}var Ii;(function(i){i.Desk="desk",i.Couch="couch",i.Floor="floor",i.Ceiling="ceiling",i.Wall="wall",i.Door="door",i.Window="window",i.Table="table",i.Shelf="shelf",i.Bed="bed",i.Screen="screen",i.Lamp="lamp",i.Plant="plant",i.WallArt="wall art",i.GlobalMesh="global mesh",i.Other="other"})(Ii||(Ii={}));var Di;(function(i){i.Horizontal="horizontal",i.Vertical="vertical"})(Di||(Di={}));const U6={[Ii.Desk]:Di.Horizontal,[Ii.Couch]:Di.Horizontal,[Ii.Floor]:Di.Horizontal,[Ii.Ceiling]:Di.Horizontal,[Ii.Wall]:Di.Vertical,[Ii.Door]:Di.Vertical,[Ii.Window]:Di.Vertical,[Ii.Table]:Di.Horizontal,[Ii.Shelf]:Di.Horizontal,[Ii.Bed]:Di.Horizontal,[Ii.Screen]:Di.Horizontal,[Ii.Lamp]:Di.Horizontal,[Ii.Plant]:Di.Horizontal,[Ii.WallArt]:Di.Vertical};class O6{constructor(e,t,n,r){this[vo]={nativePlane:e,frame:void 0,planeSpace:t,polygon:n,lastChangedTime:performance.now(),semanticLabel:r,orientation:r?U6[r]:void 0}}get planeSpace(){return this[vo].planeSpace}get polygon(){return this[vo].polygon}get orientation(){return this[vo].orientation}get lastChangedTime(){return this[vo].lastChangedTime}get semanticLabel(){return this[vo].semanticLabel}}class F6 extends Set{}class Mb{constructor(e,t){this[Gr]={anchorSpace:e,session:t,deleted:!1},t[_e].trackedAnchors.add(this)}get anchorSpace(){if(this[Gr].deleted)throw new DOMException("XRAnchor has already been deleted.","InvalidStateError");return this[Gr].anchorSpace}requestPersistentHandle(){return new Promise((e,t)=>{if(this[Gr].deleted)t(new DOMException("XRAnchor has already been deleted.","InvalidStateError"));else{const n=this[Gr].session[_e].persistentAnchors;for(const[s,o]of n.entries())if(o===this){e(s);return}const r=crypto.randomUUID();Eb.createPersistentAnchor(this[Gr].session,this,r),e(r)}})}delete(){this[Gr].deleted||(this[Gr].anchorSpace=null,this[Gr].deleted=!0,this[Gr].session[_e].trackedAnchors.delete(this))}}class bE extends Set{}const x_="@immersive-web-emulation-runtime/persistent-anchors";class Eb{static recoverPersistentAnchorsFromStorage(e){const t=JSON.parse(localStorage.getItem(x_)||"{}");Object.entries(t).forEach(([n,r])=>{const s=e[_e].device[Ye].globalSpace,o=new Fn(s,r),c=new Mb(o,e);e[_e].persistentAnchors.set(n,c)})}static createPersistentAnchor(e,t,n){e[_e].trackedAnchors.add(t),e[_e].persistentAnchors.set(n,t);const r=JSON.parse(localStorage.getItem(x_)||"{}");r[n]=Array.from(t[Gr].anchorSpace[$n].offsetMatrix),localStorage.setItem(x_,JSON.stringify(r))}}class Sm{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r,Object.freeze(this)}static fromPoint(e){return new Sm(e.x,e.y,e.z,e.w)}matrixTransform(e){return new Sm}toJSON(){return{x:this.x,y:this.y,z:this.z,w:this.w}}}const lp=typeof globalThis.DOMPointReadOnly<"u"?globalThis.DOMPointReadOnly:Sm;let Wm=class Tb{constructor(e,t){const n=hs(0,0,0),r=ms();this[yr]={matrix:_i(),position:e?hs(e.x,e.y,e.z):n,orientation:t?Vm(ms(),xm(t.x,t.y,t.z,t.w)):r,inverse:null},this.updateMatrix()}updateMatrix(){bh(this[yr].matrix,this[yr].orientation,this[yr].position)}get matrix(){return this[yr].matrix}get position(){const e=this[yr].position;return new lp(e[0],e[1],e[2],1)}get orientation(){const e=this[yr].orientation;return new lp(e[0],e[1],e[2],e[3])}get inverse(){if(!this[yr].inverse){const e=_i();if(!pb(e,this[yr].matrix))throw new Error("Matrix is not invertible.");let t=pi();ph(t,e);let n=ms();vm(n,e),this[yr].inverse=new Tb(new lp(t[0],t[1],t[2],1),new lp(n[0],n[1],n[2],n[3])),this[yr].inverse[yr].inverse=this}return this[yr].inverse}};class AE{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}}class k6{constructor(e,t){const n={x:0,y:0,z:0,w:1},r={x:0,y:0,z:-1,w:0};if(e instanceof Wm){const c=e.matrix,u=d1(h1(),n.x,n.y,n.z,n.w),f=d1(h1(),r.x,r.y,r.z,r.w);yE(u,u,c),yE(f,f,c),n.x=u[0],n.y=u[1],n.z=u[2],n.w=u[3],r.x=f[0],r.y=f[1],r.z=f[2],r.w=f[3]}else if(e&&(n.x=e.x,n.y=e.y,n.z=e.z,n.w=e.w),t){if(t.x===0&&t.y===0&&t.z===0||t.w!==1)throw new DOMException("Invalid direction value to construct XRRay","TypeError");r.x=t.x,r.y=t.y,r.z=t.z,r.w=t.w}const s=Math.sqrt(r.x*r.x+r.y*r.y+r.z*r.z)||1;r.x=r.x/s,r.y=r.y/s,r.z=r.z/s,this[Sr]={origin:new AE(n.x,n.y,n.z,n.w),direction:new AE(r.x,r.y,r.z,r.w),matrix:null}}get origin(){return this[Sr].origin}get direction(){return this[Sr].direction}get matrix(){if(this[Sr].matrix)return this[Sr].matrix;const e=Wf(pi(),0,0,-1),t=Wf(pi(),this[Sr].origin.x,this[Sr].origin.y,this[Sr].origin.z),n=Wf(pi(),this[Sr].direction.x,this[Sr].direction.y,this[Sr].direction.z),r=Zp(pi(),n,e),s=gb(n,e),o=_i();s>-1&&s<1?vE(o,Math.acos(s),r):s===-1?vE(o,Math.acos(s),Wf(pi(),1,0,0)):g6(o);const c=gu(_i(),t),u=Hm(_i(),c,o);return this[Sr].matrix=new Float32Array(u),this[Sr].matrix}}class B6{constructor(e,t){var n;this[pa]={session:e,space:t.space,offsetRay:(n=t.offsetRay)!==null&&n!==void 0?n:new k6}}cancel(){this[pa].session[_e].hitTestSources.delete(this)}}class z6{constructor(e,t){this[pa]={frame:e,offsetSpace:t}}getPose(e){return this[pa].frame.getPose(this[pa].offsetSpace,e)}createAnchor(){return this[pa].frame.createAnchor(new Wm,this[pa].offsetSpace)}}class wb extends Event{constructor(e,t){if(super(e,t),!t.session)throw new Error("XRInputSourcesChangeEventInit.session is required");if(!t.added)throw new Error("XRInputSourcesChangeEventInit.added is required");if(!t.removed)throw new Error("XRInputSourcesChangeEventInit.removed is required");this.session=t.session,this.added=t.added,this.removed=t.removed}}var bb,hi;(function(i){i.Viewer="viewer",i.Local="local",i.LocalFloor="local-floor",i.BoundedFloor="bounded-floor",i.Unbounded="unbounded"})(hi||(hi={}));class Il extends Fn{constructor(e,t,n){super(t,n),this[bb]={type:null,onreset:()=>{}},this[xo].type=e}get onreset(){var e;return(e=this[xo].onreset)!==null&&e!==void 0?e:(()=>{})}set onreset(e){this[xo].onreset&&this.removeEventListener("reset",this[xo].onreset),this[xo].onreset=e,e&&this.addEventListener("reset",e)}getOffsetReferenceSpace(e){return new Il(this[xo].type,this,e)}}bb=xo;class p1{constructor(e={},t){this[Rf]={depthNear:e.depthNear||(t==null?void 0:t.depthNear)||.1,depthFar:e.depthFar||(t==null?void 0:t.depthFar)||1e3,inlineVerticalFieldOfView:e.inlineVerticalFieldOfView||(t==null?void 0:t.inlineVerticalFieldOfView)||null,baseLayer:e.baseLayer||(t==null?void 0:t.baseLayer)||null}}get depthNear(){return this[Rf].depthNear}get depthFar(){return this[Rf].depthFar}get inlineVerticalFieldOfView(){return this[Rf].inlineVerticalFieldOfView}get baseLayer(){return this[Rf].baseLayer}}class Mm extends Event{constructor(e,t){if(super(e,t),!t.session)throw new Error("XRSessionEventInit.session is required");this.session=t.session}}var En;(function(i){i.None="none",i.Left="left",i.Right="right"})(En||(En={}));class Ab{constructor(e,t,n,r){this[fl]={eye:e,projectionMatrix:t,transform:n,recommendedViewportScale:null,requestedViewportScale:1,session:r}}get eye(){return this[fl].eye}get projectionMatrix(){return this[fl].projectionMatrix}get transform(){return this[fl].transform}get recommendedViewportScale(){return this[fl].recommendedViewportScale}requestViewportScale(e){if(e===null||e<=0||e>1){console.warn("Invalid scale value. Scale must be > 0 and <= 1.");return}this[fl].requestedViewportScale=e}}class Xm{constructor(e,t=!1,n=void 0,r=void 0){this[Af]={transform:e,emulatedPosition:t,linearVelocity:n,angularVelocity:r}}get transform(){return this[Af].transform}get emulatedPosition(){return this[Af].emulatedPosition}get linearVelocity(){return this[Af].linearVelocity}get angularVelocity(){return this[Af].angularVelocity}}class Rb extends Xm{constructor(e,t,n=!1,r=void 0,s=void 0){super(e,n,r,s),this[EE]={radius:t}}get radius(){return this[EE].radius}}class Cb extends Xm{constructor(e,t,n=!1,r=void 0,s=void 0){super(e,n,r,s),this[TE]={views:Object.freeze(t)}}get views(){return this[TE].views}}const RE=_i(),CE=_i(),PE=_i(),LE=(i,e,t)=>{_u.calculateGlobalOffsetMatrix(e,RE),_u.calculateGlobalOffsetMatrix(t,CE),pb(PE,CE),Hm(i,PE,RE)};class Pb{constructor(e,t,n,r,s){this[rn]={session:e,id:t,active:n,animationFrame:r,predictedDisplayTime:s,tempMat4:_i(),detectedPlanes:new F6,detectedMeshes:new N6,trackedAnchors:e[_e].frameTrackedAnchors,hitTestResultsMap:new Map}}get session(){return this[rn].session}get predictedDisplayTime(){return this[rn].predictedDisplayTime}getPose(e,t){if(!this[rn].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");LE(this[rn].tempMat4,e,t);const n=pi();ph(n,this[rn].tempMat4);const r=ms();return vm(r,this[rn].tempMat4),new Xm(new Wm({x:n[0],y:n[1],z:n[2],w:1},{x:r[0],y:r[1],z:r[2],w:r[3]}),e[$n].emulated)}getViewerPose(e){if(!this[rn].animationFrame)throw new DOMException("getViewerPose can only be called on XRFrame objects passed to XRSession.requestAnimationFrame callbacks.","InvalidStateError");const t=this[rn].session,n=t[_e].device,r=this.getPose(n.viewerSpace,e),s=t[_e].mode==="inline"?[En.None]:[En.Left,En.Right],o=[];return s.forEach(c=>{const u=n.viewSpaces[c],f=this.getPose(u,e),h=t[_e].getProjectionMatrix(c),p=new Ab(c,new Float32Array(h),f.transform,t);o.push(p)}),new Cb(r.transform,o,!1)}getJointPose(e,t){const n=this.getPose(e,t),r=e[Tl].radius;return new Rb(n.transform,r,!1)}fillJointRadii(e,t){if(e=Array.from(e),!this[rn].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");if(e.length>t.length)throw new DOMException("The length of jointSpaces is larger than the number of elements in radii","TypeError");let n=!0;for(let r=0;r<e.length;r++)e[r][Tl].radius?t[r]=e[r][Tl].radius:(t[r]=NaN,n=!1);return n}fillPoses(e,t,n){if(e=Array.from(e),!this[rn].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");if(e.length*16>n.length)throw new DOMException("The length of spaces multiplied by 16 is larger than the number of elements in transforms","TypeError");return e.forEach((r,s)=>{LE(this[rn].tempMat4,r,t);for(let o=0;o<16;o++)n[s*16+o]=this[rn].tempMat4[o]}),!0}get detectedPlanes(){if(!this[rn].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");return this[rn].detectedPlanes}get detectedMeshes(){if(!this[rn].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");return this[rn].detectedMeshes}get trackedAnchors(){if(!this[rn].active)throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError");return this[rn].trackedAnchors}createAnchor(e,t){return new Promise((n,r)=>{if(!this[rn].active)r(new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError"));else{const s=this[rn].session[_e].device[Ye].globalSpace,o=new Fn(t,e.matrix),c=_u.calculateGlobalOffsetMatrix(o),u=new Fn(s,c),f=new Mb(u,this[rn].session);this[rn].session[_e].trackedAnchors.add(f),this[rn].session[_e].newAnchors.set(f,{resolve:n,reject:r})}})}getHitTestResults(e){if(this[rn].active){if(this[rn].hitTestResultsMap.has(e))return[...this[rn].hitTestResultsMap.get(e)];throw new DOMException("Requested hit test results are not available for current frame.","InvalidStateError")}else throw new DOMException("XRFrame access outside the callback that produced it is invalid.","InvalidStateError")}}var _s;(function(i){i.Opaque="opaque",i.AlphaBlend="alpha-blend",i.Additive="additive"})(_s||(_s={}));var vu;(function(i){i.ScreenSpace="screen-space",i.WorldSpace="world-space"})(vu||(vu={}));class jx extends EventTarget{constructor(e,t,n){super(),this[_e]={device:e,mode:t,renderState:new p1,pendingRenderState:null,enabledFeatures:n,isSystemKeyboardSupported:!1,ended:!1,projectionMatrices:{[En.Left]:_i(),[En.Right]:_i(),[En.None]:_i()},getProjectionMatrix:r=>this[_e].projectionMatrices[r],referenceSpaceIsSupported:r=>{if(!this[_e].enabledFeatures.includes(r))return!1;switch(r){case hi.Viewer:return!0;case hi.Local:case hi.LocalFloor:case hi.BoundedFloor:case hi.Unbounded:return this[_e].mode!="inline"}},frameHandle:0,frameCallbacks:[],currentFrameCallbacks:null,onDeviceFrame:()=>{if(this[_e].ended)return;this[_e].deviceFrameHandle=globalThis.requestAnimationFrame(this[_e].onDeviceFrame),this[_e].pendingRenderState!=null&&(this[_e].renderState=this[_e].pendingRenderState,this[_e].pendingRenderState=null,this[_e].device[Ye].onBaseLayerSet(this[_e].renderState.baseLayer));const r=this[_e].renderState.baseLayer;if(r===null)return;const s=r.context,o=s.canvas;if(this[_e].mode!="inline"){const y=s.getParameter(s.COLOR_CLEAR_VALUE),S=s.getParameter(s.DEPTH_CLEAR_VALUE),_=s.getParameter(s.STENCIL_CLEAR_VALUE);s.clearColor(0,0,0,0),s.clearDepth(1),s.clearStencil(0),s.clear(s.DEPTH_BUFFER_BIT|s.COLOR_BUFFER_BIT|s.STENCIL_BUFFER_BIT),s.clearColor(y[0],y[1],y[2],y[3]),s.clearDepth(S),s.clearStencil(_)}const{depthNear:c,depthFar:u}=this[_e].renderState,{width:f,height:h}=o;if(this[_e].mode!=="inline"){const y=f*(this[_e].device.stereoEnabled?.5:1)/h;xE(this[_e].projectionMatrices[En.Left],this[_e].device.fovy,y,c,u),db(this[_e].projectionMatrices[En.Right],this[_e].projectionMatrices[En.Left])}else{const y=f/h;xE(this[_e].projectionMatrices[En.None],this[_e].renderState.inlineVerticalFieldOfView,y,c,u)}const p=new Pb(this,this[_e].frameHandle,!0,!0,performance.now());if(this[_e].mode==="immersive-ar"){const y=this[_e].device[Ye].syntheticEnvironmentModule;y&&y.render(this[_e].device)}this[_e].enabledFeatures.includes("anchors")&&this[_e].updateTrackedAnchors(),this[_e].enabledFeatures.includes("plane-detection")&&this[_e].updateTrackedPlanes(p),this[_e].enabledFeatures.includes("mesh-detection")&&this[_e].updateTrackedMeshes(p),this[_e].enabledFeatures.includes("hit-test")&&this[_e].computeHitTestResults(p),this[_e].device[Ye].onFrameStart(p),this[_e].updateActiveInputSources();const m=this[_e].currentFrameCallbacks=this[_e].frameCallbacks;this[_e].frameCallbacks=[];const v=performance.now();for(let y=0;y<m.length;y++)try{m[y].cancelled||m[y].callback(v,p)}catch(S){console.error(S)}this[_e].currentFrameCallbacks=null,p[rn].active=!1},nominalFrameRate:e.internalNominalFrameRate,referenceSpaces:[],inputSourceArray:[],activeInputSources:[],updateActiveInputSources:()=>{const r=this[_e].enabledFeatures.includes("hand-tracking"),s=this[_e].activeInputSources,o=this[_e].device.inputSources.filter(f=>!f.hand||r),c=o.filter(f=>!s.includes(f)),u=s.filter(f=>!o.includes(f));this[_e].activeInputSources=o,(c.length>0||u.length>0)&&this.dispatchEvent(new wb("inputsourceschange",{session:this,added:c,removed:u}))},trackedAnchors:new bE,persistentAnchors:new Map,newAnchors:new Map,frameTrackedAnchors:new bE,updateTrackedAnchors:()=>{this[_e].enabledFeatures.includes("anchors")&&(this[_e].frameTrackedAnchors.clear(),Array.from(this[_e].trackedAnchors).forEach(r=>{if(r[Gr].deleted){if(this[_e].trackedAnchors.delete(r),this[_e].newAnchors.has(r)){const{reject:s}=this[_e].newAnchors.get(r);s(new DOMException("Anchor is no longer tracked","InvalidStateError"))}}else if(this[_e].frameTrackedAnchors.add(r),this[_e].newAnchors.has(r)){const{resolve:s}=this[_e].newAnchors.get(r);s(r),this[_e].newAnchors.delete(r)}}))},trackedPlanes:new Map,updateTrackedPlanes:r=>{const s=this[_e].device[Ye].syntheticEnvironmentModule;if(!s)return;Array.from(this[_e].trackedPlanes.keys()).forEach(c=>{s.trackedPlanes.has(c)||this[_e].trackedPlanes.delete(c)}),s.trackedPlanes.forEach(c=>{let u=this[_e].trackedPlanes.get(c);if(!u){const f=new Fn(this[_e].device[Ye].globalSpace,c.transform.matrix);u=new O6(c,f,c.polygon),this[_e].trackedPlanes.set(c,u)}u[vo].lastChangedTime=r.predictedDisplayTime,u[vo].frame=r,r[rn].detectedPlanes.add(u)})},trackedMeshes:new Map,updateTrackedMeshes:r=>{const s=this[_e].device[Ye].syntheticEnvironmentModule;if(!s)return;Array.from(this[_e].trackedMeshes.keys()).forEach(c=>{s.trackedMeshes.has(c)||this[_e].trackedMeshes.delete(c)}),s.trackedMeshes.forEach(c=>{let u=this[_e].trackedMeshes.get(c);if(!u){const f=new Fn(this[_e].device[Ye].globalSpace,c.transform.matrix);u=new D6(c,f,c.vertices,c.indices),this[_e].trackedMeshes.set(c,u)}u[_o].lastChangedTime=r.predictedDisplayTime,u[_o].frame=r,r[rn].detectedMeshes.add(u)})},hitTestSources:new Set,computeHitTestResults:r=>{const s=this[_e].device[Ye].syntheticEnvironmentModule;if(!s)return;const o=this[_e].device[Ye].globalSpace;this[_e].hitTestSources.forEach(c=>{const u=c[pa].space,f=_u.calculateGlobalOffsetMatrix(u),h=c[pa].offsetRay.matrix,p=_i();Hm(p,f,h);const m=[];s.computeHitTestResults(p).forEach(v=>{const y=new Fn(o,v),S=new z6(r,y);m.push(S)}),r[rn].hitTestResultsMap.set(c,m)})},onend:null,oninputsourceschange:null,onselect:null,onselectstart:null,onselectend:null,onsqueeze:null,onsqueezestart:null,onsqueezeend:null,onvisibilitychange:null,onframeratechange:null},Eb.recoverPersistentAnchorsFromStorage(this),this[_e].onDeviceFrame()}get visibilityState(){return this[_e].device.visibilityState}get frameRate(){return this[_e].nominalFrameRate}get supportedFrameRates(){return new Float32Array(this[_e].device.supportedFrameRates)}get renderState(){return this[_e].renderState}get inputSources(){return this[_e].inputSourceArray.length=0,!this[_e].ended&&this[_e].mode!=="inline"&&this[_e].inputSourceArray.push(...this[_e].activeInputSources),this[_e].inputSourceArray}get enabledFeatures(){return this[_e].enabledFeatures}get isSystemKeyboardSupported(){return this[_e].isSystemKeyboardSupported}get environmentBlendMode(){var e;return(e=this[_e].device[Ye].environmentBlendModes[this[_e].mode])!==null&&e!==void 0?e:_s.Opaque}get interactionMode(){return this[_e].device[Ye].interactionMode}updateRenderState(e={}){var t,n,r,s;if(this[_e].ended)throw new DOMException("XRSession has already ended.","InvalidStateError");if(e.baseLayer&&e.baseLayer[mo].session!==this)throw new DOMException("Base layer was created by a different XRSession","InvalidStateError");if(e.inlineVerticalFieldOfView!=null&&this[_e].mode!=="inline")throw new DOMException("InlineVerticalFieldOfView must not be set for an immersive session","InvalidStateError");const o={baseLayer:e.baseLayer||((t=this[_e].pendingRenderState)===null||t===void 0?void 0:t.baseLayer)||void 0,depthFar:e.depthFar||((n=this[_e].pendingRenderState)===null||n===void 0?void 0:n.depthFar)||void 0,depthNear:e.depthNear||((r=this[_e].pendingRenderState)===null||r===void 0?void 0:r.depthNear)||void 0,inlineVerticalFieldOfView:e.inlineVerticalFieldOfView||((s=this[_e].pendingRenderState)===null||s===void 0?void 0:s.inlineVerticalFieldOfView)||void 0};this[_e].pendingRenderState=new p1(o,this[_e].renderState)}async updateTargetFrameRate(e){return new Promise((t,n)=>{this[_e].ended?n(new DOMException("XRSession has already ended.","InvalidStateError")):this[_e].device.supportedFrameRates.includes(e)?(this[_e].nominalFrameRate===e?console.log("Requested frame rate is the same as the current nominal frame rate, no update made"):(this[_e].nominalFrameRate=e,this.dispatchEvent(new Mm("frameratechange",{session:this})),console.log(`Nominal frame rate updated to ${e}`)),t()):n(new DOMException("Requested frame rate not supported.","InvalidStateError"))})}async requestReferenceSpace(e){return new Promise((t,n)=>{if(this[_e].ended||!this[_e].referenceSpaceIsSupported(e)){n(new DOMException("The requested reference space type is not supported.","NotSupportedError"));return}let r;switch(e){case hi.Viewer:r=this[_e].device.viewerSpace;break;case hi.Local:r=new Il(e,this[_e].device[Ye].globalSpace,this[_e].device.viewerSpace[$n].offsetMatrix);break;case hi.LocalFloor:case hi.BoundedFloor:case hi.Unbounded:r=new Il(e,this[_e].device[Ye].globalSpace);break}this[_e].referenceSpaces.push(r),t(r)})}requestAnimationFrame(e){if(this[_e].ended)return 0;const t=++this[_e].frameHandle;return this[_e].frameCallbacks.push({handle:t,callback:e,cancelled:!1}),t}cancelAnimationFrame(e){let t=this[_e].frameCallbacks,n=t.findIndex(r=>r&&r.handle===e);n>-1&&(t[n].cancelled=!0,t.splice(n,1)),t=this[_e].currentFrameCallbacks,t&&(n=t.findIndex(r=>r&&r.handle===e),n>-1&&(t[n].cancelled=!0))}async end(){return new Promise((e,t)=>{this[_e].ended||this[_e].deviceFrameHandle===null?t(new DOMException("XRSession has already ended.","InvalidStateError")):(globalThis.cancelAnimationFrame(this[_e].deviceFrameHandle),this[_e].device[Ye].onSessionEnd(),this.dispatchEvent(new Mm("end",{session:this})),e())})}get persistentAnchors(){return Array.from(this[_e].persistentAnchors.keys())}restorePersistentAnchor(e){return new Promise((t,n)=>{if(!this[_e].persistentAnchors.has(e))n(new DOMException(`Persistent anchor with uuid ${e} not found.`,"InvalidStateError"));else if(this[_e].ended)n(new DOMException("XRSession has already ended.","InvalidStateError"));else{const r=this[_e].persistentAnchors.get(e);this[_e].newAnchors.has(r)?n(new DOMException(`Multiple concurrent attempts detected to restore the anchor with UUID: ${e}.`,"InvalidStateError")):(this[_e].trackedAnchors.add(r),this[_e].newAnchors.set(r,{resolve:t,reject:n}))}})}deletePersistentAnchor(e){return new Promise((t,n)=>{if(!this[_e].persistentAnchors.has(e))n(new DOMException(`Persistent anchor with uuid ${e} not found.`,"InvalidStateError"));else{const r=this[_e].persistentAnchors.get(e);this[_e].persistentAnchors.delete(e),r.delete(),t(void 0)}})}requestHitTestSource(e){return new Promise((t,n)=>{if(!this[_e].enabledFeatures.includes("hit-test"))n(new DOMException('WebXR feature "hit-test" is not supported by current session',"NotSupportedError"));else if(this[_e].ended)n(new DOMException("XRSession has already ended.","InvalidStateError"));else if(!this[_e].device[Ye].syntheticEnvironmentModule)n(new DOMException("Synthethic Environment Module required for emulating hit-test","OperationError"));else{const r=new B6(this,e);this[_e].hitTestSources.add(r),t(r)}})}get onend(){var e;return(e=this[_e].onend)!==null&&e!==void 0?e:(()=>{})}set onend(e){this[_e].onend&&this.removeEventListener("end",this[_e].onend),this[_e].onend=e,e&&this.addEventListener("end",e)}get oninputsourceschange(){var e;return(e=this[_e].oninputsourceschange)!==null&&e!==void 0?e:(()=>{})}set oninputsourceschange(e){this[_e].oninputsourceschange&&this.removeEventListener("inputsourceschange",this[_e].oninputsourceschange),this[_e].oninputsourceschange=e,e&&this.addEventListener("inputsourceschange",e)}get onselect(){var e;return(e=this[_e].onselect)!==null&&e!==void 0?e:(()=>{})}set onselect(e){this[_e].onselect&&this.removeEventListener("select",this[_e].onselect),this[_e].onselect=e,e&&this.addEventListener("select",e)}get onselectstart(){var e;return(e=this[_e].onselectstart)!==null&&e!==void 0?e:(()=>{})}set onselectstart(e){this[_e].onselectstart&&this.removeEventListener("selectstart",this[_e].onselectstart),this[_e].onselectstart=e,e&&this.addEventListener("selectstart",e)}get onselectend(){var e;return(e=this[_e].onselectend)!==null&&e!==void 0?e:(()=>{})}set onselectend(e){this[_e].onselectend&&this.removeEventListener("selectend",this[_e].onselectend),this[_e].onselectend=e,e&&this.addEventListener("selectend",e)}get onsqueeze(){var e;return(e=this[_e].onsqueeze)!==null&&e!==void 0?e:(()=>{})}set onsqueeze(e){this[_e].onsqueeze&&this.removeEventListener("squeeze",this[_e].onsqueeze),this[_e].onsqueeze=e,e&&this.addEventListener("squeeze",e)}get onsqueezestart(){var e;return(e=this[_e].onsqueezestart)!==null&&e!==void 0?e:(()=>{})}set onsqueezestart(e){this[_e].onsqueezestart&&this.removeEventListener("squeezestart",this[_e].onsqueezestart),this[_e].onsqueezestart=e,e&&this.addEventListener("squeezestart",e)}get onsqueezeend(){var e;return(e=this[_e].onsqueezeend)!==null&&e!==void 0?e:(()=>{})}set onsqueezeend(e){this[_e].onsqueezeend&&this.removeEventListener("squeezeend",this[_e].onsqueezeend),this[_e].onsqueezeend=e,e&&this.addEventListener("squeezeend",e)}get onvisibilitychange(){var e;return(e=this[_e].onvisibilitychange)!==null&&e!==void 0?e:(()=>{})}set onvisibilitychange(e){this[_e].onvisibilitychange&&this.removeEventListener("visibilitychange",this[_e].onvisibilitychange),this[_e].onvisibilitychange=e,e&&this.addEventListener("visibilitychange",e)}get onframeratechange(){var e;return(e=this[_e].onframeratechange)!==null&&e!==void 0?e:(()=>{})}set onframeratechange(e){this[_e].onframeratechange&&this.removeEventListener("frameratechange",this[_e].onframeratechange),this[_e].onframeratechange=e,e&&this.addEventListener("frameratechange",e)}}var gh;(function(i){i.Wrist="wrist",i.ThumbMetacarpal="thumb-metacarpal",i.ThumbPhalanxProximal="thumb-phalanx-proximal",i.ThumbPhalanxDistal="thumb-phalanx-distal",i.ThumbTip="thumb-tip",i.IndexFingerMetacarpal="index-finger-metacarpal",i.IndexFingerPhalanxProximal="index-finger-phalanx-proximal",i.IndexFingerPhalanxIntermediate="index-finger-phalanx-intermediate",i.IndexFingerPhalanxDistal="index-finger-phalanx-distal",i.IndexFingerTip="index-finger-tip",i.MiddleFingerMetacarpal="middle-finger-metacarpal",i.MiddleFingerPhalanxProximal="middle-finger-phalanx-proximal",i.MiddleFingerPhalanxIntermediate="middle-finger-phalanx-intermediate",i.MiddleFingerPhalanxDistal="middle-finger-phalanx-distal",i.MiddleFingerTip="middle-finger-tip",i.RingFingerMetacarpal="ring-finger-metacarpal",i.RingFingerPhalanxProximal="ring-finger-phalanx-proximal",i.RingFingerPhalanxIntermediate="ring-finger-phalanx-intermediate",i.RingFingerPhalanxDistal="ring-finger-phalanx-distal",i.RingFingerTip="ring-finger-tip",i.PinkyFingerMetacarpal="pinky-finger-metacarpal",i.PinkyFingerPhalanxProximal="pinky-finger-phalanx-proximal",i.PinkyFingerPhalanxIntermediate="pinky-finger-phalanx-intermediate",i.PinkyFingerPhalanxDistal="pinky-finger-phalanx-distal",i.PinkyFingerTip="pinky-finger-tip"})(gh||(gh={}));class qx extends Map{}class Yx extends Fn{constructor(e,t,n){super(t,n),this[Tl]={jointName:e,radius:0}}get jointName(){return this[Tl].jointName}}const H6={jointTransforms:{wrist:{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.06867414712905884,-.009423808194696903,.10627774149179459,1],radius:.021460847929120064},"thumb-metacarpal":{offsetMatrix:[-.5012241005897522,-.8650535345077515,-.0213695727288723,0,.7415963411331177,-.4421543478965759,.5045139193534851,0,-.44587990641593933,.23702676594257355,.8631392121315002,0,-.032122574746608734,-.01196830440312624,.07194234430789948,1],radius:.019382517784833908},"thumb-phalanx-proximal":{offsetMatrix:[-.3175753057003021,-.9460570216178894,-.06419729441404343,0,.8958902955055237,-.32153913378715515,.30658137798309326,0,-.3106854259967804,.03984907269477844,.9496771097183228,0,-.017625702545046806,-.01967475935816765,.04387917369604111,1],radius:.01228295173496008},"thumb-phalanx-distal":{offsetMatrix:[-.4944636821746826,-.8691971898078918,.001086252392269671,0,.8307800889015198,-.4722411036491394,.2946045398712158,0,-.25555649399757385,.14657381176948547,.9556186199188232,0,-.007126678712666035,-.021021386608481407,.011786630377173424,1],radius:.009768804535269737},"thumb-tip":{offsetMatrix:[-.4944636821746826,-.8691971898078918,.001086252392269671,0,.8307800889015198,-.4722411036491394,.2946045398712158,0,-.25555649399757385,.14657381176948547,.9556186199188232,0,.0003423091256991029,-.024528030306100845,-.011410919018089771,1],radius:.008768804371356964},"index-finger-metacarpal":{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.038037415593862534,-.0020236473064869642,.07626739144325256,1],radius:.021228281781077385},"index-finger-phalanx-proximal":{offsetMatrix:[.7986818552017212,-.35985732078552246,.48229536414146423,0,.538311243057251,.7854709625244141,-.30537736415863037,0,-.2689369022846222,.5035246014595032,.8210577368736267,0,-.006869405973702669,.033938243985176086,.04206443578004837,1],radius:.010295259766280651},"index-finger-phalanx-intermediate":{offsetMatrix:[.8285930156707764,-.32672837376594543,.4546217918395996,0,.5577570199966431,.4116027057170868,-.7207564115524292,0,.04836784675717354,.8507823944091797,.5232869386672974,0,.0033306588884443045,.014840902760624886,.010923954658210278,1],radius:.00853810179978609},"index-finger-phalanx-distal":{offsetMatrix:[.8412464261054993,-.35794928669929504,.4051857888698578,0,.5139996409416199,.29711154103279114,-.8046918511390686,0,.16765329241752625,.8852096796035767,.4339304566383362,0,.0021551470272243023,-.0058362227864563465,-.0017938464879989624,1],radius:.007636196445673704},"index-finger-tip":{offsetMatrix:[.8412464261054993,-.35794928669929504,.4051857888698578,0,.5139996409416199,.29711154103279114,-.8046918511390686,0,.16765329241752625,.8852096796035767,.4339304566383362,0,-.00131594471167773,-.025222131982445717,-.012442642822861671,1],radius:.006636196281760931},"middle-finger-metacarpal":{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.05395089089870453,.003063359996303916,.07402937114238739,1],radius:.021231964230537415},"middle-finger-phalanx-proximal":{offsetMatrix:[.9187911748886108,-.1530158370733261,.36387869715690613,0,.038666240870952606,.9522662162780762,.302808940410614,0,-.3928440511226654,-.26414817571640015,.8808513283729553,0,-.02717282809317112,.04162866622209549,.03678669035434723,1],radius:.01117393933236599},"middle-finger-phalanx-intermediate":{offsetMatrix:[.9228746294975281,-.12856416404247284,.36300456523895264,0,.14524033665657043,.9892153143882751,-.01890045404434204,0,-.3566599190235138,.07016586512327194,.9315956234931946,0,-.01030921470373869,.05296773463487625,-.0010256498353555799,1],radius:.008030958473682404},"middle-finger-phalanx-distal":{offsetMatrix:[.9325166344642639,-.040404170751571655,.35885775089263916,0,.06836572289466858,.995502769947052,-.0655682161450386,0,-.3545948565006256,.08567725121974945,.9310863614082336,0,-.0004833847051486373,.05103470757603645,-.026690717786550522,1],radius:.007629410829395056},"middle-finger-tip":{offsetMatrix:[.9325166344642639,-.040404170751571655,.35885775089263916,0,.06836572289466858,.995502769947052,-.0655682161450386,0,-.3545948565006256,.08567725121974945,.9310863614082336,0,.008158999495208263,.05004044249653816,-.050120558589696884,1],radius:.006629410665482283},"ring-finger-metacarpal":{offsetMatrix:[.9060805439949036,-.1844543218612671,.3807799518108368,0,-.08027800172567368,.8086723685264587,.5827555656433105,0,-.4154181182384491,-.5585917234420776,.7179155349731445,0,-.06732909381389618,.007902119308710098,.07209732383489609,1],radius:.019088275730609894},"ring-finger-phalanx-proximal":{offsetMatrix:[.9391821026802063,-.027994679287075996,.34227466583251953,0,-.18282271921634674,.8029410243034363,.5673282742500305,0,-.2907087206840515,-.5954000353813171,.7489906549453735,0,-.047129884362220764,.03806127607822418,.032147664576768875,1],radius:.00992213748395443},"ring-finger-phalanx-intermediate":{offsetMatrix:[.9249380826950073,.03699534013867378,.3783116042613983,0,-.12898847460746765,.9667453765869141,.2208271026611328,0,-.3575615882873535,-.25304901599884033,.8989526629447937,0,-.03579339757561684,.06127955764532089,.002939916681498289,1],radius:.007611672393977642},"ring-finger-phalanx-distal":{offsetMatrix:[.9001164436340332,.03983335196971893,.4338230490684509,0,-.09662467986345291,.9892624020576477,.10964841395616531,0,-.4247973561286926,-.14061418175697327,.8943013548851013,0,-.026291755959391594,.06800390034914017,-.02094830758869648,1],radius:.007231088820844889},"ring-finger-tip":{offsetMatrix:[.9001164436340332,.03983335196971893,.4338230490684509,0,-.09662467986345291,.9892624020576477,.10964841395616531,0,-.4247973561286926,-.14061418175697327,.8943013548851013,0,-.016345610842108727,.07300511747598648,-.04263874143362045,1],radius:.0062310886569321156},"pinky-finger-metacarpal":{offsetMatrix:[.8769711852073669,.31462907791137695,.36322021484375,0,-.4506046175956726,.801031768321991,.39408499002456665,0,-.16696058213710785,-.5092697143554688,.8442559838294983,0,-.07460174709558487,.0062340241856873035,.06756893545389175,1],radius:.01808827556669712},"pinky-finger-phalanx-proximal":{offsetMatrix:[.9498357176780701,.1553308218717575,.2714462876319885,0,-.3019258379936218,.6817675232887268,.6663586497306824,0,-.08155745267868042,-.7148879170417786,.694466233253479,0,-.06697750836610794,.029482364654541016,.02902858518064022,1],radius:.008483353070914745},"pinky-finger-phalanx-intermediate":{offsetMatrix:[.9214097261428833,.27928245067596436,.2701927423477173,0,-.3670244514942169,.8538867831230164,.36901235580444336,0,-.12765564024448395,-.43917882442474365,.8892839550971985,0,-.06447203457355499,.05144399777054787,.0076942890882492065,1],radius:.0067641944624483585},"pinky-finger-phalanx-distal":{offsetMatrix:[.9038633704185486,.23618005216121674,.3567195236682892,0,-.3532794713973999,.8823202252388,.3109731376171112,0,-.24129553139209747,-.4070987403392792,.8809353709220886,0,-.06187915802001953,.060364335775375366,-.010368337854743004,1],radius:.0064259846694767475},"pinky-finger-tip":{offsetMatrix:[.9038633704185486,.23618005216121674,.3567195236682892,0,-.3532794713973999,.8823202252388,.3109731376171112,0,-.24129553139209747,-.4070987403392792,.8809353709220886,0,-.056796226650476456,.07042007893323898,-.02921444922685623,1],radius:.005425984505563974}},gripOffsetMatrix:[.08027800917625427,-.8086723685264587,-.5827556252479553,0,-.4154181480407715,-.5585916638374329,.7179154753684998,0,-.9060805439949036,.1844543218612671,-.3807799518108368,0,-.038054611533880234,-.002910431008785963,.03720742464065552,1]},V6={jointTransforms:{wrist:{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.05789132043719292,.01670890860259533,.11183350533246994,1],radius:.021460847929120064},"thumb-metacarpal":{offsetMatrix:[.02145560085773468,-.9978390336036682,.0621047280728817,0,.41311800479888916,.06541631370782852,.9083252549171448,0,-.9104245901107788,.006167683284729719,.4136286973953247,0,-.016488194465637207,.012708572670817375,.08862338215112686,1],radius:.019382517784833908},"thumb-phalanx-proximal":{offsetMatrix:[.21270370483398438,-.966137707233429,.14606566727161407,0,.49890995025634766,.2359165996313095,.8339261412620544,0,-.8401462435722351,-.10450579971075058,.5321959853172302,0,.013112368993461132,.012508046813309193,.07517509907484055,1],radius:.01228295173496008},"thumb-phalanx-distal":{offsetMatrix:[.01653280481696129,-.9986647963523865,.048943229019641876,0,.26313456892967224,.051570065319538116,.9633802771568298,0,-.9646173715591431,-.0030490627977997065,.26363563537597656,0,.04150351136922836,.016039609909057617,.05719054117798805,1],radius:.009768804535269737},"thumb-tip":{offsetMatrix:[.01653280481696129,-.9986647963523865,.048943229019641876,0,.26313456892967224,.051570065319538116,.9633802771568298,0,-.9646173715591431,-.0030490627977997065,.26363563537597656,0,.06548332422971725,.01683700829744339,.0516640841960907,1],radius:.008768804371356964},"index-finger-metacarpal":{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.02592567168176174,.019982583820819855,.08479326963424683,1],radius:.021228281781077385},"index-finger-phalanx-proximal":{offsetMatrix:[.9063700437545776,-.21756279468536377,.3621589243412018,0,.0970839336514473,.9415287375450134,.3226419687271118,0,-.41117796301841736,-.2572731077671051,.8744958639144897,0,-.0015709538711234927,.043078210204839706,.034657616168260574,1],radius:.010295259766280651},"index-finger-phalanx-intermediate":{offsetMatrix:[.9159826040267944,-.1651475727558136,.36565208435058594,0,.09755707532167435,.9756820797920227,.1962820291519165,0,-.3891757130622864,-.14411886036396027,.9098196625709534,0,.014023927971720695,.052835866808891296,.0014903299743309617,1],radius:.00853810179978609},"index-finger-phalanx-distal":{offsetMatrix:[.9378057718276978,-.12329639494419098,.3245268166065216,0,.032558172941207886,.9619227051734924,.2713746726512909,0,-.3456292748451233,-.2439306229352951,.9061115384101868,0,.023482320830225945,.05633850023150444,-.020621655508875847,1],radius:.007636196445673704},"index-finger-tip":{offsetMatrix:[.9378057718276978,-.12329639494419098,.3245268166065216,0,.032558172941207886,.9619227051734924,.2713746726512909,0,-.3456292748451233,-.2439306229352951,.9061115384101868,0,.03096788562834263,.06281610578298569,-.040703095495700836,1],radius:.006636196281760931},"middle-finger-metacarpal":{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.04184452444314957,.022474845871329308,.08177298307418823,1],radius:.021231964230537415},"middle-finger-phalanx-proximal":{offsetMatrix:[.9720265865325928,-.08313076198101044,.21966552734375,0,.20477405190467834,.7580050826072693,-.6192700862884521,0,-.11502730846405029,.6469289064407349,.7538246512413025,0,-.022107340395450592,.05035499855875969,.02970452979207039,1],radius:.01117393933236599},"middle-finger-phalanx-intermediate":{offsetMatrix:[.9779140949249268,-.07129573822021484,.19646917283535004,0,.1287083923816681,-.5352076292037964,-.8348574042320251,0,.1646735966205597,.8417060971260071,-.5142109394073486,0,-.017169542610645294,.022584279999136925,-.00265491777099669,1],radius:.008030958473682404},"middle-finger-phalanx-distal":{offsetMatrix:[.9774913787841797,-.19657190144062042,.07661263644695282,0,-.1924918293952942,-.9796126484870911,-.05749811604619026,0,.08635343611240387,.041456472128629684,-.995401918888092,0,-.02170622907578945,-.0006043742760084569,.011511396616697311,1],radius:.007629410829395056},"middle-finger-tip":{offsetMatrix:[.9774913787841797,-.19657190144062042,.07661263644695282,0,-.1924918293952942,-.9796126484870911,-.05749811604619026,0,.08635343611240387,.041456472128629684,-.995401918888092,0,-.02438267692923546,-.0026927536819130182,.03627248480916023,1],radius:.006629410665482283},"ring-finger-metacarpal":{offsetMatrix:[.9340395331382751,-.13936476409435272,.32885703444480896,0,-.005510995630174875,.914999783039093,.40341612696647644,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.05944233387708664,.0264605600386858,.07478221505880356,1],radius:.019088275730609894},"ring-finger-phalanx-proximal":{offsetMatrix:[.9842101335525513,.024470895528793335,.1753024309873581,0,.12200043350458145,.6237703561782837,-.7720272541046143,0,-.12824076414108276,.7812241315841675,.610936164855957,0,-.04249368980526924,.0467497780919075,.027722163125872612,1],radius:.00992213748395443},"ring-finger-phalanx-intermediate":{offsetMatrix:[.9941774606704712,.05949164181947708,.08983955532312393,0,.10504482686519623,-.7208291888237,-.6851072907447815,0,.024001073092222214,.6905553936958313,-.7228817939758301,0,-.0374927744269371,.016285063698887825,.0038980208337306976,1],radius:.007611672393977642},"ring-finger-phalanx-distal":{offsetMatrix:[.9995742440223694,.01638498157262802,.02412819117307663,0,.007813597097992897,-.9474818110466003,.31971633434295654,0,.028100071474909782,-.31939181685447693,-.9472070932388306,0,-.038130562752485275,-.0020653479732573032,.02310742810368538,1],radius:.007231088820844889},"ring-finger-tip":{offsetMatrix:[.9995742440223694,.01638498157262802,.02412819117307663,0,.007813597097992897,-.9474818110466003,.31971633434295654,0,.028100071474909782,-.31939181685447693,-.9472070932388306,0,-.0390593595802784,.004176302347332239,.0466572530567646,1],radius:.0062310886569321156},"pinky-finger-metacarpal":{offsetMatrix:[.9147363901138306,.3458845317363739,.20885537564754486,0,-.3923271894454956,.8839452862739563,.2544005811214447,0,-.09662359952926636,-.3146490156650543,.9442773461341858,0,-.06715242564678192,.024195827543735504,.07137546688318253,1],radius:.01808827556669712},"pinky-finger-phalanx-proximal":{offsetMatrix:[.9613109827041626,.22439135611057281,.15977802872657776,0,.01002211682498455,.5511574745178223,-.8343409299850464,0,-.27528178691864014,.8036624789237976,.5275853276252747,0,-.06273911893367767,.038559623062610626,.028268879279494286,1],radius:.008483353070914745},"pinky-finger-phalanx-intermediate":{offsetMatrix:[.9820972084999084,.18811029195785522,-.00995189044624567,0,.14063723385334015,-.7673450708389282,-.6256227493286133,0,-.12532226741313934,.6130226850509644,-.7800630927085876,0,-.05428232625126839,.013870777562260628,.012061242014169693,1],radius:.0067641944624483585},"pinky-finger-phalanx-distal":{offsetMatrix:[.9744614362716675,.20454788208007812,-.09265263378620148,0,.22429193556308746,-.9065253138542175,.35764020681381226,0,-.010836843401193619,-.3692878782749176,-.9292529225349426,0,-.05173685774207115,.0014194445684552193,.02790539152920246,1],radius:.0064259846694767475},"pinky-finger-tip":{offsetMatrix:[.9744614362716675,.20454788208007812,-.09265263378620148,0,.22429193556308746,-.9065253138542175,.35764020681381226,0,-.010836843401193619,-.3692878782749176,-.9292529225349426,0,-.05098633095622063,.008463085629045963,.048688892275094986,1],radius:.005425984505563974}},gripOffsetMatrix:[.005510995630174875,-.9149997234344482,-.40341615676879883,0,-.3571262061595917,-.37861889600753784,.8538784384727478,0,-.9340395331382751,.13936474919319153,-.32885703444480896,0,-.031803809106349945,.007837686687707901,.04313928261399269,1]},G6={jointTransforms:{wrist:{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.04913589730858803,.0021463718730956316,.11701996624469757,1],radius:.021460847929120064},"thumb-metacarpal":{offsetMatrix:[-.07536252588033676,-.9959676265716553,-.04867160692811012,0,.5877083539962769,-.08379616588354111,.8047218918800354,0,-.8055551648139954,.032041035592556,.5916536450386047,0,-.010643752291798592,.0006936835707165301,.08736639469861984,1],radius:.019382517784833908},"thumb-phalanx-proximal":{offsetMatrix:[.1374533325433731,-.9904957413673401,.004982374142855406,0,.5534393787384033,.08097179979085922,.8289443850517273,0,-.8214688897132874,-.11118389666080475,.559309184551239,0,.015547193586826324,-.0003480653394944966,.0681300163269043,1],radius:.01228295173496008},"thumb-phalanx-distal":{offsetMatrix:[-.04659227654337883,-.9974699020385742,-.05369402840733528,0,.6812446117401123,-.07104194164276123,.728600800037384,0,-.7305715084075928,-.002631746232509613,.6828309893608093,0,.04330715537071228,.003409178927540779,.0492292083799839,1],radius:.009768804535269737},"thumb-tip":{offsetMatrix:[-.04659227654337883,-.9974699020385742,-.05369402840733528,0,.6812446117401123,-.07104194164276123,.728600800037384,0,-.7305715084075928,-.002631746232509613,.6828309893608093,0,.062003348022699356,.004069602582603693,.03322213143110275,1],radius:.008768804371356964},"index-finger-metacarpal":{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.02009812369942665,.008770795539021492,.08660387247800827,1],radius:.021228281781077385},"index-finger-phalanx-proximal":{offsetMatrix:[.9001791477203369,-.2598813474178314,.3494834005832672,0,.06073702871799469,.8695210218429565,.490146666765213,0,-.4312632381916046,-.41999316215515137,.7985095381736755,0,-.00017739279428496957,.03890012577176094,.039073407649993896,1],radius:.010295259766280651},"index-finger-phalanx-intermediate":{offsetMatrix:[.9082008600234985,-.20898112654685974,.36262574791908264,0,.11045389622449875,.9553793668746948,.27395179867744446,0,-.40369608998298645,-.20874978601932526,.8907597661018372,0,.01617925800383091,.05482936650514603,.008788082748651505,1],radius:.00853810179978609},"index-finger-phalanx-distal":{offsetMatrix:[.9309692978858948,-.16783711314201355,.32423174381256104,0,.1080828532576561,.9749603867530823,.1943446695804596,0,-.34873148798942566,-.14588497579097748,.9257990717887878,0,.02599053829908371,.059902746230363846,-.012860597111284733,1],radius:.007636196445673704},"index-finger-tip":{offsetMatrix:[.9309692978858948,-.16783711314201355,.32423174381256104,0,.1080828532576561,.9749603867530823,.1943446695804596,0,-.34873148798942566,-.14588497579097748,.9257990717887878,0,.03362493962049484,.06421422213315964,-.033461250364780426,1],radius:.006636196281760931},"middle-finger-metacarpal":{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.03627845644950867,.011579737067222595,.08550142496824265,1],radius:.021231964230537415},"middle-finger-phalanx-proximal":{offsetMatrix:[.9876697659492493,-.06786545366048813,.1410750150680542,0,-.015095947310328484,.855663537979126,.5173118710517883,0,-.15582047402858734,-.5130629539489746,.8440889716148376,0,-.021259509027004242,.04587256908416748,.03659208118915558,1],radius:.01117393933236599},"middle-finger-phalanx-intermediate":{offsetMatrix:[.988391637802124,-.04354291781783104,.14555205404758453,0,.008894841186702251,.9729899168014526,.23067504167556763,0,-.15166506171226501,-.22670257091522217,.9620829224586487,0,-.014570588245987892,.06789684295654297,.0003578895702958107,1],radius:.008030958473682404},"middle-finger-phalanx-distal":{offsetMatrix:[.9853697419166565,.044260796159505844,.16458062827587128,0,-.0757969319820404,.9787378311157227,.19059516489505768,0,-.1526455283164978,-.20028135180473328,.9677740931510925,0,-.010392282158136368,.07414241135120392,-.026147106662392616,1],radius:.007629410829395056},"middle-finger-tip":{offsetMatrix:[.9853697419166565,.044260796159505844,.16458062827587128,0,-.0757969319820404,.9787378311157227,.19059516489505768,0,-.1526455283164978,-.20028135180473328,.9677740931510925,0,-.0069718430750072,.08024183660745621,-.05014154314994812,1],radius:.006629410665482283},"ring-finger-metacarpal":{offsetMatrix:[.9616971015930176,-.13805118203163147,.2368120402097702,0,.0005348679260350764,.8648636937141418,.5020061135292053,0,-.2741127610206604,-.48265108466148376,.8318111300468445,0,-.05402477830648422,.015797706320881844,.08152295649051666,1],radius:.019088275730609894},"ring-finger-phalanx-proximal":{offsetMatrix:[.9940828680992126,.05735103040933609,.09224652498960495,0,-.10022822767496109,.8116500377655029,.5754809379577637,0,-.041867565363645554,-.5813214182853699,.8125960826873779,0,-.041623555123806,.04171867296099663,.03582974523305893,1],radius:.00992213748395443},"ring-finger-phalanx-intermediate":{offsetMatrix:[.9843675494194031,.12044742703437805,.12850022315979004,0,-.15629759430885315,.9337108135223389,.3221098482608795,0,-.08118485659360886,-.3371586799621582,.937940776348114,0,-.039990875869989395,.06438793987035751,.004141641780734062,1],radius:.007611672393977642},"ring-finger-phalanx-distal":{offsetMatrix:[.9748351573944092,.11857274919748306,.18877571821212769,0,-.15575434267520905,.9681083559989929,.19623035192489624,0,-.15948788821697235,-.22069483995437622,.9622148275375366,0,-.03783353418111801,.07334739714860916,-.020782606676220894,1],radius:.007231088820844889},"ring-finger-tip":{offsetMatrix:[.9748351573944092,.11857274919748306,.18877571821212769,0,-.15575434267520905,.9681083559989929,.19623035192489624,0,-.15948788821697235,-.22069483995437622,.9622148275375366,0,-.03445569798350334,.0802423357963562,-.04392268508672714,1],radius:.0062310886569321156},"pinky-finger-metacarpal":{offsetMatrix:[.9181402921676636,.35625091195106506,.17350243031978607,0,-.39615097641944885,.8352503180503845,.38134080171585083,0,-.009065053425729275,-.41885748505592346,.9080066680908203,0,-.06191859766840935,.013620133511722088,.07850203663110733,1],radius:.01808827556669712},"pinky-finger-phalanx-proximal":{offsetMatrix:[.9714386463165283,.236698180437088,-.016745081171393394,0,-.18462024629116058,.7982627749443054,.5733163952827454,0,.14906984567642212,-.5538501739501953,.8191629648208618,0,-.061502378433942795,.032741155475378036,.03705105185508728,1],radius:.008483353070914745},"pinky-finger-phalanx-intermediate":{offsetMatrix:[.9337416291236877,.35620439052581787,-.03527557849884033,0,-.33203884959220886,.8987522721290588,.28634607791900635,0,.13370157778263092,-.2556603252887726,.9574766755104065,0,-.06608185172080994,.049755651503801346,.011886020191013813,1],radius:.0067641944624483585},"pinky-finger-phalanx-distal":{offsetMatrix:[.9419984817504883,.3303581774234772,.059175245463848114,0,-.33483216166496277,.9130291938781738,.23294763267040253,0,.02292730286717415,-.2392500638961792,.970687210559845,0,-.0687975287437439,.054948460310697556,-.007561664097011089,1],radius:.0064259846694767475},"pinky-finger-tip":{offsetMatrix:[.9419984817504883,.3303581774234772,.059175245463848114,0,-.33483216166496277,.9130291938781738,.23294763267040253,0,.02292730286717415,-.2392500638961792,.970687210559845,0,-.06947512179613113,.0613851435482502,-.028543535619974136,1],radius:.005425984505563974}},gripOffsetMatrix:[-.0005348679260350764,-.8648636937141418,-.5020061135292053,0,-.2741127908229828,-.48265108466148376,.8318111896514893,0,-.9616971015930176,.13805119693279266,-.2368120402097702,0,-.02878567762672901,.0017147823236882687,.04536811262369156,1]},IE={profileId:"oculus-hand",fallbackProfileIds:["generic-hand","generic-hand-select","generic-trigger"],poses:{default:G6,pinch:H6,point:V6}},W6={mapping:mh.None,buttons:[{id:"pinch",type:"analog",eventTrigger:"select"}],axes:[]},DE=pi(),NE=ms(),UE=pi(),OE=pi(),FE=ms(),kE=pi(),BE=pi(),zE=ms(),HE=pi(),VE=(i,e,t,n)=>(ph(DE,e),vm(NE,e),u1(UE,e),ph(OE,t),vm(FE,t),u1(kE,t),f1(BE,DE,OE,n),eh(zE,NE,FE,n),f1(HE,UE,kE,n),_6(i,zE,BE,HE),i),X6=[1,-1,-1,0,-1,1,1,0,-1,1,1,0,-1,1,1,1],$6=i=>{for(let e=0;e<16;e++)i[e]*=X6[e]};class GE extends Sb{constructor(e,t,n){if(t!==wr.Left&&t!==wr.Right)throw new DOMException('handedness for XRHandInput must be either "left" or "right"',"InvalidStateError");if(!e.poses.default||!e.poses.pinch)throw new DOMException('"default" and "pinch" hand pose configs are required',"InvalidStateError");const r=new Fn(n),s=new Fn(r),o=[e.profileId,...e.fallbackProfileIds],c=new qx;Object.values(gh).forEach(f=>{c.set(f,new Yx(f,r))});const u=new Gm(t,ym.TrackedPointer,o,r,new $x(W6),s,c);super(u),this[tl]={poseId:"default",poses:e.poses},this.updateHandPose()}get poseId(){return this[tl].poseId}set poseId(e){if(!this[tl].poses[e]){console.warn(`Pose config ${e} not found`);return}this[tl].poseId=e}updateHandPose(){const e=this[tl].poses[this[tl].poseId],t=this[tl].poses.pinch;Object.values(gh).forEach(n=>{const r=e.jointTransforms[n].offsetMatrix,s=t.jointTransforms[n].offsetMatrix,o=this.inputSource.hand.get(n);VE(o[$n].offsetMatrix,r,s,this.pinchValue),this.inputSource.handedness===wr.Right&&$6(o[$n].offsetMatrix),o[Tl].radius=(1-this.pinchValue)*e.jointTransforms[n].radius+this.pinchValue*t.jointTransforms[n].radius}),e.gripOffsetMatrix&&t.gripOffsetMatrix&&VE(this.inputSource.gripSpace[$n].offsetMatrix,e.gripOffsetMatrix,t.gripOffsetMatrix,this.pinchValue)}get pinchValue(){return this[Ln].inputSource.gamepad[bt].buttonsMap.pinch.value}updatePinchValue(e){if(e>1||e<0){console.warn(`Out-of-range value ${e} provided for pinch`);return}const t=this[Ln].inputSource.gamepad[bt].buttonsMap.pinch;t[bt].pendingValue=e}onFrameStart(e){super.onFrameStart(e),this.updateHandPose()}}class Lb extends EventTarget{}const j6={antialias:!0,depth:!0,stencil:!1,alpha:!0,ignoreDepthValues:!1,framebufferScaleFactor:1};let q6=class extends Lb{constructor(e,t,n={}){if(super(),e[_e].ended)throw new DOMException("Session has ended","InvalidStateError");const r={...j6,...n};this[mo]={session:e,context:t,antialias:r.antialias}}get context(){return this[mo].context}get antialias(){return this[mo].antialias}get ignoreDepthValues(){return!0}get framebuffer(){return null}get framebufferWidth(){return this[mo].context.drawingBufferWidth}get framebufferHeight(){return this[mo].context.drawingBufferHeight}getViewport(e){if(e[fl].session!==this[mo].session)throw new DOMException("View's session differs from Layer's session","InvalidStateError");return this[mo].session[_e].device[Ye].getViewport(this,e)}static getNativeFramebufferScaleFactor(e){if(!(e instanceof jx))throw new TypeError("getNativeFramebufferScaleFactor must be passed a session.");return e[_e].ended?0:1}};class Y6{constructor(e,t,n){const{schema:r,frames:s}=t;if(!s||!r||s.length===0)throw new DOMException("wrong recording format","NotSupportedError");const o=new Il(hi.Viewer,e),c={[En.Left]:new Fn(o),[En.Right]:new Fn(o),[En.None]:new Fn(o)};this[Vt]={refSpace:e,inputSources:new Map,inputSchemas:new Map,frames:s,recordedFramePointer:0,startingTimeStamp:s[0][0],endingTimeStamp:s[s.length-1][0],playbackTime:s[0][0],playing:!1,viewerSpace:o,viewSpaces:c,vec3:pi(),quat:ms()},gu(this[Vt].viewSpaces[En.Left][$n].offsetMatrix,hs(-n/2,0,0)),gu(this[Vt].viewSpaces[En.Right][$n].offsetMatrix,hs(n/2,0,0)),r.forEach(u=>{const f=u[0],h=u[1];let p;if(h.hasGamepad){const S=[];for(let g=0;g<h.numButtons;g++)S.push({id:g.toString(),type:"manual"});const _=[];for(let g=0;g<h.numAxes;g++)_.push({id:g.toString(),type:"manual"});p=new $x({mapping:h.mapping,buttons:S,axes:_})}const m=new Fn(e);let v;h.hasHand&&(v=new qx,Object.values(gh).forEach(S=>{v.set(S,new Yx(S,m))}));const y=new Gm(h.handedness,h.targetRayMode,h.profiles,m,p,h.hasGrip?new Fn(e):void 0,h.hasHand?v:void 0);this[Vt].inputSources.set(f,{active:!1,source:y}),this[Vt].inputSchemas.set(f,h)})}play(){this[Vt].recordedFramePointer=0,this[Vt].playbackTime=this[Vt].startingTimeStamp,this[Vt].playing=!0,this[Vt].actualTimeStamp=performance.now()}stop(){this[Vt].playing=!1}get playing(){return this[Vt].playing}get viewerSpace(){return this[Vt].viewerSpace}get viewSpaces(){return this[Vt].viewSpaces}get inputSources(){return Array.from(this[Vt].inputSources.values()).filter(e=>e.active).map(e=>e.source)}playFrame(){const e=performance.now(),t=e-this[Vt].actualTimeStamp;if(this[Vt].actualTimeStamp=e,this[Vt].playbackTime+=t,this[Vt].playbackTime>this[Vt].endingTimeStamp){this.stop();return}for(;this[Vt].frames[this[Vt].recordedFramePointer+1][0]<this[Vt].playbackTime;)this[Vt].recordedFramePointer++;const n=this[Vt].frames[this[Vt].recordedFramePointer],r=this[Vt].frames[this[Vt].recordedFramePointer+1],s=(this[Vt].playbackTime-n[0])/(r[0]-n[0]);this.updateXRSpaceFromMergedFrames(this[Vt].viewerSpace,n.slice(1,8),r.slice(1,8),s);const o=new Map;for(let u=8;u<n.length;u++){const{index:f,inputData:h}=this.processRawInputData(n[u]);o.set(f,h)}const c=new Map;for(let u=8;u<r.length;u++){const{index:f,inputData:h}=this.processRawInputData(r[u]);c.set(f,h)}this[Vt].inputSources.forEach(u=>{u.active=!1}),c.forEach((u,f)=>{this[Vt].inputSources.get(f).active=!0;const h=this[Vt].inputSources.get(f).source,p=this[Vt].inputSchemas.get(f);this.updateInputSource(h,p,o.has(f)?o.get(f):u,u,s)})}updateInputSource(e,t,n,r,s){if(this.updateXRSpaceFromMergedFrames(e.targetRaySpace,n.targetRayTransform,r.targetRayTransform,s),t.hasGrip&&this.updateXRSpaceFromMergedFrames(e.gripSpace,n.gripTransform,r.gripTransform,s),t.hasHand)for(let o=0;o<25;o++){const c=n.handTransforms.slice(o*8,o*8+7),u=r.handTransforms.slice(o*8,o*8+7),f=n.handTransforms[o*8+7],h=r.handTransforms[o*8+7],p=e.hand.get(t.jointSequence[o]);this.updateXRSpaceFromMergedFrames(p,c,u,s),p[Tl].radius=(h-f)*s+f}if(t.hasGamepad){const o=e.gamepad;r.buttons.forEach((c,u)=>{const f=o.buttons[u];f[bt].pressed=c[0]===1,f[bt].touched=c[1]===1;const h=n.buttons[u][2],p=c[2];f[bt].value=(p-h)*s+h}),r.axes.forEach((c,u)=>{const f=n.axes[u];o[bt].axesMap[u.toString()].x=(c-f)*s+f})}}updateXRSpaceFromMergedFrames(e,t,n,r){const s=hs(t[0],t[1],t[2]),o=xm(t[3],t[4],t[5],t[6]),c=hs(n[0],n[1],n[2]),u=xm(n[3],n[4],n[5],n[6]);f1(this[Vt].vec3,s,c,r),eh(this[Vt].quat,o,u,r),bh(e[$n].offsetMatrix,this[Vt].quat,this[Vt].vec3)}processRawInputData(e){const t=e[0],n=this[Vt].inputSchemas.get(t),s={targetRayTransform:e.slice(1,8)};let o=8;if(n.hasGrip&&(s.gripTransform=e[o++]),n.hasHand&&(s.handTransforms=e[o++]),n.hasGamepad){const c=e[o];s.buttons=c.slice(0,n.numButtons),s.axes=c.slice(n.numButtons)}return{index:t,inputData:s}}}const K6="1.1.1";class WE extends Event{constructor(e,t){if(super(e,t),!t.referenceSpace)throw new Error("XRReferenceSpaceEventInit.referenceSpace is required");this.referenceSpace=t.referenceSpace,this.transform=t.transform}}class XE extends EventTarget{constructor(e){super(),this[po]={device:e}}isSessionSupported(e){return new Promise((t,n)=>{t(e==="inline"?!0:this[po].device.supportedSessionModes.includes(e))})}requestSession(e,t={}){return new Promise((n,r)=>{this.isSessionSupported(e).then(s=>{if(!s){r(new DOMException("The requested XRSession mode is not supported.","NotSupportedError"));return}if(this[po].activeSession){r(new DOMException("An active XRSession already exists.","InvalidStateError"));return}const{requiredFeatures:o=[],optionalFeatures:c=[]}=t,{supportedFeatures:u}=this[po].device;if(!o.every(v=>u.includes(v))){r(new Error("One or more required features are not supported by the device."));return}const h=c.filter(v=>u.includes(v)),p=Array.from(new Set([...o,...h,"viewer","local"])),m=new jx(this[po].device,e,p);this[po].activeSession=m,m.addEventListener("end",()=>{this[po].activeSession=void 0}),n(m)}).catch(r)})}}class cp{constructor(e,t,n,r){this[Cf]={x:e,y:t,width:n,height:r}}get x(){return this[Cf].x}get y(){return this[Cf].y}get width(){return this[Cf].width}get height(){return this[Cf].height}}const Pf={ipd:.063,fovy:Math.PI/2,headsetPosition:new wl(0,1.6,0),headsetQuaternion:new th,stereoEnabled:!1};class Z6{constructor(e,t={}){var n,r,s,o,c,u;const f=new C6,h=new Il(hi.Viewer,f),p={[En.Left]:new Fn(h),[En.Right]:new Fn(h),[En.None]:new Fn(h)},m=e.controllerConfig,v={};m&&Object.values(wr).forEach(_=>{m.layout[_]&&(v[_]=new I6(m,_,f))});const y={[wr.Left]:new GE(IE,wr.Left,f),[wr.Right]:new GE(IE,wr.Right,f)},S=(n=t.canvasContainer)!==null&&n!==void 0?n:document.createElement("div");S.dataset.webxr_runtime=`Immersive Web Emulation Runtime v${K6}`,S.style.position="fixed",S.style.width="100%",S.style.height="100%",S.style.top="0",S.style.left="0",S.style.display="flex",S.style.justifyContent="center",S.style.alignItems="center",S.style.overflow="hidden",S.style.zIndex="999",this[Ye]={name:e.name,supportedSessionModes:e.supportedSessionModes,supportedFeatures:e.supportedFeatures,supportedFrameRates:e.supportedFrameRates,isSystemKeyboardSupported:e.isSystemKeyboardSupported,internalNominalFrameRate:e.internalNominalFrameRate,environmentBlendModes:e.environmentBlendModes,interactionMode:e.interactionMode,userAgent:e.userAgent,position:(r=t.headsetPosition)!==null&&r!==void 0?r:Pf.headsetPosition.clone(),quaternion:(s=t.headsetQuaternion)!==null&&s!==void 0?s:Pf.headsetQuaternion.clone(),stereoEnabled:(o=t.stereoEnabled)!==null&&o!==void 0?o:Pf.stereoEnabled,ipd:(c=t.ipd)!==null&&c!==void 0?c:Pf.ipd,fovy:(u=t.fovy)!==null&&u!==void 0?u:Pf.fovy,controllers:v,hands:y,primaryInputMode:"controller",pendingReferenceSpaceReset:!1,visibilityState:"visible",pendingVisibilityState:null,xrSystem:null,matrix:_i(),globalSpace:f,viewerSpace:h,viewSpaces:p,canvasContainer:S,getViewport:(_,g)=>{const b=_.context.canvas,{width:E,height:T}=b;switch(g.eye){case En.None:return new cp(0,0,E,T);case En.Left:return new cp(0,0,this[Ye].stereoEnabled?E/2:E,T);case En.Right:return new cp(E/2,0,this[Ye].stereoEnabled?E/2:0,T)}},updateViews:()=>{const _=this[Ye].viewerSpace;bh(_[$n].offsetMatrix,this[Ye].quaternion.quat,this[Ye].position.vec3),gu(this[Ye].viewSpaces[En.Left][$n].offsetMatrix,hs(-this[Ye].ipd/2,0,0)),gu(this[Ye].viewSpaces[En.Right][$n].offsetMatrix,hs(this[Ye].ipd/2,0,0))},onBaseLayerSet:_=>{if(!_)return;const g=_.context.canvas;if(g.parentElement!==this[Ye].canvasContainer){const b=this[Ye].syntheticEnvironmentModule;b&&this[Ye].canvasContainer.appendChild(b.environmentCanvas),this[Ye].canvasData={canvas:g,parent:g.parentElement,width:g.width,height:g.height},this[Ye].canvasContainer.appendChild(g),document.body.appendChild(this[Ye].canvasContainer)}g.width=window.innerWidth,g.height=window.innerHeight},onSessionEnd:()=>{if(this[Ye].canvasData){const{canvas:_,parent:g,width:b,height:E}=this[Ye].canvasData;_.width=b,_.height=E,g?g.appendChild(_):this[Ye].canvasContainer.removeChild(_);const T=this[Ye].syntheticEnvironmentModule;T&&this[Ye].canvasContainer.removeChild(T.environmentCanvas),document.body.removeChild(this[Ye].canvasContainer),this[Ye].canvasData=void 0,window.dispatchEvent(new Event("resize"))}},onFrameStart:_=>{var g;if(!((g=this[Ye].actionPlayer)===null||g===void 0)&&g.playing)this[Ye].actionPlayer.playFrame();else{const b=_.session;this[Ye].updateViews(),this[Ye].pendingVisibilityState&&(this[Ye].visibilityState=this[Ye].pendingVisibilityState,this[Ye].pendingVisibilityState=null,b.dispatchEvent(new Mm("visibilitychange",{session:b}))),this[Ye].visibilityState==="visible"&&this.activeInputs.forEach(E=>{E.onFrameStart(_)}),this[Ye].pendingReferenceSpaceReset&&(b[_e].referenceSpaces.forEach(E=>{switch(E[xo].type){case hi.Local:case hi.LocalFloor:case hi.BoundedFloor:case hi.Unbounded:E.dispatchEvent(new WE("reset",{referenceSpace:E}));break}}),this[Ye].pendingReferenceSpaceReset=!1)}this[Ye].updateViews()}},this[Ye].updateViews()}installRuntime(e=globalThis){Object.defineProperty(WebGL2RenderingContext.prototype,"makeXRCompatible",{value:function(){return new Promise((t,n)=>{t(!0)})},configurable:!0}),this[Ye].xrSystem=new XE(this),Object.defineProperty(globalThis.navigator,"xr",{value:this[Ye].xrSystem,configurable:!0}),Object.defineProperty(navigator,"userAgent",{value:this[Ye].userAgent,writable:!1,configurable:!1,enumerable:!0}),e.XRSystem=XE,e.XRSession=jx,e.XRRenderState=p1,e.XRFrame=Pb,e.XRSpace=Fn,e.XRReferenceSpace=Il,e.XRJointSpace=Yx,e.XRView=Ab,e.XRViewport=cp,e.XRRigidTransform=Wm,e.XRPose=Xm,e.XRViewerPose=Cb,e.XRJointPose=Rb,e.XRInputSource=Gm,e.XRInputSourceArray=L6,e.XRHand=qx,e.XRLayer=Lb,e.XRWebGLLayer=q6,e.XRSessionEvent=Mm,e.XRInputSourceEvent=Qp,e.XRInputSourcesChangeEvent=wb,e.XRReferenceSpaceEvent=WE}installSyntheticEnvironmentModule(e){this[Ye].syntheticEnvironmentModule=e}get supportedSessionModes(){return this[Ye].supportedSessionModes}get supportedFeatures(){return this[Ye].supportedFeatures}get supportedFrameRates(){return this[Ye].supportedFrameRates}get isSystemKeyboardSupported(){return this[Ye].isSystemKeyboardSupported}get internalNominalFrameRate(){return this[Ye].internalNominalFrameRate}get stereoEnabled(){return this[Ye].stereoEnabled}set stereoEnabled(e){this[Ye].stereoEnabled=e}get ipd(){return this[Ye].ipd}set ipd(e){this[Ye].ipd=e}get fovy(){return this[Ye].fovy}set fovy(e){this[Ye].fovy=e}get position(){return this[Ye].position}get quaternion(){return this[Ye].quaternion}get viewerSpace(){var e;return!((e=this[Ye].actionPlayer)===null||e===void 0)&&e.playing?this[Ye].actionPlayer.viewerSpace:this[Ye].viewerSpace}get viewSpaces(){var e;return!((e=this[Ye].actionPlayer)===null||e===void 0)&&e.playing?this[Ye].actionPlayer.viewSpaces:this[Ye].viewSpaces}get controllers(){return this[Ye].controllers}get hands(){return this[Ye].hands}get primaryInputMode(){return this[Ye].primaryInputMode}set primaryInputMode(e){if(e!=="controller"&&e!=="hand"){console.warn('primary input mode can only be "controller" or "hand"');return}this[Ye].primaryInputMode=e}get activeInputs(){return this[Ye].visibilityState!=="visible"?[]:(this[Ye].primaryInputMode==="controller"?Object.values(this[Ye].controllers):Object.values(this[Ye].hands)).filter(t=>t.connected)}get inputSources(){var e;return!((e=this[Ye].actionPlayer)===null||e===void 0)&&e.playing?this[Ye].actionPlayer.inputSources:this.activeInputs.map(t=>t.inputSource)}get canvasContainer(){return this[Ye].canvasContainer}get canvasDimensions(){if(this[Ye].canvasData){const{width:e,height:t}=this[Ye].canvasData.canvas;return{width:e,height:t}}}get activeSession(){var e;return(e=this[Ye].xrSystem)===null||e===void 0?void 0:e[po].activeSession}recenter(){const e=new wl(-this.position.x,0,-this.position.z),t=new wl(0,0,-1).applyQuaternion(this.quaternion);t.y=0,t.normalize();const n=Math.atan2(t.x,-t.z),r=new th().setFromAxisAngle(new wl(0,1,0),n);this.position.add(e),this.quaternion.multiply(r),[...Object.values(this[Ye].controllers),...Object.values(this[Ye].hands)].forEach(s=>{s.position.add(e),s.quaternion.multiply(r),s.position.applyQuaternion(r)}),this[Ye].pendingReferenceSpaceReset=!0}get visibilityState(){return this[Ye].visibilityState}updateVisibilityState(e){if(!Object.values(["visible","visible-blurred","hidden"]).includes(e))throw new DOMException("Invalid XRVisibilityState value","NotSupportedError");e!==this[Ye].visibilityState&&(this[Ye].pendingVisibilityState=e)}createActionPlayer(e,t){return this[Ye].actionPlayer=new Y6(e,t,this[Ye].ipd),this[Ye].actionPlayer}get syntheticEnvironmentModule(){return this[Ye].syntheticEnvironmentModule}}const Q6={mapping:mh.XRStandard,buttons:[{id:"trigger",type:"analog",eventTrigger:"select"},{id:"squeeze",type:"analog",eventTrigger:"squeeze"},null,{id:"thumbstick",type:"binary"},{id:"x-button",type:"binary"},{id:"y-button",type:"binary"},{id:"thumbrest",type:"binary"}],axes:[null,null,{id:"thumbstick",type:"x-axis"},{id:"thumbstick",type:"y-axis"}]},J6={mapping:mh.XRStandard,buttons:[{id:"trigger",type:"analog",eventTrigger:"select"},{id:"squeeze",type:"analog",eventTrigger:"squeeze"},null,{id:"thumbstick",type:"binary"},{id:"a-button",type:"binary"},{id:"b-button",type:"binary"},{id:"thumbrest",type:"binary"}],axes:[null,null,{id:"thumbstick",type:"x-axis"},{id:"thumbstick",type:"y-axis"}]},eU={profileId:"meta-quest-touch-plus",fallbackProfileIds:["oculus-touch-v3","oculus-touch","generic-trigger-squeeze-thumbstick"],layout:{left:{gamepad:Q6,gripOffsetMatrix:[.9925461411476135,10736208366779465e-24,-.12186933308839798,0,.08617459982633591,.70710688829422,.7018360495567322,0,.08617466688156128,-.7071067094802856,.7018362283706665,0,-.003979803062975407,-.015857873484492302,.04964187368750572,1],numHapticActuators:1},right:{gamepad:J6,gripOffsetMatrix:[.9925461411476135,-26238110351073374e-24,.12186934053897858,0,-.0861746147274971,.7071067690849304,.7018360495567322,0,-.08617465943098068,-.7071067094802856,.701836109161377,0,.003979838453233242,-.015857869759202003,.04964182525873184,1],numHapticActuators:1}}};_s.Opaque,_s.AlphaBlend,vu.WorldSpace;_s.Opaque,_s.AlphaBlend,vu.WorldSpace;_s.Opaque,_s.AlphaBlend,vu.WorldSpace;const tU={name:"Meta Quest 3",controllerConfig:eU,supportedSessionModes:["inline","immersive-vr","immersive-ar"],supportedFeatures:["viewer","local","local-floor","bounded-floor","unbounded","anchors","plane-detection","mesh-detection","hit-test","hand-tracking","depth-sensing"],supportedFrameRates:[72,80,90,120],isSystemKeyboardSupported:!0,internalNominalFrameRate:90,environmentBlendModes:{"immersive-vr":_s.Opaque,"immersive-ar":_s.AlphaBlend},interactionMode:vu.WorldSpace,userAgent:"Mozilla/5.0 (X11; Linux x86_64; Quest 3) AppleWebKit/537.36 (KHTML, like Gecko) OculusBrowser/33.0.0.x.x.x Chrome/126.0.6478.122 VR Safari/537.36"};function Ib(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var y_={exports:{}},Lf={},S_={exports:{}},Xt={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var $E;function nU(){if($E)return Xt;$E=1;var i=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),n=Symbol.for("react.strict_mode"),r=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),o=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;function m(V){return V===null||typeof V!="object"?null:(V=p&&V[p]||V["@@iterator"],typeof V=="function"?V:null)}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y=Object.assign,S={};function _(V,de,Ge){this.props=V,this.context=de,this.refs=S,this.updater=Ge||v}_.prototype.isReactComponent={},_.prototype.setState=function(V,de){if(typeof V!="object"&&typeof V!="function"&&V!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,V,de,"setState")},_.prototype.forceUpdate=function(V){this.updater.enqueueForceUpdate(this,V,"forceUpdate")};function g(){}g.prototype=_.prototype;function b(V,de,Ge){this.props=V,this.context=de,this.refs=S,this.updater=Ge||v}var E=b.prototype=new g;E.constructor=b,y(E,_.prototype),E.isPureReactComponent=!0;var T=Array.isArray,L=Object.prototype.hasOwnProperty,C={current:null},P={key:!0,ref:!0,__self:!0,__source:!0};function N(V,de,Ge){var j,fe={},Re=null,Ee=null;if(de!=null)for(j in de.ref!==void 0&&(Ee=de.ref),de.key!==void 0&&(Re=""+de.key),de)L.call(de,j)&&!P.hasOwnProperty(j)&&(fe[j]=de[j]);var Fe=arguments.length-2;if(Fe===1)fe.children=Ge;else if(1<Fe){for(var He=Array(Fe),$e=0;$e<Fe;$e++)He[$e]=arguments[$e+2];fe.children=He}if(V&&V.defaultProps)for(j in Fe=V.defaultProps,Fe)fe[j]===void 0&&(fe[j]=Fe[j]);return{$$typeof:i,type:V,key:Re,ref:Ee,props:fe,_owner:C.current}}function A(V,de){return{$$typeof:i,type:V.type,key:de,ref:V.ref,props:V.props,_owner:V._owner}}function w(V){return typeof V=="object"&&V!==null&&V.$$typeof===i}function D(V){var de={"=":"=0",":":"=2"};return"$"+V.replace(/[=:]/g,function(Ge){return de[Ge]})}var X=/\/+/g;function z(V,de){return typeof V=="object"&&V!==null&&V.key!=null?D(""+V.key):de.toString(36)}function G(V,de,Ge,j,fe){var Re=typeof V;(Re==="undefined"||Re==="boolean")&&(V=null);var Ee=!1;if(V===null)Ee=!0;else switch(Re){case"string":case"number":Ee=!0;break;case"object":switch(V.$$typeof){case i:case e:Ee=!0}}if(Ee)return Ee=V,fe=fe(Ee),V=j===""?"."+z(Ee,0):j,T(fe)?(Ge="",V!=null&&(Ge=V.replace(X,"$&/")+"/"),G(fe,de,Ge,"",function($e){return $e})):fe!=null&&(w(fe)&&(fe=A(fe,Ge+(!fe.key||Ee&&Ee.key===fe.key?"":(""+fe.key).replace(X,"$&/")+"/")+V)),de.push(fe)),1;if(Ee=0,j=j===""?".":j+":",T(V))for(var Fe=0;Fe<V.length;Fe++){Re=V[Fe];var He=j+z(Re,Fe);Ee+=G(Re,de,Ge,He,fe)}else if(He=m(V),typeof He=="function")for(V=He.call(V),Fe=0;!(Re=V.next()).done;)Re=Re.value,He=j+z(Re,Fe++),Ee+=G(Re,de,Ge,He,fe);else if(Re==="object")throw de=String(V),Error("Objects are not valid as a React child (found: "+(de==="[object Object]"?"object with keys {"+Object.keys(V).join(", ")+"}":de)+"). If you meant to render a collection of children, use an array instead.");return Ee}function Z(V,de,Ge){if(V==null)return V;var j=[],fe=0;return G(V,j,"","",function(Re){return de.call(Ge,Re,fe++)}),j}function q(V){if(V._status===-1){var de=V._result;de=de(),de.then(function(Ge){(V._status===0||V._status===-1)&&(V._status=1,V._result=Ge)},function(Ge){(V._status===0||V._status===-1)&&(V._status=2,V._result=Ge)}),V._status===-1&&(V._status=0,V._result=de)}if(V._status===1)return V._result.default;throw V._result}var K={current:null},B={transition:null},ie={ReactCurrentDispatcher:K,ReactCurrentBatchConfig:B,ReactCurrentOwner:C};function oe(){throw Error("act(...) is not supported in production builds of React.")}return Xt.Children={map:Z,forEach:function(V,de,Ge){Z(V,function(){de.apply(this,arguments)},Ge)},count:function(V){var de=0;return Z(V,function(){de++}),de},toArray:function(V){return Z(V,function(de){return de})||[]},only:function(V){if(!w(V))throw Error("React.Children.only expected to receive a single React element child.");return V}},Xt.Component=_,Xt.Fragment=t,Xt.Profiler=r,Xt.PureComponent=b,Xt.StrictMode=n,Xt.Suspense=u,Xt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ie,Xt.act=oe,Xt.cloneElement=function(V,de,Ge){if(V==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+V+".");var j=y({},V.props),fe=V.key,Re=V.ref,Ee=V._owner;if(de!=null){if(de.ref!==void 0&&(Re=de.ref,Ee=C.current),de.key!==void 0&&(fe=""+de.key),V.type&&V.type.defaultProps)var Fe=V.type.defaultProps;for(He in de)L.call(de,He)&&!P.hasOwnProperty(He)&&(j[He]=de[He]===void 0&&Fe!==void 0?Fe[He]:de[He])}var He=arguments.length-2;if(He===1)j.children=Ge;else if(1<He){Fe=Array(He);for(var $e=0;$e<He;$e++)Fe[$e]=arguments[$e+2];j.children=Fe}return{$$typeof:i,type:V.type,key:fe,ref:Re,props:j,_owner:Ee}},Xt.createContext=function(V){return V={$$typeof:o,_currentValue:V,_currentValue2:V,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},V.Provider={$$typeof:s,_context:V},V.Consumer=V},Xt.createElement=N,Xt.createFactory=function(V){var de=N.bind(null,V);return de.type=V,de},Xt.createRef=function(){return{current:null}},Xt.forwardRef=function(V){return{$$typeof:c,render:V}},Xt.isValidElement=w,Xt.lazy=function(V){return{$$typeof:h,_payload:{_status:-1,_result:V},_init:q}},Xt.memo=function(V,de){return{$$typeof:f,type:V,compare:de===void 0?null:de}},Xt.startTransition=function(V){var de=B.transition;B.transition={};try{V()}finally{B.transition=de}},Xt.unstable_act=oe,Xt.useCallback=function(V,de){return K.current.useCallback(V,de)},Xt.useContext=function(V){return K.current.useContext(V)},Xt.useDebugValue=function(){},Xt.useDeferredValue=function(V){return K.current.useDeferredValue(V)},Xt.useEffect=function(V,de){return K.current.useEffect(V,de)},Xt.useId=function(){return K.current.useId()},Xt.useImperativeHandle=function(V,de,Ge){return K.current.useImperativeHandle(V,de,Ge)},Xt.useInsertionEffect=function(V,de){return K.current.useInsertionEffect(V,de)},Xt.useLayoutEffect=function(V,de){return K.current.useLayoutEffect(V,de)},Xt.useMemo=function(V,de){return K.current.useMemo(V,de)},Xt.useReducer=function(V,de,Ge){return K.current.useReducer(V,de,Ge)},Xt.useRef=function(V){return K.current.useRef(V)},Xt.useState=function(V){return K.current.useState(V)},Xt.useSyncExternalStore=function(V,de,Ge){return K.current.useSyncExternalStore(V,de,Ge)},Xt.useTransition=function(){return K.current.useTransition()},Xt.version="18.3.1",Xt}var jE;function Kx(){return jE||(jE=1,S_.exports=nU()),S_.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var qE;function iU(){if(qE)return Lf;qE=1;var i=Kx(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),n=Object.prototype.hasOwnProperty,r=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,s={key:!0,ref:!0,__self:!0,__source:!0};function o(c,u,f){var h,p={},m=null,v=null;f!==void 0&&(m=""+f),u.key!==void 0&&(m=""+u.key),u.ref!==void 0&&(v=u.ref);for(h in u)n.call(u,h)&&!s.hasOwnProperty(h)&&(p[h]=u[h]);if(c&&c.defaultProps)for(h in u=c.defaultProps,u)p[h]===void 0&&(p[h]=u[h]);return{$$typeof:e,type:c,key:m,ref:v,props:p,_owner:r.current}}return Lf.Fragment=t,Lf.jsx=o,Lf.jsxs=o,Lf}var YE;function rU(){return YE||(YE=1,y_.exports=iU()),y_.exports}var ae=rU();const KE=()=>{};let Zx={},Db={},Nb=null,Ub={mark:KE,measure:KE};try{typeof window<"u"&&(Zx=window),typeof document<"u"&&(Db=document),typeof MutationObserver<"u"&&(Nb=MutationObserver),typeof performance<"u"&&(Ub=performance)}catch{}const{userAgent:ZE=""}=Zx.navigator||{},Lo=Zx,Tn=Db,QE=Nb,up=Ub;Lo.document;const Pa=!!Tn.documentElement&&!!Tn.head&&typeof Tn.addEventListener=="function"&&typeof Tn.createElement=="function",Ob=~ZE.indexOf("MSIE")||~ZE.indexOf("Trident/");var Rn="classic",Fb="duotone",br="sharp",Ar="sharp-duotone",sU=[Rn,Fb,br,Ar],aU={classic:{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},sharp:{900:"fass",400:"fasr",300:"fasl",100:"fast"},"sharp-duotone":{900:"fasds"}},JE={kit:{fak:"kit","fa-kit":"kit"},"kit-duotone":{fakd:"kit-duotone","fa-kit-duotone":"kit-duotone"}},oU=["kit"],lU=/fa(s|r|l|t|d|b|k|kd|ss|sr|sl|st|sds)?[\-\ ]/,cU=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp Duotone|Sharp|Kit)?.*/i,uU={"Font Awesome 5 Free":{900:"fas",400:"far"},"Font Awesome 5 Pro":{900:"fas",400:"far",normal:"far",300:"fal"},"Font Awesome 5 Brands":{400:"fab",normal:"fab"},"Font Awesome 5 Duotone":{900:"fad"}},fU={"Font Awesome 6 Free":{900:"fas",400:"far"},"Font Awesome 6 Pro":{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"},"Font Awesome 6 Brands":{400:"fab",normal:"fab"},"Font Awesome 6 Duotone":{900:"fad"},"Font Awesome 6 Sharp":{900:"fass",400:"fasr",normal:"fasr",300:"fasl",100:"fast"},"Font Awesome 6 Sharp Duotone":{900:"fasds"}},hU={classic:{"fa-brands":"fab","fa-duotone":"fad","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"},sharp:{"fa-solid":"fass","fa-regular":"fasr","fa-light":"fasl","fa-thin":"fast"},"sharp-duotone":{"fa-solid":"fasds"}},dU={classic:["fas","far","fal","fat"],sharp:["fass","fasr","fasl","fast"],"sharp-duotone":["fasds"]},pU={classic:{fab:"fa-brands",fad:"fa-duotone",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"},sharp:{fass:"fa-solid",fasr:"fa-regular",fasl:"fa-light",fast:"fa-thin"},"sharp-duotone":{fasds:"fa-solid"}},mU={classic:{solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab"},sharp:{solid:"fass",regular:"fasr",light:"fasl",thin:"fast"},"sharp-duotone":{solid:"fasds"}},kb={classic:{fa:"solid",fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands"},sharp:{fa:"solid",fass:"solid","fa-solid":"solid",fasr:"regular","fa-regular":"regular",fasl:"light","fa-light":"light",fast:"thin","fa-thin":"thin"},"sharp-duotone":{fa:"solid",fasds:"solid","fa-solid":"solid"}},gU=["solid","regular","light","thin","duotone","brands"],Bb=[1,2,3,4,5,6,7,8,9,10],_U=Bb.concat([11,12,13,14,15,16,17,18,19,20]),Xf={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},vU=[...Object.keys(dU),...gU,"2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",Xf.GROUP,Xf.SWAP_OPACITY,Xf.PRIMARY,Xf.SECONDARY].concat(Bb.map(i=>"".concat(i,"x"))).concat(_U.map(i=>"w-".concat(i))),xU={"Font Awesome Kit":{400:"fak",normal:"fak"},"Font Awesome Kit Duotone":{400:"fakd",normal:"fakd"}},yU={kit:{"fa-kit":"fak"}},SU={kit:{fak:"fa-kit"}},eT={kit:{kit:"fak"},"kit-duotone":{"kit-duotone":"fakd"}};const Ea="___FONT_AWESOME___",m1=16,zb="fa",Hb="svg-inline--fa",Dl="data-fa-i2svg",g1="data-fa-pseudo-element",MU="data-fa-pseudo-element-pending",Qx="data-prefix",Jx="data-icon",tT="fontawesome-i2svg",EU="async",TU=["HTML","HEAD","STYLE","SCRIPT"],Vb=(()=>{try{return!0}catch{return!1}})(),Gb=[Rn,br,Ar];function Ah(i){return new Proxy(i,{get(e,t){return t in e?e[t]:e[Rn]}})}const Wb={...kb};Wb[Rn]={...kb[Rn],...JE.kit,...JE["kit-duotone"]};const bl=Ah(Wb),_1={...mU};_1[Rn]={..._1[Rn],...eT.kit,...eT["kit-duotone"]};const _h=Ah(_1),v1={...pU};v1[Rn]={...v1[Rn],...SU.kit};const Al=Ah(v1),x1={...hU};x1[Rn]={...x1[Rn],...yU.kit};const wU=Ah(x1),bU=lU,Xb="fa-layers-text",AU=cU,RU={...aU};Ah(RU);const CU=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],M_=Xf,xu=new Set;Object.keys(_h[Rn]).map(xu.add.bind(xu));Object.keys(_h[br]).map(xu.add.bind(xu));Object.keys(_h[Ar]).map(xu.add.bind(xu));const PU=[...oU,...vU],nh=Lo.FontAwesomeConfig||{};function LU(i){var e=Tn.querySelector("script["+i+"]");if(e)return e.getAttribute(i)}function IU(i){return i===""?!0:i==="false"?!1:i==="true"?!0:i}Tn&&typeof Tn.querySelector=="function"&&[["data-family-prefix","familyPrefix"],["data-css-prefix","cssPrefix"],["data-family-default","familyDefault"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach(e=>{let[t,n]=e;const r=IU(LU(t));r!=null&&(nh[n]=r)});const $b={styleDefault:"solid",familyDefault:"classic",cssPrefix:zb,replacementClass:Hb,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0};nh.familyPrefix&&(nh.cssPrefix=nh.familyPrefix);const yu={...$b,...nh};yu.autoReplaceSvg||(yu.observeMutations=!1);const xt={};Object.keys($b).forEach(i=>{Object.defineProperty(xt,i,{enumerable:!0,set:function(e){yu[i]=e,ih.forEach(t=>t(xt))},get:function(){return yu[i]}})});Object.defineProperty(xt,"familyPrefix",{enumerable:!0,set:function(i){yu.cssPrefix=i,ih.forEach(e=>e(xt))},get:function(){return yu.cssPrefix}});Lo.FontAwesomeConfig=xt;const ih=[];function DU(i){return ih.push(i),()=>{ih.splice(ih.indexOf(i),1)}}const io=m1,Ns={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};function NU(i){if(!i||!Pa)return;const e=Tn.createElement("style");e.setAttribute("type","text/css"),e.innerHTML=i;const t=Tn.head.childNodes;let n=null;for(let r=t.length-1;r>-1;r--){const s=t[r],o=(s.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(o)>-1&&(n=s)}return Tn.head.insertBefore(e,n),i}const UU="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function vh(){let i=12,e="";for(;i-- >0;)e+=UU[Math.random()*62|0];return e}function Ou(i){const e=[];for(let t=(i||[]).length>>>0;t--;)e[t]=i[t];return e}function ey(i){return i.classList?Ou(i.classList):(i.getAttribute("class")||"").split(" ").filter(e=>e)}function jb(i){return"".concat(i).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function OU(i){return Object.keys(i||{}).reduce((e,t)=>e+"".concat(t,'="').concat(jb(i[t]),'" '),"").trim()}function $m(i){return Object.keys(i||{}).reduce((e,t)=>e+"".concat(t,": ").concat(i[t].trim(),";"),"")}function ty(i){return i.size!==Ns.size||i.x!==Ns.x||i.y!==Ns.y||i.rotate!==Ns.rotate||i.flipX||i.flipY}function FU(i){let{transform:e,containerWidth:t,iconWidth:n}=i;const r={transform:"translate(".concat(t/2," 256)")},s="translate(".concat(e.x*32,", ").concat(e.y*32,") "),o="scale(".concat(e.size/16*(e.flipX?-1:1),", ").concat(e.size/16*(e.flipY?-1:1),") "),c="rotate(".concat(e.rotate," 0 0)"),u={transform:"".concat(s," ").concat(o," ").concat(c)},f={transform:"translate(".concat(n/2*-1," -256)")};return{outer:r,inner:u,path:f}}function kU(i){let{transform:e,width:t=m1,height:n=m1,startCentered:r=!1}=i,s="";return r&&Ob?s+="translate(".concat(e.x/io-t/2,"em, ").concat(e.y/io-n/2,"em) "):r?s+="translate(calc(-50% + ".concat(e.x/io,"em), calc(-50% + ").concat(e.y/io,"em)) "):s+="translate(".concat(e.x/io,"em, ").concat(e.y/io,"em) "),s+="scale(".concat(e.size/io*(e.flipX?-1:1),", ").concat(e.size/io*(e.flipY?-1:1),") "),s+="rotate(".concat(e.rotate,"deg) "),s}var BU=`:root, :host {
  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Free";
  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Free";
  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Pro";
  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Pro";
  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";
  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";
  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";
  --fa-font-sharp-duotone-solid: normal 900 1em/1 "Font Awesome 6 Sharp Duotone";
}

svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {
  overflow: visible;
  box-sizing: content-box;
}

.svg-inline--fa {
  display: var(--fa-display, inline-block);
  height: 1em;
  overflow: visible;
  vertical-align: -0.125em;
}
.svg-inline--fa.fa-2xs {
  vertical-align: 0.1em;
}
.svg-inline--fa.fa-xs {
  vertical-align: 0em;
}
.svg-inline--fa.fa-sm {
  vertical-align: -0.0714285705em;
}
.svg-inline--fa.fa-lg {
  vertical-align: -0.2em;
}
.svg-inline--fa.fa-xl {
  vertical-align: -0.25em;
}
.svg-inline--fa.fa-2xl {
  vertical-align: -0.3125em;
}
.svg-inline--fa.fa-pull-left {
  margin-right: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-pull-right {
  margin-left: var(--fa-pull-margin, 0.3em);
  width: auto;
}
.svg-inline--fa.fa-li {
  width: var(--fa-li-width, 2em);
  top: 0.25em;
}
.svg-inline--fa.fa-fw {
  width: var(--fa-fw-width, 1.25em);
}

.fa-layers svg.svg-inline--fa {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
}

.fa-layers-counter, .fa-layers-text {
  display: inline-block;
  position: absolute;
  text-align: center;
}

.fa-layers {
  display: inline-block;
  height: 1em;
  position: relative;
  text-align: center;
  vertical-align: -0.125em;
  width: 1em;
}
.fa-layers svg.svg-inline--fa {
  transform-origin: center center;
}

.fa-layers-text {
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  transform-origin: center center;
}

.fa-layers-counter {
  background-color: var(--fa-counter-background-color, #ff253a);
  border-radius: var(--fa-counter-border-radius, 1em);
  box-sizing: border-box;
  color: var(--fa-inverse, #fff);
  line-height: var(--fa-counter-line-height, 1);
  max-width: var(--fa-counter-max-width, 5em);
  min-width: var(--fa-counter-min-width, 1.5em);
  overflow: hidden;
  padding: var(--fa-counter-padding, 0.25em 0.5em);
  right: var(--fa-right, 0);
  text-overflow: ellipsis;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-counter-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-bottom-right {
  bottom: var(--fa-bottom, 0);
  right: var(--fa-right, 0);
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom right;
}

.fa-layers-bottom-left {
  bottom: var(--fa-bottom, 0);
  left: var(--fa-left, 0);
  right: auto;
  top: auto;
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: bottom left;
}

.fa-layers-top-right {
  top: var(--fa-top, 0);
  right: var(--fa-right, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top right;
}

.fa-layers-top-left {
  left: var(--fa-left, 0);
  right: auto;
  top: var(--fa-top, 0);
  transform: scale(var(--fa-layers-scale, 0.25));
  transform-origin: top left;
}

.fa-1x {
  font-size: 1em;
}

.fa-2x {
  font-size: 2em;
}

.fa-3x {
  font-size: 3em;
}

.fa-4x {
  font-size: 4em;
}

.fa-5x {
  font-size: 5em;
}

.fa-6x {
  font-size: 6em;
}

.fa-7x {
  font-size: 7em;
}

.fa-8x {
  font-size: 8em;
}

.fa-9x {
  font-size: 9em;
}

.fa-10x {
  font-size: 10em;
}

.fa-2xs {
  font-size: 0.625em;
  line-height: 0.1em;
  vertical-align: 0.225em;
}

.fa-xs {
  font-size: 0.75em;
  line-height: 0.0833333337em;
  vertical-align: 0.125em;
}

.fa-sm {
  font-size: 0.875em;
  line-height: 0.0714285718em;
  vertical-align: 0.0535714295em;
}

.fa-lg {
  font-size: 1.25em;
  line-height: 0.05em;
  vertical-align: -0.075em;
}

.fa-xl {
  font-size: 1.5em;
  line-height: 0.0416666682em;
  vertical-align: -0.125em;
}

.fa-2xl {
  font-size: 2em;
  line-height: 0.03125em;
  vertical-align: -0.1875em;
}

.fa-fw {
  text-align: center;
  width: 1.25em;
}

.fa-ul {
  list-style-type: none;
  margin-left: var(--fa-li-margin, 2.5em);
  padding-left: 0;
}
.fa-ul > li {
  position: relative;
}

.fa-li {
  left: calc(-1 * var(--fa-li-width, 2em));
  position: absolute;
  text-align: center;
  width: var(--fa-li-width, 2em);
  line-height: inherit;
}

.fa-border {
  border-color: var(--fa-border-color, #eee);
  border-radius: var(--fa-border-radius, 0.1em);
  border-style: var(--fa-border-style, solid);
  border-width: var(--fa-border-width, 0.08em);
  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);
}

.fa-pull-left {
  float: left;
  margin-right: var(--fa-pull-margin, 0.3em);
}

.fa-pull-right {
  float: right;
  margin-left: var(--fa-pull-margin, 0.3em);
}

.fa-beat {
  animation-name: fa-beat;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-bounce {
  animation-name: fa-bounce;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));
}

.fa-fade {
  animation-name: fa-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-beat-fade {
  animation-name: fa-beat-fade;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));
}

.fa-flip {
  animation-name: fa-flip;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, ease-in-out);
}

.fa-shake {
  animation-name: fa-shake;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin {
  animation-name: fa-spin;
  animation-delay: var(--fa-animation-delay, 0s);
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 2s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, linear);
}

.fa-spin-reverse {
  --fa-animation-direction: reverse;
}

.fa-pulse,
.fa-spin-pulse {
  animation-name: fa-spin;
  animation-direction: var(--fa-animation-direction, normal);
  animation-duration: var(--fa-animation-duration, 1s);
  animation-iteration-count: var(--fa-animation-iteration-count, infinite);
  animation-timing-function: var(--fa-animation-timing, steps(8));
}

@media (prefers-reduced-motion: reduce) {
  .fa-beat,
.fa-bounce,
.fa-fade,
.fa-beat-fade,
.fa-flip,
.fa-pulse,
.fa-shake,
.fa-spin,
.fa-spin-pulse {
    animation-delay: -1ms;
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-delay: 0s;
    transition-duration: 0s;
  }
}
@keyframes fa-beat {
  0%, 90% {
    transform: scale(1);
  }
  45% {
    transform: scale(var(--fa-beat-scale, 1.25));
  }
}
@keyframes fa-bounce {
  0% {
    transform: scale(1, 1) translateY(0);
  }
  10% {
    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);
  }
  30% {
    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));
  }
  50% {
    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);
  }
  57% {
    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));
  }
  64% {
    transform: scale(1, 1) translateY(0);
  }
  100% {
    transform: scale(1, 1) translateY(0);
  }
}
@keyframes fa-fade {
  50% {
    opacity: var(--fa-fade-opacity, 0.4);
  }
}
@keyframes fa-beat-fade {
  0%, 100% {
    opacity: var(--fa-beat-fade-opacity, 0.4);
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(var(--fa-beat-fade-scale, 1.125));
  }
}
@keyframes fa-flip {
  50% {
    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));
  }
}
@keyframes fa-shake {
  0% {
    transform: rotate(-15deg);
  }
  4% {
    transform: rotate(15deg);
  }
  8%, 24% {
    transform: rotate(-18deg);
  }
  12%, 28% {
    transform: rotate(18deg);
  }
  16% {
    transform: rotate(-22deg);
  }
  20% {
    transform: rotate(22deg);
  }
  32% {
    transform: rotate(-12deg);
  }
  36% {
    transform: rotate(12deg);
  }
  40%, 100% {
    transform: rotate(0deg);
  }
}
@keyframes fa-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.fa-rotate-90 {
  transform: rotate(90deg);
}

.fa-rotate-180 {
  transform: rotate(180deg);
}

.fa-rotate-270 {
  transform: rotate(270deg);
}

.fa-flip-horizontal {
  transform: scale(-1, 1);
}

.fa-flip-vertical {
  transform: scale(1, -1);
}

.fa-flip-both,
.fa-flip-horizontal.fa-flip-vertical {
  transform: scale(-1, -1);
}

.fa-rotate-by {
  transform: rotate(var(--fa-rotate-angle, 0));
}

.fa-stack {
  display: inline-block;
  vertical-align: middle;
  height: 2em;
  position: relative;
  width: 2.5em;
}

.fa-stack-1x,
.fa-stack-2x {
  bottom: 0;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  z-index: var(--fa-stack-z-index, auto);
}

.svg-inline--fa.fa-stack-1x {
  height: 1em;
  width: 1.25em;
}
.svg-inline--fa.fa-stack-2x {
  height: 2em;
  width: 2.5em;
}

.fa-inverse {
  color: var(--fa-inverse, #fff);
}

.sr-only,
.fa-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sr-only-focusable:not(:focus),
.fa-sr-only-focusable:not(:focus) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.svg-inline--fa .fa-primary {
  fill: var(--fa-primary-color, currentColor);
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa .fa-secondary {
  fill: var(--fa-secondary-color, currentColor);
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-primary {
  opacity: var(--fa-secondary-opacity, 0.4);
}

.svg-inline--fa.fa-swap-opacity .fa-secondary {
  opacity: var(--fa-primary-opacity, 1);
}

.svg-inline--fa mask .fa-primary,
.svg-inline--fa mask .fa-secondary {
  fill: black;
}

.fad.fa-inverse,
.fa-duotone.fa-inverse {
  color: var(--fa-inverse, #fff);
}`;function qb(){const i=zb,e=Hb,t=xt.cssPrefix,n=xt.replacementClass;let r=BU;if(t!==i||n!==e){const s=new RegExp("\\.".concat(i,"\\-"),"g"),o=new RegExp("\\--".concat(i,"\\-"),"g"),c=new RegExp("\\.".concat(e),"g");r=r.replace(s,".".concat(t,"-")).replace(o,"--".concat(t,"-")).replace(c,".".concat(n))}return r}let nT=!1;function E_(){xt.autoAddCss&&!nT&&(NU(qb()),nT=!0)}var zU={mixout(){return{dom:{css:qb,insertCss:E_}}},hooks(){return{beforeDOMElementCreation(){E_()},beforeI2svg(){E_()}}}};const Ta=Lo||{};Ta[Ea]||(Ta[Ea]={});Ta[Ea].styles||(Ta[Ea].styles={});Ta[Ea].hooks||(Ta[Ea].hooks={});Ta[Ea].shims||(Ta[Ea].shims=[]);var Us=Ta[Ea];const Yb=[],Kb=function(){Tn.removeEventListener("DOMContentLoaded",Kb),Em=1,Yb.map(i=>i())};let Em=!1;Pa&&(Em=(Tn.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(Tn.readyState),Em||Tn.addEventListener("DOMContentLoaded",Kb));function HU(i){Pa&&(Em?setTimeout(i,0):Yb.push(i))}function Rh(i){const{tag:e,attributes:t={},children:n=[]}=i;return typeof i=="string"?jb(i):"<".concat(e," ").concat(OU(t),">").concat(n.map(Rh).join(""),"</").concat(e,">")}function iT(i,e,t){if(i&&i[e]&&i[e][t])return{prefix:e,iconName:t,icon:i[e][t]}}var T_=function(e,t,n,r){var s=Object.keys(e),o=s.length,c=t,u,f,h;for(n===void 0?(u=1,h=e[s[0]]):(u=0,h=n);u<o;u++)f=s[u],h=c(h,e[f],f,e);return h};function VU(i){const e=[];let t=0;const n=i.length;for(;t<n;){const r=i.charCodeAt(t++);if(r>=55296&&r<=56319&&t<n){const s=i.charCodeAt(t++);(s&64512)==56320?e.push(((r&1023)<<10)+(s&1023)+65536):(e.push(r),t--)}else e.push(r)}return e}function y1(i){const e=VU(i);return e.length===1?e[0].toString(16):null}function GU(i,e){const t=i.length;let n=i.charCodeAt(e),r;return n>=55296&&n<=56319&&t>e+1&&(r=i.charCodeAt(e+1),r>=56320&&r<=57343)?(n-55296)*1024+r-56320+65536:n}function rT(i){return Object.keys(i).reduce((e,t)=>{const n=i[t];return!!n.icon?e[n.iconName]=n.icon:e[t]=n,e},{})}function S1(i,e){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const{skipHooks:n=!1}=t,r=rT(e);typeof Us.hooks.addPack=="function"&&!n?Us.hooks.addPack(i,rT(e)):Us.styles[i]={...Us.styles[i]||{},...r},i==="fas"&&S1("fa",e)}const{styles:_l,shims:WU}=Us,XU={[Rn]:Object.values(Al[Rn]),[br]:Object.values(Al[br]),[Ar]:Object.values(Al[Ar])};let ny=null,Zb={},Qb={},Jb={},eA={},tA={};const $U={[Rn]:Object.keys(bl[Rn]),[br]:Object.keys(bl[br]),[Ar]:Object.keys(bl[Ar])};function jU(i){return~PU.indexOf(i)}function qU(i,e){const t=e.split("-"),n=t[0],r=t.slice(1).join("-");return n===i&&r!==""&&!jU(r)?r:null}const nA=()=>{const i=n=>T_(_l,(r,s,o)=>(r[o]=T_(s,n,{}),r),{});Zb=i((n,r,s)=>(r[3]&&(n[r[3]]=s),r[2]&&r[2].filter(c=>typeof c=="number").forEach(c=>{n[c.toString(16)]=s}),n)),Qb=i((n,r,s)=>(n[s]=s,r[2]&&r[2].filter(c=>typeof c=="string").forEach(c=>{n[c]=s}),n)),tA=i((n,r,s)=>{const o=r[2];return n[s]=s,o.forEach(c=>{n[c]=s}),n});const e="far"in _l||xt.autoFetchSvg,t=T_(WU,(n,r)=>{const s=r[0];let o=r[1];const c=r[2];return o==="far"&&!e&&(o="fas"),typeof s=="string"&&(n.names[s]={prefix:o,iconName:c}),typeof s=="number"&&(n.unicodes[s.toString(16)]={prefix:o,iconName:c}),n},{names:{},unicodes:{}});Jb=t.names,eA=t.unicodes,ny=jm(xt.styleDefault,{family:xt.familyDefault})};DU(i=>{ny=jm(i.styleDefault,{family:xt.familyDefault})});nA();function iy(i,e){return(Zb[i]||{})[e]}function YU(i,e){return(Qb[i]||{})[e]}function To(i,e){return(tA[i]||{})[e]}function iA(i){return Jb[i]||{prefix:null,iconName:null}}function KU(i){const e=eA[i],t=iy("fas",i);return e||(t?{prefix:"fas",iconName:t}:null)||{prefix:null,iconName:null}}function Io(){return ny}const ry=()=>({prefix:null,iconName:null,rest:[]});function jm(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{family:t=Rn}=e,n=bl[t][i],r=_h[t][i]||_h[t][n],s=i in Us.styles?i:null;return r||s||null}const ZU={[Rn]:Object.keys(Al[Rn]),[br]:Object.keys(Al[br]),[Ar]:Object.keys(Al[Ar])};function qm(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{skipLookups:t=!1}=e,n={[Rn]:"".concat(xt.cssPrefix,"-").concat(Rn),[br]:"".concat(xt.cssPrefix,"-").concat(br),[Ar]:"".concat(xt.cssPrefix,"-").concat(Ar)};let r=null,s=Rn;const o=sU.filter(u=>u!==Fb);o.forEach(u=>{(i.includes(n[u])||i.some(f=>ZU[u].includes(f)))&&(s=u)});const c=i.reduce((u,f)=>{const h=qU(xt.cssPrefix,f);if(_l[f]?(f=XU[s].includes(f)?wU[s][f]:f,r=f,u.prefix=f):$U[s].indexOf(f)>-1?(r=f,u.prefix=jm(f,{family:s})):h?u.iconName=h:f!==xt.replacementClass&&!o.some(p=>f===n[p])&&u.rest.push(f),!t&&u.prefix&&u.iconName){const p=r==="fa"?iA(u.iconName):{},m=To(u.prefix,u.iconName);p.prefix&&(r=null),u.iconName=p.iconName||m||u.iconName,u.prefix=p.prefix||u.prefix,u.prefix==="far"&&!_l.far&&_l.fas&&!xt.autoFetchSvg&&(u.prefix="fas")}return u},ry());return(i.includes("fa-brands")||i.includes("fab"))&&(c.prefix="fab"),(i.includes("fa-duotone")||i.includes("fad"))&&(c.prefix="fad"),!c.prefix&&s===br&&(_l.fass||xt.autoFetchSvg)&&(c.prefix="fass",c.iconName=To(c.prefix,c.iconName)||c.iconName),!c.prefix&&s===Ar&&(_l.fasds||xt.autoFetchSvg)&&(c.prefix="fasds",c.iconName=To(c.prefix,c.iconName)||c.iconName),(c.prefix==="fa"||r==="fa")&&(c.prefix=Io()||"fas"),c}class QU{constructor(){this.definitions={}}add(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];const r=t.reduce(this._pullDefinitions,{});Object.keys(r).forEach(s=>{this.definitions[s]={...this.definitions[s]||{},...r[s]},S1(s,r[s]);const o=Al[Rn][s];o&&S1(o,r[s]),nA()})}reset(){this.definitions={}}_pullDefinitions(e,t){const n=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(n).map(r=>{const{prefix:s,iconName:o,icon:c}=n[r],u=c[2];e[s]||(e[s]={}),u.length>0&&u.forEach(f=>{typeof f=="string"&&(e[s][f]=c)}),e[s][o]=c}),e}}let sT=[],$c={};const nu={},JU=Object.keys(nu);function e8(i,e){let{mixoutsTo:t}=e;return sT=i,$c={},Object.keys(nu).forEach(n=>{JU.indexOf(n)===-1&&delete nu[n]}),sT.forEach(n=>{const r=n.mixout?n.mixout():{};if(Object.keys(r).forEach(s=>{typeof r[s]=="function"&&(t[s]=r[s]),typeof r[s]=="object"&&Object.keys(r[s]).forEach(o=>{t[s]||(t[s]={}),t[s][o]=r[s][o]})}),n.hooks){const s=n.hooks();Object.keys(s).forEach(o=>{$c[o]||($c[o]=[]),$c[o].push(s[o])})}n.provides&&n.provides(nu)}),t}function M1(i,e){for(var t=arguments.length,n=new Array(t>2?t-2:0),r=2;r<t;r++)n[r-2]=arguments[r];return($c[i]||[]).forEach(o=>{e=o.apply(null,[e,...n])}),e}function Nl(i){for(var e=arguments.length,t=new Array(e>1?e-1:0),n=1;n<e;n++)t[n-1]=arguments[n];($c[i]||[]).forEach(s=>{s.apply(null,t)})}function Do(){const i=arguments[0],e=Array.prototype.slice.call(arguments,1);return nu[i]?nu[i].apply(null,e):void 0}function E1(i){i.prefix==="fa"&&(i.prefix="fas");let{iconName:e}=i;const t=i.prefix||Io();if(e)return e=To(t,e)||e,iT(rA.definitions,t,e)||iT(Us.styles,t,e)}const rA=new QU,t8=()=>{xt.autoReplaceSvg=!1,xt.observeMutations=!1,Nl("noAuto")},n8={i2svg:function(){let i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};return Pa?(Nl("beforeI2svg",i),Do("pseudoElements2svg",i),Do("i2svg",i)):Promise.reject(new Error("Operation requires a DOM of some kind."))},watch:function(){let i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const{autoReplaceSvgRoot:e}=i;xt.autoReplaceSvg===!1&&(xt.autoReplaceSvg=!0),xt.observeMutations=!0,HU(()=>{r8({autoReplaceSvgRoot:e}),Nl("watch",i)})}},i8={icon:i=>{if(i===null)return null;if(typeof i=="object"&&i.prefix&&i.iconName)return{prefix:i.prefix,iconName:To(i.prefix,i.iconName)||i.iconName};if(Array.isArray(i)&&i.length===2){const e=i[1].indexOf("fa-")===0?i[1].slice(3):i[1],t=jm(i[0]);return{prefix:t,iconName:To(t,e)||e}}if(typeof i=="string"&&(i.indexOf("".concat(xt.cssPrefix,"-"))>-1||i.match(bU))){const e=qm(i.split(" "),{skipLookups:!0});return{prefix:e.prefix||Io(),iconName:To(e.prefix,e.iconName)||e.iconName}}if(typeof i=="string"){const e=Io();return{prefix:e,iconName:To(e,i)||i}}}},Rr={noAuto:t8,config:xt,dom:n8,parse:i8,library:rA,findIconDefinition:E1,toHtml:Rh},r8=function(){let i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const{autoReplaceSvgRoot:e=Tn}=i;(Object.keys(Us.styles).length>0||xt.autoFetchSvg)&&Pa&&xt.autoReplaceSvg&&Rr.dom.i2svg({node:e})};function Ym(i,e){return Object.defineProperty(i,"abstract",{get:e}),Object.defineProperty(i,"html",{get:function(){return i.abstract.map(t=>Rh(t))}}),Object.defineProperty(i,"node",{get:function(){if(!Pa)return;const t=Tn.createElement("div");return t.innerHTML=i.html,t.children}}),i}function s8(i){let{children:e,main:t,mask:n,attributes:r,styles:s,transform:o}=i;if(ty(o)&&t.found&&!n.found){const{width:c,height:u}=t,f={x:c/u/2,y:.5};r.style=$m({...s,"transform-origin":"".concat(f.x+o.x/16,"em ").concat(f.y+o.y/16,"em")})}return[{tag:"svg",attributes:r,children:e}]}function a8(i){let{prefix:e,iconName:t,children:n,attributes:r,symbol:s}=i;const o=s===!0?"".concat(e,"-").concat(xt.cssPrefix,"-").concat(t):s;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:{...r,id:o},children:n}]}]}function sy(i){const{icons:{main:e,mask:t},prefix:n,iconName:r,transform:s,symbol:o,title:c,maskId:u,titleId:f,extra:h,watchable:p=!1}=i,{width:m,height:v}=t.found?t:e,y=n==="fak",S=[xt.replacementClass,r?"".concat(xt.cssPrefix,"-").concat(r):""].filter(L=>h.classes.indexOf(L)===-1).filter(L=>L!==""||!!L).concat(h.classes).join(" ");let _={children:[],attributes:{...h.attributes,"data-prefix":n,"data-icon":r,class:S,role:h.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(m," ").concat(v)}};const g=y&&!~h.classes.indexOf("fa-fw")?{width:"".concat(m/v*16*.0625,"em")}:{};p&&(_.attributes[Dl]=""),c&&(_.children.push({tag:"title",attributes:{id:_.attributes["aria-labelledby"]||"title-".concat(f||vh())},children:[c]}),delete _.attributes.title);const b={..._,prefix:n,iconName:r,main:e,mask:t,maskId:u,transform:s,symbol:o,styles:{...g,...h.styles}},{children:E,attributes:T}=t.found&&e.found?Do("generateAbstractMask",b)||{children:[],attributes:{}}:Do("generateAbstractIcon",b)||{children:[],attributes:{}};return b.children=E,b.attributes=T,o?a8(b):s8(b)}function aT(i){const{content:e,width:t,height:n,transform:r,title:s,extra:o,watchable:c=!1}=i,u={...o.attributes,...s?{title:s}:{},class:o.classes.join(" ")};c&&(u[Dl]="");const f={...o.styles};ty(r)&&(f.transform=kU({transform:r,startCentered:!0,width:t,height:n}),f["-webkit-transform"]=f.transform);const h=$m(f);h.length>0&&(u.style=h);const p=[];return p.push({tag:"span",attributes:u,children:[e]}),s&&p.push({tag:"span",attributes:{class:"sr-only"},children:[s]}),p}function o8(i){const{content:e,title:t,extra:n}=i,r={...n.attributes,...t?{title:t}:{},class:n.classes.join(" ")},s=$m(n.styles);s.length>0&&(r.style=s);const o=[];return o.push({tag:"span",attributes:r,children:[e]}),t&&o.push({tag:"span",attributes:{class:"sr-only"},children:[t]}),o}const{styles:w_}=Us;function T1(i){const e=i[0],t=i[1],[n]=i.slice(4);let r=null;return Array.isArray(n)?r={tag:"g",attributes:{class:"".concat(xt.cssPrefix,"-").concat(M_.GROUP)},children:[{tag:"path",attributes:{class:"".concat(xt.cssPrefix,"-").concat(M_.SECONDARY),fill:"currentColor",d:n[0]}},{tag:"path",attributes:{class:"".concat(xt.cssPrefix,"-").concat(M_.PRIMARY),fill:"currentColor",d:n[1]}}]}:r={tag:"path",attributes:{fill:"currentColor",d:n}},{found:!0,width:e,height:t,icon:r}}const l8={found:!1,width:512,height:512};function c8(i,e){!Vb&&!xt.showMissingIcons&&i&&console.error('Icon with name "'.concat(i,'" and prefix "').concat(e,'" is missing.'))}function w1(i,e){let t=e;return e==="fa"&&xt.styleDefault!==null&&(e=Io()),new Promise((n,r)=>{if(t==="fa"){const s=iA(i)||{};i=s.iconName||i,e=s.prefix||e}if(i&&e&&w_[e]&&w_[e][i]){const s=w_[e][i];return n(T1(s))}c8(i,e),n({...l8,icon:xt.showMissingIcons&&i?Do("missingIconAbstract")||{}:{}})})}const oT=()=>{},b1=xt.measurePerformance&&up&&up.mark&&up.measure?up:{mark:oT,measure:oT},$f='FA "6.6.0"',u8=i=>(b1.mark("".concat($f," ").concat(i," begins")),()=>sA(i)),sA=i=>{b1.mark("".concat($f," ").concat(i," ends")),b1.measure("".concat($f," ").concat(i),"".concat($f," ").concat(i," begins"),"".concat($f," ").concat(i," ends"))};var ay={begin:u8,end:sA};const Jp=()=>{};function lT(i){return typeof(i.getAttribute?i.getAttribute(Dl):null)=="string"}function f8(i){const e=i.getAttribute?i.getAttribute(Qx):null,t=i.getAttribute?i.getAttribute(Jx):null;return e&&t}function h8(i){return i&&i.classList&&i.classList.contains&&i.classList.contains(xt.replacementClass)}function d8(){return xt.autoReplaceSvg===!0?em.replace:em[xt.autoReplaceSvg]||em.replace}function p8(i){return Tn.createElementNS("http://www.w3.org/2000/svg",i)}function m8(i){return Tn.createElement(i)}function aA(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{ceFn:t=i.tag==="svg"?p8:m8}=e;if(typeof i=="string")return Tn.createTextNode(i);const n=t(i.tag);return Object.keys(i.attributes||[]).forEach(function(s){n.setAttribute(s,i.attributes[s])}),(i.children||[]).forEach(function(s){n.appendChild(aA(s,{ceFn:t}))}),n}function g8(i){let e=" ".concat(i.outerHTML," ");return e="".concat(e,"Font Awesome fontawesome.com "),e}const em={replace:function(i){const e=i[0];if(e.parentNode)if(i[1].forEach(t=>{e.parentNode.insertBefore(aA(t),e)}),e.getAttribute(Dl)===null&&xt.keepOriginalSource){let t=Tn.createComment(g8(e));e.parentNode.replaceChild(t,e)}else e.remove()},nest:function(i){const e=i[0],t=i[1];if(~ey(e).indexOf(xt.replacementClass))return em.replace(i);const n=new RegExp("".concat(xt.cssPrefix,"-.*"));if(delete t[0].attributes.id,t[0].attributes.class){const s=t[0].attributes.class.split(" ").reduce((o,c)=>(c===xt.replacementClass||c.match(n)?o.toSvg.push(c):o.toNode.push(c),o),{toNode:[],toSvg:[]});t[0].attributes.class=s.toSvg.join(" "),s.toNode.length===0?e.removeAttribute("class"):e.setAttribute("class",s.toNode.join(" "))}const r=t.map(s=>Rh(s)).join(`
`);e.setAttribute(Dl,""),e.innerHTML=r}};function cT(i){i()}function oA(i,e){const t=typeof e=="function"?e:Jp;if(i.length===0)t();else{let n=cT;xt.mutateApproach===EU&&(n=Lo.requestAnimationFrame||cT),n(()=>{const r=d8(),s=ay.begin("mutate");i.map(r),s(),t()})}}let oy=!1;function lA(){oy=!0}function A1(){oy=!1}let Tm=null;function uT(i){if(!QE||!xt.observeMutations)return;const{treeCallback:e=Jp,nodeCallback:t=Jp,pseudoElementsCallback:n=Jp,observeMutationsRoot:r=Tn}=i;Tm=new QE(s=>{if(oy)return;const o=Io();Ou(s).forEach(c=>{if(c.type==="childList"&&c.addedNodes.length>0&&!lT(c.addedNodes[0])&&(xt.searchPseudoElements&&n(c.target),e(c.target)),c.type==="attributes"&&c.target.parentNode&&xt.searchPseudoElements&&n(c.target.parentNode),c.type==="attributes"&&lT(c.target)&&~CU.indexOf(c.attributeName))if(c.attributeName==="class"&&f8(c.target)){const{prefix:u,iconName:f}=qm(ey(c.target));c.target.setAttribute(Qx,u||o),f&&c.target.setAttribute(Jx,f)}else h8(c.target)&&t(c.target)})}),Pa&&Tm.observe(r,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}function _8(){Tm&&Tm.disconnect()}function v8(i){const e=i.getAttribute("style");let t=[];return e&&(t=e.split(";").reduce((n,r)=>{const s=r.split(":"),o=s[0],c=s.slice(1);return o&&c.length>0&&(n[o]=c.join(":").trim()),n},{})),t}function x8(i){const e=i.getAttribute("data-prefix"),t=i.getAttribute("data-icon"),n=i.innerText!==void 0?i.innerText.trim():"";let r=qm(ey(i));return r.prefix||(r.prefix=Io()),e&&t&&(r.prefix=e,r.iconName=t),r.iconName&&r.prefix||(r.prefix&&n.length>0&&(r.iconName=YU(r.prefix,i.innerText)||iy(r.prefix,y1(i.innerText))),!r.iconName&&xt.autoFetchSvg&&i.firstChild&&i.firstChild.nodeType===Node.TEXT_NODE&&(r.iconName=i.firstChild.data)),r}function y8(i){const e=Ou(i.attributes).reduce((r,s)=>(r.name!=="class"&&r.name!=="style"&&(r[s.name]=s.value),r),{}),t=i.getAttribute("title"),n=i.getAttribute("data-fa-title-id");return xt.autoA11y&&(t?e["aria-labelledby"]="".concat(xt.replacementClass,"-title-").concat(n||vh()):(e["aria-hidden"]="true",e.focusable="false")),e}function S8(){return{iconName:null,title:null,titleId:null,prefix:null,transform:Ns,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}}}function fT(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{styleParser:!0};const{iconName:t,prefix:n,rest:r}=x8(i),s=y8(i),o=M1("parseNodeAttributes",{},i);let c=e.styleParser?v8(i):[];return{iconName:t,title:i.getAttribute("title"),titleId:i.getAttribute("data-fa-title-id"),prefix:n,transform:Ns,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:r,styles:c,attributes:s},...o}}const{styles:M8}=Us;function cA(i){const e=xt.autoReplaceSvg==="nest"?fT(i,{styleParser:!1}):fT(i);return~e.extra.classes.indexOf(Xb)?Do("generateLayersText",i,e):Do("generateSvgReplacementMutation",i,e)}let zs=new Set;Gb.map(i=>{zs.add("fa-".concat(i))});Object.keys(bl[Rn]).map(zs.add.bind(zs));Object.keys(bl[br]).map(zs.add.bind(zs));Object.keys(bl[Ar]).map(zs.add.bind(zs));zs=[...zs];function hT(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(!Pa)return Promise.resolve();const t=Tn.documentElement.classList,n=h=>t.add("".concat(tT,"-").concat(h)),r=h=>t.remove("".concat(tT,"-").concat(h)),s=xt.autoFetchSvg?zs:Gb.map(h=>"fa-".concat(h)).concat(Object.keys(M8));s.includes("fa")||s.push("fa");const o=[".".concat(Xb,":not([").concat(Dl,"])")].concat(s.map(h=>".".concat(h,":not([").concat(Dl,"])"))).join(", ");if(o.length===0)return Promise.resolve();let c=[];try{c=Ou(i.querySelectorAll(o))}catch{}if(c.length>0)n("pending"),r("complete");else return Promise.resolve();const u=ay.begin("onTree"),f=c.reduce((h,p)=>{try{const m=cA(p);m&&h.push(m)}catch(m){Vb||m.name==="MissingIcon"&&console.error(m)}return h},[]);return new Promise((h,p)=>{Promise.all(f).then(m=>{oA(m,()=>{n("active"),n("complete"),r("pending"),typeof e=="function"&&e(),u(),h()})}).catch(m=>{u(),p(m)})})}function E8(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;cA(i).then(t=>{t&&oA([t],e)})}function T8(i){return function(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const n=(e||{}).icon?e:E1(e||{});let{mask:r}=t;return r&&(r=(r||{}).icon?r:E1(r||{})),i(n,{...t,mask:r})}}const w8=function(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{transform:t=Ns,symbol:n=!1,mask:r=null,maskId:s=null,title:o=null,titleId:c=null,classes:u=[],attributes:f={},styles:h={}}=e;if(!i)return;const{prefix:p,iconName:m,icon:v}=i;return Ym({type:"icon",...i},()=>(Nl("beforeDOMElementCreation",{iconDefinition:i,params:e}),xt.autoA11y&&(o?f["aria-labelledby"]="".concat(xt.replacementClass,"-title-").concat(c||vh()):(f["aria-hidden"]="true",f.focusable="false")),sy({icons:{main:T1(v),mask:r?T1(r.icon):{found:!1,width:null,height:null,icon:{}}},prefix:p,iconName:m,transform:{...Ns,...t},symbol:n,title:o,maskId:s,titleId:c,extra:{attributes:f,styles:h,classes:u}})))};var b8={mixout(){return{icon:T8(w8)}},hooks(){return{mutationObserverCallbacks(i){return i.treeCallback=hT,i.nodeCallback=E8,i}}},provides(i){i.i2svg=function(e){const{node:t=Tn,callback:n=()=>{}}=e;return hT(t,n)},i.generateSvgReplacementMutation=function(e,t){const{iconName:n,title:r,titleId:s,prefix:o,transform:c,symbol:u,mask:f,maskId:h,extra:p}=t;return new Promise((m,v)=>{Promise.all([w1(n,o),f.iconName?w1(f.iconName,f.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then(y=>{let[S,_]=y;m([e,sy({icons:{main:S,mask:_},prefix:o,iconName:n,transform:c,symbol:u,maskId:h,title:r,titleId:s,extra:p,watchable:!0})])}).catch(v)})},i.generateAbstractIcon=function(e){let{children:t,attributes:n,main:r,transform:s,styles:o}=e;const c=$m(o);c.length>0&&(n.style=c);let u;return ty(s)&&(u=Do("generateAbstractTransformGrouping",{main:r,transform:s,containerWidth:r.width,iconWidth:r.width})),t.push(u||r.icon),{children:t,attributes:n}}}},A8={mixout(){return{layer(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{classes:t=[]}=e;return Ym({type:"layer"},()=>{Nl("beforeDOMElementCreation",{assembler:i,params:e});let n=[];return i(r=>{Array.isArray(r)?r.map(s=>{n=n.concat(s.abstract)}):n=n.concat(r.abstract)}),[{tag:"span",attributes:{class:["".concat(xt.cssPrefix,"-layers"),...t].join(" ")},children:n}]})}}}},R8={mixout(){return{counter(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{title:t=null,classes:n=[],attributes:r={},styles:s={}}=e;return Ym({type:"counter",content:i},()=>(Nl("beforeDOMElementCreation",{content:i,params:e}),o8({content:i.toString(),title:t,extra:{attributes:r,styles:s,classes:["".concat(xt.cssPrefix,"-layers-counter"),...n]}})))}}}},C8={mixout(){return{text(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const{transform:t=Ns,title:n=null,classes:r=[],attributes:s={},styles:o={}}=e;return Ym({type:"text",content:i},()=>(Nl("beforeDOMElementCreation",{content:i,params:e}),aT({content:i,transform:{...Ns,...t},title:n,extra:{attributes:s,styles:o,classes:["".concat(xt.cssPrefix,"-layers-text"),...r]}})))}}},provides(i){i.generateLayersText=function(e,t){const{title:n,transform:r,extra:s}=t;let o=null,c=null;if(Ob){const u=parseInt(getComputedStyle(e).fontSize,10),f=e.getBoundingClientRect();o=f.width/u,c=f.height/u}return xt.autoA11y&&!n&&(s.attributes["aria-hidden"]="true"),Promise.resolve([e,aT({content:e.innerHTML,width:o,height:c,transform:r,title:n,extra:s,watchable:!0})])}}};const P8=new RegExp('"',"ug"),dT=[1105920,1112319],pT={FontAwesome:{normal:"fas",400:"fas"},...fU,...uU,...xU},R1=Object.keys(pT).reduce((i,e)=>(i[e.toLowerCase()]=pT[e],i),{}),L8=Object.keys(R1).reduce((i,e)=>{const t=R1[e];return i[e]=t[900]||[...Object.entries(t)][0][1],i},{});function I8(i){const e=i.replace(P8,""),t=GU(e,0),n=t>=dT[0]&&t<=dT[1],r=e.length===2?e[0]===e[1]:!1;return{value:y1(r?e[0]:e),isSecondary:n||r}}function D8(i,e){const t=i.replace(/^['"]|['"]$/g,"").toLowerCase(),n=parseInt(e),r=isNaN(n)?"normal":n;return(R1[t]||{})[r]||L8[t]}function mT(i,e){const t="".concat(MU).concat(e.replace(":","-"));return new Promise((n,r)=>{if(i.getAttribute(t)!==null)return n();const o=Ou(i.children).filter(m=>m.getAttribute(g1)===e)[0],c=Lo.getComputedStyle(i,e),u=c.getPropertyValue("font-family"),f=u.match(AU),h=c.getPropertyValue("font-weight"),p=c.getPropertyValue("content");if(o&&!f)return i.removeChild(o),n();if(f&&p!=="none"&&p!==""){const m=c.getPropertyValue("content");let v=D8(u,h);const{value:y,isSecondary:S}=I8(m),_=f[0].startsWith("FontAwesome");let g=iy(v,y),b=g;if(_){const E=KU(y);E.iconName&&E.prefix&&(g=E.iconName,v=E.prefix)}if(g&&!S&&(!o||o.getAttribute(Qx)!==v||o.getAttribute(Jx)!==b)){i.setAttribute(t,b),o&&i.removeChild(o);const E=S8(),{extra:T}=E;T.attributes[g1]=e,w1(g,v).then(L=>{const C=sy({...E,icons:{main:L,mask:ry()},prefix:v,iconName:b,extra:T,watchable:!0}),P=Tn.createElementNS("http://www.w3.org/2000/svg","svg");e==="::before"?i.insertBefore(P,i.firstChild):i.appendChild(P),P.outerHTML=C.map(N=>Rh(N)).join(`
`),i.removeAttribute(t),n()}).catch(r)}else n()}else n()})}function N8(i){return Promise.all([mT(i,"::before"),mT(i,"::after")])}function U8(i){return i.parentNode!==document.head&&!~TU.indexOf(i.tagName.toUpperCase())&&!i.getAttribute(g1)&&(!i.parentNode||i.parentNode.tagName!=="svg")}function gT(i){if(Pa)return new Promise((e,t)=>{const n=Ou(i.querySelectorAll("*")).filter(U8).map(N8),r=ay.begin("searchPseudoElements");lA(),Promise.all(n).then(()=>{r(),A1(),e()}).catch(()=>{r(),A1(),t()})})}var O8={hooks(){return{mutationObserverCallbacks(i){return i.pseudoElementsCallback=gT,i}}},provides(i){i.pseudoElements2svg=function(e){const{node:t=Tn}=e;xt.searchPseudoElements&&gT(t)}}};let _T=!1;var F8={mixout(){return{dom:{unwatch(){lA(),_T=!0}}}},hooks(){return{bootstrap(){uT(M1("mutationObserverCallbacks",{}))},noAuto(){_8()},watch(i){const{observeMutationsRoot:e}=i;_T?A1():uT(M1("mutationObserverCallbacks",{observeMutationsRoot:e}))}}}};const vT=i=>{let e={size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0};return i.toLowerCase().split(" ").reduce((t,n)=>{const r=n.toLowerCase().split("-"),s=r[0];let o=r.slice(1).join("-");if(s&&o==="h")return t.flipX=!0,t;if(s&&o==="v")return t.flipY=!0,t;if(o=parseFloat(o),isNaN(o))return t;switch(s){case"grow":t.size=t.size+o;break;case"shrink":t.size=t.size-o;break;case"left":t.x=t.x-o;break;case"right":t.x=t.x+o;break;case"up":t.y=t.y-o;break;case"down":t.y=t.y+o;break;case"rotate":t.rotate=t.rotate+o;break}return t},e)};var k8={mixout(){return{parse:{transform:i=>vT(i)}}},hooks(){return{parseNodeAttributes(i,e){const t=e.getAttribute("data-fa-transform");return t&&(i.transform=vT(t)),i}}},provides(i){i.generateAbstractTransformGrouping=function(e){let{main:t,transform:n,containerWidth:r,iconWidth:s}=e;const o={transform:"translate(".concat(r/2," 256)")},c="translate(".concat(n.x*32,", ").concat(n.y*32,") "),u="scale(".concat(n.size/16*(n.flipX?-1:1),", ").concat(n.size/16*(n.flipY?-1:1),") "),f="rotate(".concat(n.rotate," 0 0)"),h={transform:"".concat(c," ").concat(u," ").concat(f)},p={transform:"translate(".concat(s/2*-1," -256)")},m={outer:o,inner:h,path:p};return{tag:"g",attributes:{...m.outer},children:[{tag:"g",attributes:{...m.inner},children:[{tag:t.icon.tag,children:t.icon.children,attributes:{...t.icon.attributes,...m.path}}]}]}}}};const b_={x:0,y:0,width:"100%",height:"100%"};function xT(i){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return i.attributes&&(i.attributes.fill||e)&&(i.attributes.fill="black"),i}function B8(i){return i.tag==="g"?i.children:[i]}var z8={hooks(){return{parseNodeAttributes(i,e){const t=e.getAttribute("data-fa-mask"),n=t?qm(t.split(" ").map(r=>r.trim())):ry();return n.prefix||(n.prefix=Io()),i.mask=n,i.maskId=e.getAttribute("data-fa-mask-id"),i}}},provides(i){i.generateAbstractMask=function(e){let{children:t,attributes:n,main:r,mask:s,maskId:o,transform:c}=e;const{width:u,icon:f}=r,{width:h,icon:p}=s,m=FU({transform:c,containerWidth:h,iconWidth:u}),v={tag:"rect",attributes:{...b_,fill:"white"}},y=f.children?{children:f.children.map(xT)}:{},S={tag:"g",attributes:{...m.inner},children:[xT({tag:f.tag,attributes:{...f.attributes,...m.path},...y})]},_={tag:"g",attributes:{...m.outer},children:[S]},g="mask-".concat(o||vh()),b="clip-".concat(o||vh()),E={tag:"mask",attributes:{...b_,id:g,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"},children:[v,_]},T={tag:"defs",children:[{tag:"clipPath",attributes:{id:b},children:B8(p)},E]};return t.push(T,{tag:"rect",attributes:{fill:"currentColor","clip-path":"url(#".concat(b,")"),mask:"url(#".concat(g,")"),...b_}}),{children:t,attributes:n}}}},H8={provides(i){let e=!1;Lo.matchMedia&&(e=Lo.matchMedia("(prefers-reduced-motion: reduce)").matches),i.missingIconAbstract=function(){const t=[],n={fill:"currentColor"},r={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};t.push({tag:"path",attributes:{...n,d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"}});const s={...r,attributeName:"opacity"},o={tag:"circle",attributes:{...n,cx:"256",cy:"364",r:"28"},children:[]};return e||o.children.push({tag:"animate",attributes:{...r,attributeName:"r",values:"28;14;28;28;14;28;"}},{tag:"animate",attributes:{...s,values:"1;0;1;1;0;1;"}}),t.push(o),t.push({tag:"path",attributes:{...n,opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"},children:e?[]:[{tag:"animate",attributes:{...s,values:"1;0;0;0;0;1;"}}]}),e||t.push({tag:"path",attributes:{...n,opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"},children:[{tag:"animate",attributes:{...s,values:"0;0;1;1;0;0;"}}]}),{tag:"g",attributes:{class:"missing"},children:t}}}},V8={hooks(){return{parseNodeAttributes(i,e){const t=e.getAttribute("data-fa-symbol"),n=t===null?!1:t===""?!0:t;return i.symbol=n,i}}}},G8=[zU,b8,A8,R8,C8,O8,F8,k8,z8,H8,V8];e8(G8,{mixoutsTo:Rr});Rr.noAuto;Rr.config;Rr.library;Rr.dom;const C1=Rr.parse;Rr.findIconDefinition;Rr.toHtml;const W8=Rr.icon;Rr.layer;Rr.text;Rr.counter;var A_={exports:{}},R_,yT;function X8(){if(yT)return R_;yT=1;var i="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";return R_=i,R_}var C_,ST;function $8(){if(ST)return C_;ST=1;var i=X8();function e(){}function t(){}return t.resetWarningCache=e,C_=function(){function n(o,c,u,f,h,p){if(p!==i){var m=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw m.name="Invariant Violation",m}}n.isRequired=n;function r(){return n}var s={array:n,bigint:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:r,element:n,elementType:n,instanceOf:r,node:n,objectOf:r,oneOf:r,oneOfType:r,shape:r,exact:r,checkPropTypes:t,resetWarningCache:e};return s.PropTypes=s,s},C_}var MT;function j8(){return MT||(MT=1,A_.exports=$8()()),A_.exports}var q8=j8();const jt=Ib(q8);var en=Kx();const Ul=Ib(en);function ET(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter(function(r){return Object.getOwnPropertyDescriptor(i,r).enumerable})),t.push.apply(t,n)}return t}function Rs(i){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?ET(Object(t),!0).forEach(function(n){jc(i,n,t[n])}):Object.getOwnPropertyDescriptors?Object.defineProperties(i,Object.getOwnPropertyDescriptors(t)):ET(Object(t)).forEach(function(n){Object.defineProperty(i,n,Object.getOwnPropertyDescriptor(t,n))})}return i}function wm(i){"@babel/helpers - typeof";return wm=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},wm(i)}function jc(i,e,t){return e in i?Object.defineProperty(i,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):i[e]=t,i}function Y8(i,e){if(i==null)return{};var t={},n=Object.keys(i),r,s;for(s=0;s<n.length;s++)r=n[s],!(e.indexOf(r)>=0)&&(t[r]=i[r]);return t}function K8(i,e){if(i==null)return{};var t=Y8(i,e),n,r;if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(i);for(r=0;r<s.length;r++)n=s[r],!(e.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(i,n)&&(t[n]=i[n])}return t}function P1(i){return Z8(i)||Q8(i)||J8(i)||eO()}function Z8(i){if(Array.isArray(i))return L1(i)}function Q8(i){if(typeof Symbol<"u"&&i[Symbol.iterator]!=null||i["@@iterator"]!=null)return Array.from(i)}function J8(i,e){if(i){if(typeof i=="string")return L1(i,e);var t=Object.prototype.toString.call(i).slice(8,-1);if(t==="Object"&&i.constructor&&(t=i.constructor.name),t==="Map"||t==="Set")return Array.from(i);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return L1(i,e)}}function L1(i,e){(e==null||e>i.length)&&(e=i.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=i[t];return n}function eO(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function tO(i){var e,t=i.beat,n=i.fade,r=i.beatFade,s=i.bounce,o=i.shake,c=i.flash,u=i.spin,f=i.spinPulse,h=i.spinReverse,p=i.pulse,m=i.fixedWidth,v=i.inverse,y=i.border,S=i.listItem,_=i.flip,g=i.size,b=i.rotation,E=i.pull,T=(e={"fa-beat":t,"fa-fade":n,"fa-beat-fade":r,"fa-bounce":s,"fa-shake":o,"fa-flash":c,"fa-spin":u,"fa-spin-reverse":h,"fa-spin-pulse":f,"fa-pulse":p,"fa-fw":m,"fa-inverse":v,"fa-border":y,"fa-li":S,"fa-flip":_===!0,"fa-flip-horizontal":_==="horizontal"||_==="both","fa-flip-vertical":_==="vertical"||_==="both"},jc(e,"fa-".concat(g),typeof g<"u"&&g!==null),jc(e,"fa-rotate-".concat(b),typeof b<"u"&&b!==null&&b!==0),jc(e,"fa-pull-".concat(E),typeof E<"u"&&E!==null),jc(e,"fa-swap-opacity",i.swapOpacity),e);return Object.keys(T).map(function(L){return T[L]?L:null}).filter(function(L){return L})}function nO(i){return i=i-0,i===i}function uA(i){return nO(i)?i:(i=i.replace(/[\-_\s]+(.)?/g,function(e,t){return t?t.toUpperCase():""}),i.substr(0,1).toLowerCase()+i.substr(1))}var iO=["style"];function rO(i){return i.charAt(0).toUpperCase()+i.slice(1)}function sO(i){return i.split(";").map(function(e){return e.trim()}).filter(function(e){return e}).reduce(function(e,t){var n=t.indexOf(":"),r=uA(t.slice(0,n)),s=t.slice(n+1).trim();return r.startsWith("webkit")?e[rO(r)]=s:e[r]=s,e},{})}function fA(i,e){var t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};if(typeof e=="string")return e;var n=(e.children||[]).map(function(u){return fA(i,u)}),r=Object.keys(e.attributes||{}).reduce(function(u,f){var h=e.attributes[f];switch(f){case"class":u.attrs.className=h,delete e.attributes.class;break;case"style":u.attrs.style=sO(h);break;default:f.indexOf("aria-")===0||f.indexOf("data-")===0?u.attrs[f.toLowerCase()]=h:u.attrs[uA(f)]=h}return u},{attrs:{}}),s=t.style,o=s===void 0?{}:s,c=K8(t,iO);return r.attrs.style=Rs(Rs({},r.attrs.style),o),i.apply(void 0,[e.tag,Rs(Rs({},r.attrs),c)].concat(P1(n)))}var hA=!1;try{hA=!0}catch{}function aO(){if(!hA&&console&&typeof console.error=="function"){var i;(i=console).error.apply(i,arguments)}}function TT(i){if(i&&wm(i)==="object"&&i.prefix&&i.iconName&&i.icon)return i;if(C1.icon)return C1.icon(i);if(i===null)return null;if(i&&wm(i)==="object"&&i.prefix&&i.iconName)return i;if(Array.isArray(i)&&i.length===2)return{prefix:i[0],iconName:i[1]};if(typeof i=="string")return{prefix:"fas",iconName:i}}function P_(i,e){return Array.isArray(e)&&e.length>0||!Array.isArray(e)&&e?jc({},i,e):{}}var wT={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1},xh=Ul.forwardRef(function(i,e){var t=Rs(Rs({},wT),i),n=t.icon,r=t.mask,s=t.symbol,o=t.className,c=t.title,u=t.titleId,f=t.maskId,h=TT(n),p=P_("classes",[].concat(P1(tO(t)),P1((o||"").split(" ")))),m=P_("transform",typeof t.transform=="string"?C1.transform(t.transform):t.transform),v=P_("mask",TT(r)),y=W8(h,Rs(Rs(Rs(Rs({},p),m),v),{},{symbol:s,title:c,titleId:u,maskId:f}));if(!y)return aO("Could not find icon",h),null;var S=y.abstract,_={ref:e};return Object.keys(t).forEach(function(g){wT.hasOwnProperty(g)||(_[g]=t[g])}),oO(S[0],_)});xh.displayName="FontAwesomeIcon";xh.propTypes={beat:jt.bool,border:jt.bool,beatFade:jt.bool,bounce:jt.bool,className:jt.string,fade:jt.bool,flash:jt.bool,mask:jt.oneOfType([jt.object,jt.array,jt.string]),maskId:jt.string,fixedWidth:jt.bool,inverse:jt.bool,flip:jt.oneOf([!0,!1,"horizontal","vertical","both"]),icon:jt.oneOfType([jt.object,jt.array,jt.string]),listItem:jt.bool,pull:jt.oneOf(["right","left"]),pulse:jt.bool,rotation:jt.oneOf([0,90,180,270]),shake:jt.bool,size:jt.oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:jt.bool,spinPulse:jt.bool,spinReverse:jt.bool,symbol:jt.oneOfType([jt.bool,jt.string]),title:jt.string,titleId:jt.string,transform:jt.oneOfType([jt.string,jt.object]),swapOpacity:jt.bool};var oO=fA.bind(null,Ul.createElement),or=function(){return or=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++){t=arguments[n];for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s])}return e},or.apply(this,arguments)};function bm(i,e,t){if(t||arguments.length===2)for(var n=0,r=e.length,s;n<r;n++)(s||!(n in e))&&(s||(s=Array.prototype.slice.call(e,0,n)),s[n]=e[n]);return i.concat(s||Array.prototype.slice.call(e))}var Sn="-ms-",rh="-moz-",sn="-webkit-",dA="comm",Km="rule",ly="decl",lO="@import",pA="@keyframes",cO="@layer",mA=Math.abs,cy=String.fromCharCode,I1=Object.assign;function uO(i,e){return di(i,0)^45?(((e<<2^di(i,0))<<2^di(i,1))<<2^di(i,2))<<2^di(i,3):0}function gA(i){return i.trim()}function ha(i,e){return(i=e.exec(i))?i[0]:i}function Bt(i,e,t){return i.replace(e,t)}function tm(i,e,t){return i.indexOf(e,t)}function di(i,e){return i.charCodeAt(e)|0}function Su(i,e,t){return i.slice(e,t)}function Cs(i){return i.length}function _A(i){return i.length}function jf(i,e){return e.push(i),i}function fO(i,e){return i.map(e).join("")}function bT(i,e){return i.filter(function(t){return!ha(t,e)})}var Zm=1,Mu=1,vA=0,Yr=0,jn=0,Fu="";function Qm(i,e,t,n,r,s,o,c){return{value:i,root:e,parent:t,type:n,props:r,children:s,line:Zm,column:Mu,length:o,return:"",siblings:c}}function go(i,e){return I1(Qm("",null,null,"",null,null,0,i.siblings),i,{length:-i.length},e)}function wc(i){for(;i.root;)i=go(i.root,{children:[i]});jf(i,i.siblings)}function hO(){return jn}function dO(){return jn=Yr>0?di(Fu,--Yr):0,Mu--,jn===10&&(Mu=1,Zm--),jn}function gs(){return jn=Yr<vA?di(Fu,Yr++):0,Mu++,jn===10&&(Mu=1,Zm++),jn}function Rl(){return di(Fu,Yr)}function nm(){return Yr}function Jm(i,e){return Su(Fu,i,e)}function D1(i){switch(i){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function pO(i){return Zm=Mu=1,vA=Cs(Fu=i),Yr=0,[]}function mO(i){return Fu="",i}function L_(i){return gA(Jm(Yr-1,N1(i===91?i+2:i===40?i+1:i)))}function gO(i){for(;(jn=Rl())&&jn<33;)gs();return D1(i)>2||D1(jn)>3?"":" "}function _O(i,e){for(;--e&&gs()&&!(jn<48||jn>102||jn>57&&jn<65||jn>70&&jn<97););return Jm(i,nm()+(e<6&&Rl()==32&&gs()==32))}function N1(i){for(;gs();)switch(jn){case i:return Yr;case 34:case 39:i!==34&&i!==39&&N1(jn);break;case 40:i===41&&N1(i);break;case 92:gs();break}return Yr}function vO(i,e){for(;gs()&&i+jn!==57;)if(i+jn===84&&Rl()===47)break;return"/*"+Jm(e,Yr-1)+"*"+cy(i===47?i:gs())}function xO(i){for(;!D1(Rl());)gs();return Jm(i,Yr)}function yO(i){return mO(im("",null,null,null,[""],i=pO(i),0,[0],i))}function im(i,e,t,n,r,s,o,c,u){for(var f=0,h=0,p=o,m=0,v=0,y=0,S=1,_=1,g=1,b=0,E="",T=r,L=s,C=n,P=E;_;)switch(y=b,b=gs()){case 40:if(y!=108&&di(P,p-1)==58){tm(P+=Bt(L_(b),"&","&\f"),"&\f",mA(f?c[f-1]:0))!=-1&&(g=-1);break}case 34:case 39:case 91:P+=L_(b);break;case 9:case 10:case 13:case 32:P+=gO(y);break;case 92:P+=_O(nm()-1,7);continue;case 47:switch(Rl()){case 42:case 47:jf(SO(vO(gs(),nm()),e,t,u),u);break;default:P+="/"}break;case 123*S:c[f++]=Cs(P)*g;case 125*S:case 59:case 0:switch(b){case 0:case 125:_=0;case 59+h:g==-1&&(P=Bt(P,/\f/g,"")),v>0&&Cs(P)-p&&jf(v>32?RT(P+";",n,t,p-1,u):RT(Bt(P," ","")+";",n,t,p-2,u),u);break;case 59:P+=";";default:if(jf(C=AT(P,e,t,f,h,r,c,E,T=[],L=[],p,s),s),b===123)if(h===0)im(P,e,C,C,T,s,p,c,L);else switch(m===99&&di(P,3)===110?100:m){case 100:case 108:case 109:case 115:im(i,C,C,n&&jf(AT(i,C,C,0,0,r,c,E,r,T=[],p,L),L),r,L,p,c,n?T:L);break;default:im(P,C,C,C,[""],L,0,c,L)}}f=h=v=0,S=g=1,E=P="",p=o;break;case 58:p=1+Cs(P),v=y;default:if(S<1){if(b==123)--S;else if(b==125&&S++==0&&dO()==125)continue}switch(P+=cy(b),b*S){case 38:g=h>0?1:(P+="\f",-1);break;case 44:c[f++]=(Cs(P)-1)*g,g=1;break;case 64:Rl()===45&&(P+=L_(gs())),m=Rl(),h=p=Cs(E=P+=xO(nm())),b++;break;case 45:y===45&&Cs(P)==2&&(S=0)}}return s}function AT(i,e,t,n,r,s,o,c,u,f,h,p){for(var m=r-1,v=r===0?s:[""],y=_A(v),S=0,_=0,g=0;S<n;++S)for(var b=0,E=Su(i,m+1,m=mA(_=o[S])),T=i;b<y;++b)(T=gA(_>0?v[b]+" "+E:Bt(E,/&\f/g,v[b])))&&(u[g++]=T);return Qm(i,e,t,r===0?Km:c,u,f,h,p)}function SO(i,e,t,n){return Qm(i,e,t,dA,cy(hO()),Su(i,2,-2),0,n)}function RT(i,e,t,n,r){return Qm(i,e,t,ly,Su(i,0,n),Su(i,n+1,-1),n,r)}function xA(i,e,t){switch(uO(i,e)){case 5103:return sn+"print-"+i+i;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return sn+i+i;case 4789:return rh+i+i;case 5349:case 4246:case 4810:case 6968:case 2756:return sn+i+rh+i+Sn+i+i;case 5936:switch(di(i,e+11)){case 114:return sn+i+Sn+Bt(i,/[svh]\w+-[tblr]{2}/,"tb")+i;case 108:return sn+i+Sn+Bt(i,/[svh]\w+-[tblr]{2}/,"tb-rl")+i;case 45:return sn+i+Sn+Bt(i,/[svh]\w+-[tblr]{2}/,"lr")+i}case 6828:case 4268:case 2903:return sn+i+Sn+i+i;case 6165:return sn+i+Sn+"flex-"+i+i;case 5187:return sn+i+Bt(i,/(\w+).+(:[^]+)/,sn+"box-$1$2"+Sn+"flex-$1$2")+i;case 5443:return sn+i+Sn+"flex-item-"+Bt(i,/flex-|-self/g,"")+(ha(i,/flex-|baseline/)?"":Sn+"grid-row-"+Bt(i,/flex-|-self/g,""))+i;case 4675:return sn+i+Sn+"flex-line-pack"+Bt(i,/align-content|flex-|-self/g,"")+i;case 5548:return sn+i+Sn+Bt(i,"shrink","negative")+i;case 5292:return sn+i+Sn+Bt(i,"basis","preferred-size")+i;case 6060:return sn+"box-"+Bt(i,"-grow","")+sn+i+Sn+Bt(i,"grow","positive")+i;case 4554:return sn+Bt(i,/([^-])(transform)/g,"$1"+sn+"$2")+i;case 6187:return Bt(Bt(Bt(i,/(zoom-|grab)/,sn+"$1"),/(image-set)/,sn+"$1"),i,"")+i;case 5495:case 3959:return Bt(i,/(image-set\([^]*)/,sn+"$1$`$1");case 4968:return Bt(Bt(i,/(.+:)(flex-)?(.*)/,sn+"box-pack:$3"+Sn+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+sn+i+i;case 4200:if(!ha(i,/flex-|baseline/))return Sn+"grid-column-align"+Su(i,e)+i;break;case 2592:case 3360:return Sn+Bt(i,"template-","")+i;case 4384:case 3616:return t&&t.some(function(n,r){return e=r,ha(n.props,/grid-\w+-end/)})?~tm(i+(t=t[e].value),"span",0)?i:Sn+Bt(i,"-start","")+i+Sn+"grid-row-span:"+(~tm(t,"span",0)?ha(t,/\d+/):+ha(t,/\d+/)-+ha(i,/\d+/))+";":Sn+Bt(i,"-start","")+i;case 4896:case 4128:return t&&t.some(function(n){return ha(n.props,/grid-\w+-start/)})?i:Sn+Bt(Bt(i,"-end","-span"),"span ","")+i;case 4095:case 3583:case 4068:case 2532:return Bt(i,/(.+)-inline(.+)/,sn+"$1$2")+i;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Cs(i)-1-e>6)switch(di(i,e+1)){case 109:if(di(i,e+4)!==45)break;case 102:return Bt(i,/(.+:)(.+)-([^]+)/,"$1"+sn+"$2-$3$1"+rh+(di(i,e+3)==108?"$3":"$2-$3"))+i;case 115:return~tm(i,"stretch",0)?xA(Bt(i,"stretch","fill-available"),e,t)+i:i}break;case 5152:case 5920:return Bt(i,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,function(n,r,s,o,c,u,f){return Sn+r+":"+s+f+(o?Sn+r+"-span:"+(c?u:+u-+s)+f:"")+i});case 4949:if(di(i,e+6)===121)return Bt(i,":",":"+sn)+i;break;case 6444:switch(di(i,di(i,14)===45?18:11)){case 120:return Bt(i,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+sn+(di(i,14)===45?"inline-":"")+"box$3$1"+sn+"$2$3$1"+Sn+"$2box$3")+i;case 100:return Bt(i,":",":"+Sn)+i}break;case 5719:case 2647:case 2135:case 3927:case 2391:return Bt(i,"scroll-","scroll-snap-")+i}return i}function Am(i,e){for(var t="",n=0;n<i.length;n++)t+=e(i[n],n,i,e)||"";return t}function MO(i,e,t,n){switch(i.type){case cO:if(i.children.length)break;case lO:case ly:return i.return=i.return||i.value;case dA:return"";case pA:return i.return=i.value+"{"+Am(i.children,n)+"}";case Km:if(!Cs(i.value=i.props.join(",")))return""}return Cs(t=Am(i.children,n))?i.return=i.value+"{"+t+"}":""}function EO(i){var e=_A(i);return function(t,n,r,s){for(var o="",c=0;c<e;c++)o+=i[c](t,n,r,s)||"";return o}}function TO(i){return function(e){e.root||(e=e.return)&&i(e)}}function wO(i,e,t,n){if(i.length>-1&&!i.return)switch(i.type){case ly:i.return=xA(i.value,i.length,t);return;case pA:return Am([go(i,{value:Bt(i.value,"@","@"+sn)})],n);case Km:if(i.length)return fO(t=i.props,function(r){switch(ha(r,n=/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":wc(go(i,{props:[Bt(r,/:(read-\w+)/,":"+rh+"$1")]})),wc(go(i,{props:[r]})),I1(i,{props:bT(t,n)});break;case"::placeholder":wc(go(i,{props:[Bt(r,/:(plac\w+)/,":"+sn+"input-$1")]})),wc(go(i,{props:[Bt(r,/:(plac\w+)/,":"+rh+"$1")]})),wc(go(i,{props:[Bt(r,/:(plac\w+)/,Sn+"input-$1")]})),wc(go(i,{props:[r]})),I1(i,{props:bT(t,n)});break}return""})}}var bO={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},Tr={},Eu=typeof process<"u"&&Tr!==void 0&&(Tr.REACT_APP_SC_ATTR||Tr.SC_ATTR)||"data-styled",yA="active",SA="data-styled-version",e0="6.1.13",uy=`/*!sc*/
`,Rm=typeof window<"u"&&"HTMLElement"in window,AO=!!(typeof SC_DISABLE_SPEEDY=="boolean"?SC_DISABLE_SPEEDY:typeof process<"u"&&Tr!==void 0&&Tr.REACT_APP_SC_DISABLE_SPEEDY!==void 0&&Tr.REACT_APP_SC_DISABLE_SPEEDY!==""?Tr.REACT_APP_SC_DISABLE_SPEEDY!=="false"&&Tr.REACT_APP_SC_DISABLE_SPEEDY:typeof process<"u"&&Tr!==void 0&&Tr.SC_DISABLE_SPEEDY!==void 0&&Tr.SC_DISABLE_SPEEDY!==""&&Tr.SC_DISABLE_SPEEDY!=="false"&&Tr.SC_DISABLE_SPEEDY),t0=Object.freeze([]),Tu=Object.freeze({});function RO(i,e,t){return t===void 0&&(t=Tu),i.theme!==t.theme&&i.theme||e||t.theme}var MA=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),CO=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,PO=/(^-|-$)/g;function CT(i){return i.replace(CO,"-").replace(PO,"")}var LO=/(a)(d)/gi,fp=52,PT=function(i){return String.fromCharCode(i+(i>25?39:97))};function U1(i){var e,t="";for(e=Math.abs(i);e>fp;e=e/fp|0)t=PT(e%fp)+t;return(PT(e%fp)+t).replace(LO,"$1-$2")}var I_,EA=5381,qc=function(i,e){for(var t=e.length;t;)i=33*i^e.charCodeAt(--t);return i},TA=function(i){return qc(EA,i)};function IO(i){return U1(TA(i)>>>0)}function DO(i){return i.displayName||i.name||"Component"}function D_(i){return typeof i=="string"&&!0}var wA=typeof Symbol=="function"&&Symbol.for,bA=wA?Symbol.for("react.memo"):60115,NO=wA?Symbol.for("react.forward_ref"):60112,UO={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},OO={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},AA={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},FO=((I_={})[NO]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},I_[bA]=AA,I_);function LT(i){return("type"in(e=i)&&e.type.$$typeof)===bA?AA:"$$typeof"in i?FO[i.$$typeof]:UO;var e}var kO=Object.defineProperty,BO=Object.getOwnPropertyNames,IT=Object.getOwnPropertySymbols,zO=Object.getOwnPropertyDescriptor,HO=Object.getPrototypeOf,DT=Object.prototype;function RA(i,e,t){if(typeof e!="string"){if(DT){var n=HO(e);n&&n!==DT&&RA(i,n,t)}var r=BO(e);IT&&(r=r.concat(IT(e)));for(var s=LT(i),o=LT(e),c=0;c<r.length;++c){var u=r[c];if(!(u in OO||t&&t[u]||o&&u in o||s&&u in s)){var f=zO(e,u);try{kO(i,u,f)}catch{}}}}return i}function wu(i){return typeof i=="function"}function fy(i){return typeof i=="object"&&"styledComponentId"in i}function Sl(i,e){return i&&e?"".concat(i," ").concat(e):i||e||""}function NT(i,e){if(i.length===0)return"";for(var t=i[0],n=1;n<i.length;n++)t+=i[n];return t}function yh(i){return i!==null&&typeof i=="object"&&i.constructor.name===Object.name&&!("props"in i&&i.$$typeof)}function O1(i,e,t){if(t===void 0&&(t=!1),!t&&!yh(i)&&!Array.isArray(i))return e;if(Array.isArray(e))for(var n=0;n<e.length;n++)i[n]=O1(i[n],e[n]);else if(yh(e))for(var n in e)i[n]=O1(i[n],e[n]);return i}function hy(i,e){Object.defineProperty(i,"toString",{value:e})}function Ch(i){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return new Error("An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#".concat(i," for more information.").concat(e.length>0?" Args: ".concat(e.join(", ")):""))}var VO=(function(){function i(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return i.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},i.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,s=r;e>=s;)if((s<<=1)<0)throw Ch(16,"".concat(e));this.groupSizes=new Uint32Array(s),this.groupSizes.set(n),this.length=s;for(var o=r;o<s;o++)this.groupSizes[o]=0}for(var c=this.indexOfGroup(e+1),u=(o=0,t.length);o<u;o++)this.tag.insertRule(c,t[o])&&(this.groupSizes[e]++,c++)},i.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var s=n;s<r;s++)this.tag.deleteRule(n)}},i.prototype.getGroup=function(e){var t="";if(e>=this.length||this.groupSizes[e]===0)return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),s=r+n,o=r;o<s;o++)t+="".concat(this.tag.getRule(o)).concat(uy);return t},i})(),rm=new Map,Cm=new Map,sm=1,hp=function(i){if(rm.has(i))return rm.get(i);for(;Cm.has(sm);)sm++;var e=sm++;return rm.set(i,e),Cm.set(e,i),e},GO=function(i,e){sm=e+1,rm.set(i,e),Cm.set(e,i)},WO="style[".concat(Eu,"][").concat(SA,'="').concat(e0,'"]'),XO=new RegExp("^".concat(Eu,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),$O=function(i,e,t){for(var n,r=t.split(","),s=0,o=r.length;s<o;s++)(n=r[s])&&i.registerName(e,n)},jO=function(i,e){for(var t,n=((t=e.textContent)!==null&&t!==void 0?t:"").split(uy),r=[],s=0,o=n.length;s<o;s++){var c=n[s].trim();if(c){var u=c.match(XO);if(u){var f=0|parseInt(u[1],10),h=u[2];f!==0&&(GO(h,f),$O(i,h,u[3]),i.getTag().insertRules(f,r)),r.length=0}else r.push(c)}}},UT=function(i){for(var e=document.querySelectorAll(WO),t=0,n=e.length;t<n;t++){var r=e[t];r&&r.getAttribute(Eu)!==yA&&(jO(i,r),r.parentNode&&r.parentNode.removeChild(r))}};function qO(){return typeof __webpack_nonce__<"u"?__webpack_nonce__:null}var CA=function(i){var e=document.head,t=i||e,n=document.createElement("style"),r=(function(c){var u=Array.from(c.querySelectorAll("style[".concat(Eu,"]")));return u[u.length-1]})(t),s=r!==void 0?r.nextSibling:null;n.setAttribute(Eu,yA),n.setAttribute(SA,e0);var o=qO();return o&&n.setAttribute("nonce",o),t.insertBefore(n,s),n},YO=(function(){function i(e){this.element=CA(e),this.element.appendChild(document.createTextNode("")),this.sheet=(function(t){if(t.sheet)return t.sheet;for(var n=document.styleSheets,r=0,s=n.length;r<s;r++){var o=n[r];if(o.ownerNode===t)return o}throw Ch(17)})(this.element),this.length=0}return i.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch{return!1}},i.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},i.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},i})(),KO=(function(){function i(e){this.element=CA(e),this.nodes=this.element.childNodes,this.length=0}return i.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,!0}return!1},i.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},i.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},i})(),ZO=(function(){function i(e){this.rules=[],this.length=0}return i.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},i.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},i.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},i})(),OT=Rm,QO={isServer:!Rm,useCSSOMInjection:!AO},PA=(function(){function i(e,t,n){e===void 0&&(e=Tu),t===void 0&&(t={});var r=this;this.options=or(or({},QO),e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&Rm&&OT&&(OT=!1,UT(this)),hy(this,function(){return(function(s){for(var o=s.getTag(),c=o.length,u="",f=function(p){var m=(function(g){return Cm.get(g)})(p);if(m===void 0)return"continue";var v=s.names.get(m),y=o.getGroup(p);if(v===void 0||!v.size||y.length===0)return"continue";var S="".concat(Eu,".g").concat(p,'[id="').concat(m,'"]'),_="";v!==void 0&&v.forEach(function(g){g.length>0&&(_+="".concat(g,","))}),u+="".concat(y).concat(S,'{content:"').concat(_,'"}').concat(uy)},h=0;h<c;h++)f(h);return u})(r)})}return i.registerId=function(e){return hp(e)},i.prototype.rehydrate=function(){!this.server&&Rm&&UT(this)},i.prototype.reconstructWithOptions=function(e,t){return t===void 0&&(t=!0),new i(or(or({},this.options),e),this.gs,t&&this.names||void 0)},i.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},i.prototype.getTag=function(){return this.tag||(this.tag=(e=(function(t){var n=t.useCSSOMInjection,r=t.target;return t.isServer?new ZO(r):n?new YO(r):new KO(r)})(this.options),new VO(e)));var e},i.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},i.prototype.registerName=function(e,t){if(hp(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},i.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(hp(e),n)},i.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},i.prototype.clearRules=function(e){this.getTag().clearGroup(hp(e)),this.clearNames(e)},i.prototype.clearTag=function(){this.tag=void 0},i})(),JO=/&/g,eF=/^\s*\/\/.*$/gm;function LA(i,e){return i.map(function(t){return t.type==="rule"&&(t.value="".concat(e," ").concat(t.value),t.value=t.value.replaceAll(",",",".concat(e," ")),t.props=t.props.map(function(n){return"".concat(e," ").concat(n)})),Array.isArray(t.children)&&t.type!=="@keyframes"&&(t.children=LA(t.children,e)),t})}function tF(i){var e,t,n,r=Tu,s=r.options,o=s===void 0?Tu:s,c=r.plugins,u=c===void 0?t0:c,f=function(m,v,y){return y.startsWith(t)&&y.endsWith(t)&&y.replaceAll(t,"").length>0?".".concat(e):m},h=u.slice();h.push(function(m){m.type===Km&&m.value.includes("&")&&(m.props[0]=m.props[0].replace(JO,t).replace(n,f))}),o.prefix&&h.push(wO),h.push(MO);var p=function(m,v,y,S){v===void 0&&(v=""),y===void 0&&(y=""),S===void 0&&(S="&"),e=S,t=v,n=new RegExp("\\".concat(t,"\\b"),"g");var _=m.replace(eF,""),g=yO(y||v?"".concat(y," ").concat(v," { ").concat(_," }"):_);o.namespace&&(g=LA(g,o.namespace));var b=[];return Am(g,EO(h.concat(TO(function(E){return b.push(E)})))),b};return p.hash=u.length?u.reduce(function(m,v){return v.name||Ch(15),qc(m,v.name)},EA).toString():"",p}var nF=new PA,F1=tF(),IA=Ul.createContext({shouldForwardProp:void 0,styleSheet:nF,stylis:F1});IA.Consumer;Ul.createContext(void 0);function FT(){return en.useContext(IA)}var iF=(function(){function i(e,t){var n=this;this.inject=function(r,s){s===void 0&&(s=F1);var o=n.name+s.hash;r.hasNameForId(n.id,o)||r.insertRules(n.id,o,s(n.rules,o,"@keyframes"))},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,hy(this,function(){throw Ch(12,String(n.name))})}return i.prototype.getName=function(e){return e===void 0&&(e=F1),this.name+e.hash},i})(),rF=function(i){return i>="A"&&i<="Z"};function kT(i){for(var e="",t=0;t<i.length;t++){var n=i[t];if(t===1&&n==="-"&&i[0]==="-")return i;rF(n)?e+="-"+n.toLowerCase():e+=n}return e.startsWith("ms-")?"-"+e:e}var DA=function(i){return i==null||i===!1||i===""},NA=function(i){var e,t,n=[];for(var r in i){var s=i[r];i.hasOwnProperty(r)&&!DA(s)&&(Array.isArray(s)&&s.isCss||wu(s)?n.push("".concat(kT(r),":"),s,";"):yh(s)?n.push.apply(n,bm(bm(["".concat(r," {")],NA(s),!1),["}"],!1)):n.push("".concat(kT(r),": ").concat((e=r,(t=s)==null||typeof t=="boolean"||t===""?"":typeof t!="number"||t===0||e in bO||e.startsWith("--")?String(t).trim():"".concat(t,"px")),";")))}return n};function Cl(i,e,t,n){if(DA(i))return[];if(fy(i))return[".".concat(i.styledComponentId)];if(wu(i)){if(!wu(s=i)||s.prototype&&s.prototype.isReactComponent||!e)return[i];var r=i(e);return Cl(r,e,t,n)}var s;return i instanceof iF?t?(i.inject(t,n),[i.getName(n)]):[i]:yh(i)?NA(i):Array.isArray(i)?Array.prototype.concat.apply(t0,i.map(function(o){return Cl(o,e,t,n)})):[i.toString()]}function sF(i){for(var e=0;e<i.length;e+=1){var t=i[e];if(wu(t)&&!fy(t))return!1}return!0}var aF=TA(e0),oF=(function(){function i(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(n===void 0||n.isStatic)&&sF(e),this.componentId=t,this.baseHash=qc(aF,t),this.baseStyle=n,PA.registerId(t)}return i.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):"";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=Sl(r,this.staticRulesId);else{var s=NT(Cl(this.rules,e,t,n)),o=U1(qc(this.baseHash,s)>>>0);if(!t.hasNameForId(this.componentId,o)){var c=n(s,".".concat(o),void 0,this.componentId);t.insertRules(this.componentId,o,c)}r=Sl(r,o),this.staticRulesId=o}else{for(var u=qc(this.baseHash,n.hash),f="",h=0;h<this.rules.length;h++){var p=this.rules[h];if(typeof p=="string")f+=p;else if(p){var m=NT(Cl(p,e,t,n));u=qc(u,m+h),f+=m}}if(f){var v=U1(u>>>0);t.hasNameForId(this.componentId,v)||t.insertRules(this.componentId,v,n(f,".".concat(v),void 0,this.componentId)),r=Sl(r,v)}}return r},i})(),UA=Ul.createContext(void 0);UA.Consumer;var N_={};function lF(i,e,t){var n=fy(i),r=i,s=!D_(i),o=e.attrs,c=o===void 0?t0:o,u=e.componentId,f=u===void 0?(function(T,L){var C=typeof T!="string"?"sc":CT(T);N_[C]=(N_[C]||0)+1;var P="".concat(C,"-").concat(IO(e0+C+N_[C]));return L?"".concat(L,"-").concat(P):P})(e.displayName,e.parentComponentId):u,h=e.displayName,p=h===void 0?(function(T){return D_(T)?"styled.".concat(T):"Styled(".concat(DO(T),")")})(i):h,m=e.displayName&&e.componentId?"".concat(CT(e.displayName),"-").concat(e.componentId):e.componentId||f,v=n&&r.attrs?r.attrs.concat(c).filter(Boolean):c,y=e.shouldForwardProp;if(n&&r.shouldForwardProp){var S=r.shouldForwardProp;if(e.shouldForwardProp){var _=e.shouldForwardProp;y=function(T,L){return S(T,L)&&_(T,L)}}else y=S}var g=new oF(t,m,n?r.componentStyle:void 0);function b(T,L){return(function(C,P,N){var A=C.attrs,w=C.componentStyle,D=C.defaultProps,X=C.foldedComponentIds,z=C.styledComponentId,G=C.target,Z=Ul.useContext(UA),q=FT(),K=C.shouldForwardProp||q.shouldForwardProp,B=RO(P,Z,D)||Tu,ie=(function(fe,Re,Ee){for(var Fe,He=or(or({},Re),{className:void 0,theme:Ee}),$e=0;$e<fe.length;$e+=1){var wt=wu(Fe=fe[$e])?Fe(He):Fe;for(var ee in wt)He[ee]=ee==="className"?Sl(He[ee],wt[ee]):ee==="style"?or(or({},He[ee]),wt[ee]):wt[ee]}return Re.className&&(He.className=Sl(He.className,Re.className)),He})(A,P,B),oe=ie.as||G,V={};for(var de in ie)ie[de]===void 0||de[0]==="$"||de==="as"||de==="theme"&&ie.theme===B||(de==="forwardedAs"?V.as=ie.forwardedAs:K&&!K(de,oe)||(V[de]=ie[de]));var Ge=(function(fe,Re){var Ee=FT(),Fe=fe.generateAndInjectStyles(Re,Ee.styleSheet,Ee.stylis);return Fe})(w,ie),j=Sl(X,z);return Ge&&(j+=" "+Ge),ie.className&&(j+=" "+ie.className),V[D_(oe)&&!MA.has(oe)?"class":"className"]=j,V.ref=N,en.createElement(oe,V)})(E,T,L)}b.displayName=p;var E=Ul.forwardRef(b);return E.attrs=v,E.componentStyle=g,E.displayName=p,E.shouldForwardProp=y,E.foldedComponentIds=n?Sl(r.foldedComponentIds,r.styledComponentId):"",E.styledComponentId=m,E.target=n?r.target:i,Object.defineProperty(E,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(T){this._foldedDefaultProps=n?(function(L){for(var C=[],P=1;P<arguments.length;P++)C[P-1]=arguments[P];for(var N=0,A=C;N<A.length;N++)O1(L,A[N],!0);return L})({},r.defaultProps,T):T}}),hy(E,function(){return".".concat(E.styledComponentId)}),s&&RA(E,i,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),E}function BT(i,e){for(var t=[i[0]],n=0,r=e.length;n<r;n+=1)t.push(e[n],i[n+1]);return t}var zT=function(i){return Object.assign(i,{isCss:!0})};function cF(i){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];if(wu(i)||yh(i))return zT(Cl(BT(t0,bm([i],e,!0))));var n=i;return e.length===0&&n.length===1&&typeof n[0]=="string"?Cl(n):zT(Cl(BT(n,e)))}function k1(i,e,t){if(t===void 0&&(t=Tu),!e)throw Ch(1,e);var n=function(r){for(var s=[],o=1;o<arguments.length;o++)s[o-1]=arguments[o];return i(e,t,cF.apply(void 0,bm([r],s,!1)))};return n.attrs=function(r){return k1(i,e,or(or({},t),{attrs:Array.prototype.concat(t.attrs,r).filter(Boolean)}))},n.withConfig=function(r){return k1(i,e,or(or({},t),r))},n}var OA=function(i){return k1(lF,i)},Dn=OA;MA.forEach(function(i){Dn[i]=OA(i)});const mi=Dn.button`
	background-color: rgba(255, 255, 255, 0.3);
	border: none;
	display: flex;
	align-items: center;
	justify-content: center;
	cursor: pointer;
	color: white;
	border-radius: 2px;
	font-size: 14px;
	height: 24px;
	min-width: 24px;
	transition: all 0.2s ease-in-out;
	margin: 0 1px;
	text-transform: none;
	box-shadow: none;
	font-family: Arial, sans-serif;

	&:hover {
		background-color: rgba(255, 255, 255, 0.5);
	}

	&:active {
		background-color: rgba(255, 255, 255, 0.6);
	}

	&:first-child {
		border-radius: ${({$reverse:i})=>i?"2px 8px 8px 2px":"8px 2px 2px 8px"};
	}

	&:last-child {
		border-radius: ${({$reverse:i})=>i?"8px 2px 2px 8px":"2px 8px 8px 2px"};
	}
`,Vi=Dn.div`
	background-color: ${({$pressed:i})=>i?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)"};
	border: none;
	display: flex;
	align-items: center;
	justify-content: center;
	color: white;
	border-radius: 5px;
	font-size: 14px;
	font-family: Arial, sans-serif;
	height: 20px;
	width: 20px;
	transition: all 0.2s ease-in-out;
`,FA=Dn.div`
	display: flex;
	align-items: center;
	height: 24px;
	margin-bottom: 2px;
	justify-content: flex-start;
	flex-direction: ${({$reverse:i})=>i?"row-reverse":"row"};
`,bu=Dn.div`
	display: flex;
	flex-direction: ${({$reverse:i})=>i?"row-reverse":"row"};
	height: 100%;
	justify-content: space-between;
	align-items: center;
`;Dn.button`
	background-color: rgba(255, 255, 255, 0.3);
	border: none;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0;
	pointer-events: none;
	width: 50px;
	height: 50px;
	border-radius: 50%;
	position: relative;
	margin: 0 5px;
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
`;Dn.div`
	position: absolute;
	background-color: white;
	border-radius: 50%;
	width: 36px;
	height: 36px;
	cursor: pointer;
	pointer-events: auto;
`;const kA=Dn.input.attrs({type:"range"})`
	-webkit-appearance: none;
	appearance: none;
	background-color: rgba(255, 255, 255, 0.3);
	border: none;
	height: 100%;
	width: 49px;
	cursor: pointer;
	margin: 0 1px;
	transition: all 0.2s ease-in-out;
	border-radius: ${({$reverse:i})=>i?"8px 2px 2px 8px":"2px 8px 8px 2px"};

	&::-webkit-slider-thumb {
		-webkit-appearance: none;
		appearance: none;
		width: 8px;
		height: 24px;
		background-color: white;
		border-radius: 3px;
	}

	&::-moz-range-thumb {
		width: 8px;
		height: 24px;
		background-color: white;
		border-radius: 3px;
	}

	&::-ms-thumb {
		width: 8px;
		height: 24px;
		background-color: white;
		border-radius: 3px;
	}
`,uF=Dn.div`
	display: flex;
	flex-direction: column;
	align-items: ${({$reverse:i})=>i?"flex-start":"flex-end"};
	justify-content: center;
	margin: ${({$reverse:i})=>i?"2px -26px 0 0":"2px 0 0 -26px"};
`,HT=Dn.div`
	display: flex;
	flex-direction: ${({$reverse:i})=>i?"row-reverse":"row"};
	align-items: center;
	justify-content: center;
`;Dn.div`
	display: flex;
	flex-direction: column;
	height: 50px;
	justify-content: space-between;
`;const Hn=Dn(xh)`
	height: 14px;
	min-height: 14px;
	max-height: 14px;
	width: 14px;
	min-width: 14px;
	max-width: 14px;
`,fF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M16.529 16.1h-.893l-1.653-2.713-1.68 2.713h-.832l2.074-3.255-1.942-2.992h.875l1.531 2.45 1.54-2.45h.831l-1.933 2.975 2.082 3.272Z",style:{fill:"#fff",fillOpacity:1}})]}),hF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"m14.086 12.924 1.627-3.071h.849l-2.083 3.823V16.1h-.787v-2.389L11.61 9.853h.857l1.619 3.07Z",style:{fill:"#fff",fillOpacity:1}})]}),dF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"m15.975 16.1-.753-1.934h-2.476l-.744 1.934h-.796l2.441-6.274h.709l2.432 6.274h-.813Zm-1.69-4.524a29.052 29.052 0 0 1-.21-.63 5.175 5.175 0 0 0-.087-.306c-.029.117-.06.236-.096.359-.03.116-.061.224-.096.323-.03.1-.056.184-.079.254l-.709 1.89h1.978l-.7-1.89Z",style:{fill:"#fff",fillOpacity:1}})]}),pF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7 13.125a7 7 0 1 0 14 0v1.75a7 7 0 0 1-14 0v-1.75Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.55,d:"M14 19.863a6.738 6.738 0 1 0 0-13.476 6.738 6.738 0 0 0 0 13.476Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M13.876 9.853c.519 0 .954.05 1.304.148.355.1.62.263.796.49.18.228.271.531.271.91 0 .245-.047.464-.14.656a1.198 1.198 0 0 1-.402.473 1.62 1.62 0 0 1-.648.254v.043c.262.041.499.117.709.228.216.11.385.268.507.473.123.204.184.47.184.796 0 .379-.088.703-.262.971a1.663 1.663 0 0 1-.753.604c-.32.134-.706.201-1.155.201h-2.196V9.853h1.785Zm.157 2.66c.537 0 .905-.085 1.103-.254.198-.175.297-.432.297-.77 0-.344-.122-.59-.367-.735-.24-.152-.624-.228-1.155-.228h-1.033v1.986h1.155Zm-1.155.656v2.266h1.26c.555 0 .94-.108 1.155-.324.216-.216.324-.498.324-.849 0-.221-.05-.414-.149-.577-.093-.163-.254-.289-.481-.376-.222-.093-.525-.14-.91-.14h-1.199Z",style:{fill:"#fff",fillOpacity:1}})]}),mF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:.5,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.247h.787v5.547h2.73v.7h-3.517ZM14.479 6.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875L14.478 6.39Z",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"m13.045 6.711-1.093-1.22a8.75 8.75 0 1 0 4.24.036L15.11 6.733A7.352 7.352 0 0 1 14 21.35a7.35 7.35 0 0 1-.955-14.639Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),gF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM14.479 6.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875L14.478 6.39Z",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"m13.045 6.711-1.093-1.22a8.75 8.75 0 1 0 4.24.036L15.11 6.733A7.352 7.352 0 0 1 14 21.35a7.35 7.35 0 0 1-.955-14.639Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),_F=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM13.697.611a.525.525 0 0 1 .782 0l2.234 2.495a.525.525 0 0 1-.39.875h-4.47a.525.525 0 0 1-.391-.875L13.697.61Z",style:{fill:"#fff",fillOpacity:1}})]}),vF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM14.479 27.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875l-2.235 2.495Z",style:{fill:"#fff",fillOpacity:1}})]}),xF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM.611 14.303a.525.525 0 0 1 0-.782l2.495-2.234a.525.525 0 0 1 .875.39v4.47a.525.525 0 0 1-.875.391L.61 14.303Z",style:{fill:"#fff",fillOpacity:1}})]}),yF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M12.642 17.325v-6.248h.787v5.548h2.73v.7h-3.517ZM27.389 13.521a.525.525 0 0 1 0 .782l-2.495 2.235a.525.525 0 0 1-.875-.39v-4.47c0-.454.537-.694.875-.391l2.495 2.234Z",style:{fill:"#fff",fillOpacity:1}})]}),SF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM13.697.611a.525.525 0 0 1 .782 0l2.234 2.495a.525.525 0 0 1-.39.875h-4.47a.525.525 0 0 1-.391-.875L13.697.61Z",style:{fill:"#fff",fillOpacity:1}})]}),MF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM14.479 27.389a.525.525 0 0 1-.782 0l-2.235-2.495a.525.525 0 0 1 .39-.875h4.47c.454 0 .694.537.391.875l-2.235 2.495Z",style:{fill:"#fff",fillOpacity:1}})]}),EF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM.611 14.303a.525.525 0 0 1 0-.782l2.495-2.234a.525.525 0 0 1 .875.39v4.47a.525.525 0 0 1-.875.391L.61 14.303Z",style:{fill:"#fff",fillOpacity:1}})]}),TF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:1.5,d:"M14 22.05a8.05 8.05 0 1 0 0-16.1 8.05 8.05 0 0 0 0 16.1Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.75,d:"M14 19.95a5.95 5.95 0 1 0 0-11.9 5.95 5.95 0 0 0 0 11.9Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M13.938 11.077c.52 0 .945.068 1.278.202.338.128.59.323.752.586.164.262.245.592.245.989 0 .332-.06.61-.183.83-.123.223-.28.4-.473.535a2.61 2.61 0 0 1-.595.306l1.715 2.8h-.919l-1.513-2.581h-1.243v2.58h-.787v-6.247h1.723Zm-.043.683h-.893v2.319h.936c.339 0 .616-.044.832-.132a.956.956 0 0 0 .472-.402c.105-.175.158-.394.158-.656 0-.274-.056-.493-.167-.657a.905.905 0 0 0-.49-.358c-.221-.076-.504-.114-.848-.114ZM27.389 13.521a.525.525 0 0 1 0 .782l-2.495 2.235a.525.525 0 0 1-.875-.39v-4.47c0-.454.537-.694.875-.391l2.495 2.234Z",style:{fill:"#fff",fillOpacity:1}})]}),wF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M7.525 7.875c-2.283 1.22-3.82 3.507-3.82 6.125s1.537 4.904 3.82 6.125C4.405 19.425 2.1 16.948 2.1 14s2.306-5.425 5.425-6.125Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M24.702 10.954a2.187 2.187 0 0 0-2.095-2.817H11.025a5.863 5.863 0 0 0 0 11.726h9.377c.966 0 1.818-.634 2.095-1.56l2.205-7.35Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M10.594 17.15v-6.248h.788v5.548h2.73v.7h-3.518Zm7.13-3.299h2.162v3.063c-.338.11-.68.192-1.024.245a7.837 7.837 0 0 1-1.172.078c-.648 0-1.193-.128-1.637-.385a2.567 2.567 0 0 1-1.015-1.11c-.227-.485-.34-1.057-.34-1.716 0-.653.127-1.219.384-1.697a2.699 2.699 0 0 1 1.103-1.112c.484-.268 1.067-.402 1.75-.402.35 0 .68.032.988.096.315.064.607.155.875.271l-.297.683a4.55 4.55 0 0 0-.753-.254 3.453 3.453 0 0 0-.857-.105c-.496 0-.922.102-1.278.306a2.004 2.004 0 0 0-.813.875c-.187.374-.28.82-.28 1.34 0 .495.078.935.236 1.32.163.38.417.677.761.893.344.21.796.315 1.356.315.187 0 .35-.006.49-.018.146-.017.277-.037.394-.06.123-.024.236-.047.341-.07V14.55h-1.373v-.7Z",style:{fill:"#fff",fillOpacity:1}})]}),bF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M20.441 7.875c2.283 1.22 3.82 3.507 3.82 6.125s-1.537 4.904-3.82 6.125c3.12-.7 5.425-3.177 5.425-6.125s-2.305-5.425-5.425-6.125Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M3.264 10.954a2.187 2.187 0 0 1 2.095-2.817h11.582a5.862 5.862 0 0 1 0 11.726H7.564a2.188 2.188 0 0 1-2.095-1.56l-2.205-7.35Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M9.497 10.902c.519 0 .945.068 1.277.202.339.128.59.323.753.586.163.262.245.592.245.989 0 .332-.062.61-.184.83-.122.223-.28.4-.472.535-.187.128-.386.23-.595.306l1.714 2.8h-.918l-1.514-2.581H8.56v2.58h-.787v-6.247h1.724Zm-.044.683H8.56v2.319h.937c.338 0 .615-.044.831-.132a.956.956 0 0 0 .473-.402c.104-.175.157-.394.157-.656 0-.274-.055-.493-.166-.657a.905.905 0 0 0-.49-.358c-.222-.076-.505-.114-.849-.114Zm6.476 2.266h2.16v3.063c-.337.11-.679.192-1.023.245a7.837 7.837 0 0 1-1.172.078c-.648 0-1.193-.128-1.637-.385a2.568 2.568 0 0 1-1.015-1.11c-.227-.485-.34-1.057-.34-1.716 0-.653.127-1.219.384-1.697a2.699 2.699 0 0 1 1.103-1.112c.484-.268 1.067-.402 1.75-.402.35 0 .68.032.988.096.315.064.607.155.875.271l-.297.683a4.551 4.551 0 0 0-.753-.254 3.453 3.453 0 0 0-.857-.105c-.496 0-.922.102-1.278.306a2.004 2.004 0 0 0-.813.875c-.187.374-.28.82-.28 1.34 0 .495.078.935.236 1.32.163.38.417.677.761.893.344.21.796.315 1.356.315.187 0 .35-.006.49-.018a5.17 5.17 0 0 0 .394-.06c.123-.024.236-.047.341-.07V14.55H15.93v-.7Z",style:{fill:"#fff",fillOpacity:1}})]}),AF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M14 20.212a7.612 7.612 0 1 0 0-15.224 7.612 7.612 0 0 0 0 15.224Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M10.209 15.662V9.415h.787v5.548h2.73v.7H10.21Zm6.395 0h-.787v-5.556h-1.952v-.691h4.682v.691h-1.943v5.556Z",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M21.235 17.5a8.31 8.31 0 0 1-7.205 4.165A8.31 8.31 0 0 1 6.825 17.5c.823 3.4 3.737 5.915 7.205 5.915 3.469 0 6.382-2.514 7.205-5.915Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),RF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",strokeWidth:.7,d:"M14 20.212a7.612 7.612 0 1 0 0-15.224 7.612 7.612 0 0 0 0 15.224Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",d:"M11.42 9.415c.52 0 .945.067 1.277.201.339.129.59.324.753.587.163.262.245.592.245.988 0 .333-.061.61-.184.832-.122.221-.28.4-.472.533-.187.129-.385.23-.595.307l1.715 2.8h-.92l-1.513-2.582h-1.242v2.582h-.788V9.415h1.724Zm-.044.683h-.892v2.318h.936c.338 0 .615-.043.831-.131a.956.956 0 0 0 .473-.402c.105-.175.157-.394.157-.657 0-.274-.055-.493-.166-.656a.905.905 0 0 0-.49-.359c-.222-.075-.505-.114-.849-.114Zm5.74 5.564h-.787v-5.556h-1.951v-.691h4.681v.691h-1.942v5.556Z",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M21.235 17.5a8.31 8.31 0 0 1-7.205 4.165A8.31 8.31 0 0 1 6.825 17.5c.823 3.4 3.737 5.915 7.205 5.915 3.469 0 6.382-2.514 7.205-5.915Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),CF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",d:"m20.01 15.768-4.242 4.242a5.5 5.5 0 1 1-7.778-7.778l4.242-4.242a5.5 5.5 0 1 1 7.778 7.778Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M11.172 16.828a1 1 0 0 0 1.414 0L15.414 14l.707.707-2.828 2.828a2 2 0 1 1-2.829-2.828l.708.707a1 1 0 0 0 0 1.414ZM12.586 14l2.828-2.829a1 1 0 1 1 1.414 1.415l.708.707a2 2 0 0 0-2.829-2.829l-2.828 2.829.707.707Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M15.414 16.828 18.243 14a3 3 0 0 0-2.289-5.117l-.869-.869a4 4 0 0 1 3.864 6.693l-2.828 2.828-.707-.707Zm-.707 2.122a4 4 0 1 1-5.657-5.657l4.243-4.243.707.707L9.757 14A3 3 0 1 0 14 18.242l.707.708Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),PF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:[ae.jsx("path",{stroke:"#fff",d:"m15.768 7.99 4.242 4.242a5.5 5.5 0 1 1-7.778 7.778L7.99 15.768a5.5 5.5 0 1 1 7.778-7.778Z",style:{stroke:"#fff",strokeOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M16.828 16.828a1 1 0 0 0 0-1.414L14 12.586l.707-.707 2.828 2.828a2 2 0 1 1-2.828 2.828l.707-.707a1 1 0 0 0 1.414 0ZM14 15.414l-2.828-2.828a1 1 0 0 1 1.414-1.414l.707-.708a2 2 0 0 0-2.829 2.829l2.829 2.828.707-.707Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M16.828 12.586 14 9.757a3 3 0 0 0-5.117 2.289l-.869.869a4 4 0 0 1 6.693-3.864l2.828 2.828-.707.707Zm2.122.707a4 4 0 1 1-5.657 5.657L9.05 14.707 9.757 14 14 18.243A3 3 0 1 0 18.243 14l.707-.707Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})]}),LF={"x-button-left":fF,"y-button-left":hF,"a-button-right":dF,"b-button-right":pF,"thumbstick-left":mF,"thumbstick-up-left":_F,"thumbstick-down-left":vF,"thumbstick-right-left":yF,"thumbstick-left-left":xF,"thumbstick-right":gF,"thumbstick-up-right":SF,"thumbstick-down-right":MF,"thumbstick-right-right":TF,"thumbstick-left-right":EF,"trigger-left":AF,"trigger-right":RF,"squeeze-left":wF,"squeeze-right":bF,"thumbrest-left":CF,"thumbrest-right":PF},Sh=({buttonName:i,handedness:e})=>{const t=`${i}-${e}`,n=LF[t];return n?ae.jsx(n,{}):ae.jsx("div",{style:{width:"28px",height:"28px"}})},IF=()=>ae.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",width:28,height:28,fill:"none",children:ae.jsx("path",{fill:"#fff",fillRule:"evenodd",d:"M1 11.2A5.2 5.2 0 0 1 6.2 6h15.6a5.2 5.2 0 0 1 5.2 5.2v5.2a5.2 5.2 0 0 1-5.2 5.2h-3.109c-1.149 0-2.199-.65-2.713-1.677l-.199-.398a1.733 1.733 0 0 0-1.55-.958h-.458c-.656 0-1.257.37-1.55.958l-.2.398A3.033 3.033 0 0 1 9.31 21.6H6.2A5.2 5.2 0 0 1 1 16.4v-5.2Zm9.1 2.167a2.6 2.6 0 1 1-5.2 0 2.6 2.6 0 0 1 5.2 0Zm15.538-1.426a.498.498 0 0 0 .141-.542l.002-.002a5.456 5.456 0 0 0-.347-.755l-.104-.178a5.586 5.586 0 0 0-.486-.686.502.502 0 0 0-.54-.15l-1.225.39a4.234 4.234 0 0 0-.968-.56l-.275-1.256a.497.497 0 0 0-.4-.392 5.686 5.686 0 0 0-1.871.003.497.497 0 0 0-.4.391l-.276 1.257a4.234 4.234 0 0 0-.968.559l-1.226-.39a.498.498 0 0 0-.539.15 5.586 5.586 0 0 0-.486.686l-.104.179c-.134.242-.25.492-.347.754a.498.498 0 0 0 .14.542l.953.867a4.26 4.26 0 0 0 0 1.12l-.952.867a.498.498 0 0 0-.141.541c.097.262.213.513.347.755l.104.178c.145.242.308.471.486.687.13.156.346.211.54.15l1.223-.392c.295.226.62.416.968.559l.275 1.256c.044.2.198.359.4.392a5.686 5.686 0 0 0 1.871 0 .497.497 0 0 0 .4-.392l.276-1.256c.347-.143.673-.333.968-.56l1.225.39c.194.062.41.009.54-.15a5.59 5.59 0 0 0 .486-.686l.103-.178a5.45 5.45 0 0 0 .348-.755.498.498 0 0 0-.14-.541l-.954-.867a4.258 4.258 0 0 0 0-1.118l.953-.867ZM20.5 15.967a2.6 2.6 0 1 0 0-5.2 2.6 2.6 0 0 0 0 5.2Z",clipRule:"evenodd",style:{fill:"#fff",fillOpacity:1}})}),DF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:12,height:16,fill:"none",children:[ae.jsx("g",{clipPath:"url(#a)",children:ae.jsx("path",{stroke:"#fff",d:"M.5 6.5H6m-5.5 0V5C.5 2.237 2.237.5 5 .5h1m-5.5 6V11c0 2.762 1.737 4.5 4.5 4.5h2c2.762 0 4.5-1.738 4.5-4.5V6.5M6 6.5v-6m0 6h5.5M6 .5h1c2.762 0 4.5 1.737 4.5 4.5v1.5",style:{stroke:"#fff",strokeOpacity:1}})}),ae.jsx("path",{fill:"#fff",d:"M.5 6.5H6v-6H5C2.237.5.5 2.237.5 5v1.5Z",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("defs",{children:ae.jsx("clipPath",{id:"a",children:ae.jsx("path",{fill:"#fff",d:"M0 0h12v16H0z",style:{fill:"#fff",fillOpacity:1}})})})]}),NF=()=>ae.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",width:12,height:16,fill:"none",children:[ae.jsx("g",{clipPath:"url(#a)",children:ae.jsx("path",{stroke:"#fff",d:"M.5 6.5H6m-5.5 0V5C.5 2.237 2.237.5 5 .5h1m-5.5 6V11c0 2.762 1.737 4.5 4.5 4.5h2c2.762 0 4.5-1.738 4.5-4.5V6.5M6 6.5v-6m0 6h5.5M6 .5h1c2.762 0 4.5 1.737 4.5 4.5v1.5",style:{stroke:"#fff",strokeOpacity:1}})}),ae.jsx("path",{fill:"#fff",d:"M11.5 6.5H6v-6h1c2.762 0 4.5 1.737 4.5 4.5v1.5Z",style:{fill:"#fff",fillOpacity:1}}),ae.jsx("defs",{children:ae.jsx("clipPath",{id:"a",children:ae.jsx("path",{fill:"#fff",d:"M0 0h12v16H0z",style:{fill:"#fff",fillOpacity:1}})})})]}),UF={prefix:"fas",iconName:"right-from-bracket",icon:[512,512,["sign-out-alt"],"f2f5","M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z"]},dy={prefix:"fas",iconName:"fingerprint",icon:[512,512,[],"f577","M48 256C48 141.1 141.1 48 256 48c63.1 0 119.6 28.1 157.8 72.5c8.6 10.1 23.8 11.2 33.8 2.6s11.2-23.8 2.6-33.8C403.3 34.6 333.7 0 256 0C114.6 0 0 114.6 0 256l0 40c0 13.3 10.7 24 24 24s24-10.7 24-24l0-40zm458.5-52.9c-2.7-13-15.5-21.3-28.4-18.5s-21.3 15.5-18.5 28.4c2.9 13.9 4.5 28.3 4.5 43.1l0 40c0 13.3 10.7 24 24 24s24-10.7 24-24l0-40c0-18.1-1.9-35.8-5.5-52.9zM256 80c-19 0-37.4 3-54.5 8.6c-15.2 5-18.7 23.7-8.3 35.9c7.1 8.3 18.8 10.8 29.4 7.9c10.6-2.9 21.8-4.4 33.4-4.4c70.7 0 128 57.3 128 128l0 24.9c0 25.2-1.5 50.3-4.4 75.3c-1.7 14.6 9.4 27.8 24.2 27.8c11.8 0 21.9-8.6 23.3-20.3c3.3-27.4 5-55 5-82.7l0-24.9c0-97.2-78.8-176-176-176zM150.7 148.7c-9.1-10.6-25.3-11.4-33.9-.4C93.7 178 80 215.4 80 256l0 24.9c0 24.2-2.6 48.4-7.8 71.9C68.8 368.4 80.1 384 96.1 384c10.5 0 19.9-7 22.2-17.3c6.4-28.1 9.7-56.8 9.7-85.8l0-24.9c0-27.2 8.5-52.4 22.9-73.1c7.2-10.4 8-24.6-.2-34.2zM256 160c-53 0-96 43-96 96l0 24.9c0 35.9-4.6 71.5-13.8 106.1c-3.8 14.3 6.7 29 21.5 29c9.5 0 17.9-6.2 20.4-15.4c10.5-39 15.9-79.2 15.9-119.7l0-24.9c0-28.7 23.3-52 52-52s52 23.3 52 52l0 24.9c0 36.3-3.5 72.4-10.4 107.9c-2.7 13.9 7.7 27.2 21.8 27.2c10.2 0 19-7 21-17c7.7-38.8 11.6-78.3 11.6-118.1l0-24.9c0-53-43-96-96-96zm24 96c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 24.9c0 59.9-11 119.3-32.5 175.2l-5.9 15.3c-4.8 12.4 1.4 26.3 13.8 31s26.3-1.4 31-13.8l5.9-15.3C267.9 411.9 280 346.7 280 280.9l0-24.9z"]},OF={prefix:"fas",iconName:"caret-right",icon:[256,512,[],"f0da","M246.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-9.2-9.2-22.9-11.9-34.9-6.9s-19.8 16.6-19.8 29.6l0 256c0 12.9 7.8 24.6 19.8 29.6s25.7 2.2 34.9-6.9l128-128z"]},FF={prefix:"fas",iconName:"caret-left",icon:[256,512,[],"f0d9","M9.4 278.6c-12.5-12.5-12.5-32.8 0-45.3l128-128c9.2-9.2 22.9-11.9 34.9-6.9s19.8 16.6 19.8 29.6l0 256c0 12.9-7.8 24.6-19.8 29.6s-25.7 2.2-34.9-6.9l-128-128z"]},VT={prefix:"fas",iconName:"ban",icon:[512,512,[128683,"cancel"],"f05e","M367.2 412.5L99.5 144.8C77.1 176.1 64 214.5 64 256c0 106 86 192 192 192c41.5 0 79.9-13.1 111.2-35.5zm45.3-45.3C434.9 335.9 448 297.5 448 256c0-106-86-192-192-192c-41.5 0-79.9 13.1-111.2 35.5L412.5 367.2zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z"]},kF={prefix:"fas",iconName:"arrow-right-to-bracket",icon:[512,512,["sign-in"],"f090","M352 96l64 0c17.7 0 32 14.3 32 32l0 256c0 17.7-14.3 32-32 32l-64 0c-17.7 0-32 14.3-32 32s14.3 32 32 32l64 0c53 0 96-43 96-96l0-256c0-53-43-96-96-96l-64 0c-17.7 0-32 14.3-32 32s14.3 32 32 32zm-9.4 182.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L242.7 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l210.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128z"]},BA={prefix:"fas",iconName:"caret-up",icon:[320,512,[],"f0d8","M182.6 137.4c-12.5-12.5-32.8-12.5-45.3 0l-128 128c-9.2 9.2-11.9 22.9-6.9 34.9s16.6 19.8 29.6 19.8l256 0c12.9 0 24.6-7.8 29.6-19.8s2.2-25.7-6.9-34.9l-128-128z"]},BF={prefix:"fas",iconName:"rotate-left",icon:[512,512,["rotate-back","rotate-backward","undo-alt"],"f2ea","M48.5 224L40 224c-13.3 0-24-10.7-24-24L16 72c0-9.7 5.8-18.5 14.8-22.2s19.3-1.7 26.2 5.2L98.6 96.6c87.6-86.5 228.7-86.2 315.8 1c87.5 87.5 87.5 229.3 0 316.8s-229.3 87.5-316.8 0c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0c62.5 62.5 163.8 62.5 226.3 0s62.5-163.8 0-226.3c-62.2-62.2-162.7-62.5-225.3-1L185 183c6.9 6.9 8.9 17.2 5.2 26.2s-12.5 14.8-22.2 14.8L48.5 224z"]},zF={prefix:"fas",iconName:"circle-play",icon:[512,512,[61469,"play-circle"],"f144","M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9l0 176c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z"]},HF={prefix:"fas",iconName:"square-arrow-up-right",icon:[448,512,["external-link-square"],"f14c","M384 32c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96C0 60.7 28.7 32 64 32l320 0zM160 144c-13.3 0-24 10.7-24 24s10.7 24 24 24l94.1 0L119 327c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l135-135L288 328c0 13.3 10.7 24 24 24s24-10.7 24-24l0-160c0-13.3-10.7-24-24-24l-152 0z"]},VF={prefix:"fas",iconName:"keyboard",icon:[576,512,[9e3],"f11c","M64 64C28.7 64 0 92.7 0 128L0 384c0 35.3 28.7 64 64 64l448 0c35.3 0 64-28.7 64-64l0-256c0-35.3-28.7-64-64-64L64 64zm16 64l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16zM64 240c0-8.8 7.2-16 16-16l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32zm16 80l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16zm80-176c0-8.8 7.2-16 16-16l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32zm16 80l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16zM160 336c0-8.8 7.2-16 16-16l224 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-224 0c-8.8 0-16-7.2-16-16l0-32zM272 128l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16zM256 240c0-8.8 7.2-16 16-16l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32zM368 128l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16zM352 240c0-8.8 7.2-16 16-16l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32zM464 128l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16zM448 240c0-8.8 7.2-16 16-16l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32zm16 80l32 0c8.8 0 16 7.2 16 16l0 32c0 8.8-7.2 16-16 16l-32 0c-8.8 0-16-7.2-16-16l0-32c0-8.8 7.2-16 16-16z"]},zA={prefix:"fas",iconName:"caret-down",icon:[320,512,[],"f0d7","M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z"]},GF={prefix:"fas",iconName:"delete-left",icon:[576,512,[9003,"backspace"],"f55a","M576 128c0-35.3-28.7-64-64-64L205.3 64c-17 0-33.3 6.7-45.3 18.7L9.4 233.4c-6 6-9.4 14.1-9.4 22.6s3.4 16.6 9.4 22.6L160 429.3c12 12 28.3 18.7 45.3 18.7L512 448c35.3 0 64-28.7 64-64l0-256zM271 175c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z"]},GT={prefix:"fas",iconName:"angle-up",icon:[448,512,[8963],"f106","M201.4 137.4c12.5-12.5 32.8-12.5 45.3 0l160 160c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L224 205.3 86.6 342.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3l160-160z"]},WF={prefix:"fas",iconName:"arrow-turn-down",icon:[384,512,["level-down"],"f149","M32 64C14.3 64 0 49.7 0 32S14.3 0 32 0l96 0c53 0 96 43 96 96l0 306.7 73.4-73.4c12.5-12.5 32.8-12.5 45.3 0s12.5 32.8 0 45.3l-128 128c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 402.7 160 96c0-17.7-14.3-32-32-32L32 64z"]},XF={prefix:"fas",iconName:"arrows-up-down",icon:[320,512,["arrows-v"],"f07d","M182.6 9.4c-12.5-12.5-32.8-12.5-45.3 0l-96 96c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L128 109.3l0 293.5L86.6 361.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l96 96c12.5 12.5 32.8 12.5 45.3 0l96-96c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 402.7l0-293.5 41.4 41.4c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3l-96-96z"]},$F={prefix:"fas",iconName:"video",icon:[576,512,["video-camera"],"f03d","M0 128C0 92.7 28.7 64 64 64l256 0c35.3 0 64 28.7 64 64l0 256c0 35.3-28.7 64-64 64L64 448c-35.3 0-64-28.7-64-64L0 128zM559.1 99.8c10.4 5.6 16.9 16.4 16.9 28.2l0 256c0 11.8-6.5 22.6-16.9 28.2s-23 5-32.9-1.6l-96-64L416 337.1l0-17.1 0-128 0-17.1 14.2-9.5 96-64c9.8-6.5 22.4-7.2 32.9-1.6z"]},ma={KeyA:"A",KeyB:"B",KeyC:"C",KeyD:"D",KeyE:"E",KeyF:"F",KeyG:"G",KeyH:"H",KeyI:"I",KeyJ:"J",KeyK:"K",KeyL:"L",KeyM:"M",KeyN:"N",KeyO:"O",KeyP:"P",KeyQ:"Q",KeyR:"R",KeyS:"S",KeyT:"T",KeyU:"U",KeyV:"V",KeyW:"W",KeyX:"X",KeyY:"Y",KeyZ:"Z",Digit0:"0",Digit1:"1",Digit2:"2",Digit3:"3",Digit4:"4",Digit5:"5",Digit6:"6",Digit7:"7",Digit8:"8",Digit9:"9",Tab:ae.jsx(Hn,{icon:kF}),Backspace:ae.jsx(Hn,{icon:GF}),Enter:ae.jsx(Hn,{style:{transform:"rotate(90deg)"},icon:WF}),ShiftLeft:ae.jsx(Hn,{icon:GT}),ShiftRight:ae.jsx(Hn,{icon:GT}),Space:" ",ArrowUp:ae.jsx(Hn,{icon:BA}),ArrowDown:ae.jsx(Hn,{icon:zA}),ArrowLeft:ae.jsx(Hn,{icon:FF}),ArrowRight:ae.jsx(Hn,{icon:OF}),Semicolon:";",Equal:"=",Comma:",",Minus:"-",Period:".",Slash:"/",Backquote:"`",BracketLeft:"[",Backslash:"\\",BracketRight:"]",Quote:"'",MouseLeft:ae.jsx(DF,{}),MouseRight:ae.jsx(NF,{})},jF={left:{"thumbstick-up":"KeyW","thumbstick-down":"KeyS","thumbstick-left":"KeyA","thumbstick-right":"KeyD",thumbstick:"KeyR","x-button":"KeyX","y-button":"KeyZ",trigger:"KeyQ",squeeze:"KeyE"},right:{"thumbstick-up":"ArrowUp","thumbstick-down":"ArrowDown","thumbstick-left":"ArrowLeft","thumbstick-right":"ArrowRight",thumbstick:"Slash","a-button":"Enter","b-button":"ShiftRight",trigger:"MouseLeft",squeeze:"MouseRight"}},qF=Dn.div`
	display: flex;
	justify-content: space-between;
	pointer-events: all;
	position: fixed;
	display: flex;
	top: 40px;
	left: calc(50vw - 156px);
	width: 312px;
`,WT=Dn.div`
	display: flex;
	flex-direction: column;
	width: 50%;
`,XT=Dn.div`
	display: flex;
	height: 24px;
	align-items: center;
	margin-bottom: 2px;
`,YF=({keyMap:i,setKeyMap:e})=>{const[t,n]=en.useState(null),r=(o,c)=>{n({controller:o,action:c})},s=(o,c)=>{e(u=>({...u,[o]:{...u[o],[c]:"Unmapped"}}))};return en.useEffect(()=>{const o=f=>{t&&ma[f.code]&&(e(h=>({...h,[t.controller]:{...h[t.controller],[t.action]:f.code}})),n(null))},c=f=>{if(t){const h=f.button===0?"MouseLeft":f.button===2?"MouseRight":null;h&&ma[h]&&(e(p=>({...p,[t.controller]:{...p[t.controller],[t.action]:h}})),n(null))}},u=f=>{f.preventDefault()};return window.addEventListener("keydown",o),window.addEventListener("mousedown",c),window.addEventListener("contextmenu",u),()=>{window.removeEventListener("keydown",o),window.removeEventListener("mousedown",c),window.removeEventListener("contextmenu",u)}},[t,e]),ae.jsxs(qF,{children:[ae.jsx(WT,{children:Object.keys(i.left).map(o=>ae.jsxs(XT,{children:[ae.jsx(Sh,{buttonName:o==="up"?"thumbstick":o,handedness:"left"}),ae.jsxs(bu,{$reverse:!1,children:[ae.jsx(mi,{$reverse:!1,style:{width:"100px",backgroundColor:t&&t.controller==="left"&&t.action===o?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)"},onClick:()=>r("left",o),onContextMenu:c=>c.preventDefault(),children:i.left[o]}),ae.jsx(mi,{style:{width:"24px"},$reverse:!1,onClick:()=>s("left",o),onContextMenu:c=>c.preventDefault(),children:ae.jsx(xh,{icon:VT})})]})]},o))}),ae.jsx(WT,{children:Object.keys(i.right).map(o=>ae.jsxs(XT,{children:[ae.jsx(Sh,{buttonName:o==="up"?"thumbstick":o,handedness:"right"}),ae.jsxs(bu,{$reverse:!1,children:[ae.jsx(mi,{$reverse:!1,style:{width:"100px",backgroundColor:t&&t.controller==="right"&&t.action===o?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)"},onClick:()=>r("right",o),onContextMenu:c=>c.preventDefault(),children:i.right[o]}),ae.jsx(mi,{$reverse:!1,style:{width:"24px"},onClick:()=>s("right",o),onContextMenu:c=>c.preventDefault(),children:ae.jsx(xh,{icon:VT})})]})]},o))})]})},KF=({xrController:i,buttonId:e,pointerLocked:t,mappedKey:n})=>{const r=Cy(),[s,o]=en.useState(!1),[c,u]=en.useState(!1),[f,h]=en.useState(!1),[p,m]=en.useState(0),v=i.inputSource.handedness;return en.useEffect(()=>{const y=b=>{b.code===n&&(i.updateButtonValue(e,1),h(!0))},S=b=>{b.code===n&&(i.updateButtonValue(e,0),h(!1))},_=b=>{(n==="MouseLeft"&&b.button===0||n==="MouseRight"&&b.button===2)&&(i.updateButtonValue(e,1),h(!0))},g=b=>{(n==="MouseLeft"&&b.button===0||n==="MouseRight"&&b.button===2)&&(i.updateButtonValue(e,0),h(!1))};return t?n==="MouseLeft"||n==="MouseRight"?(window.addEventListener("mousedown",_),window.addEventListener("mouseup",g)):(window.addEventListener("keydown",y),window.addEventListener("keyup",S)):n==="MouseLeft"||n==="MouseRight"?(window.removeEventListener("mousedown",_),window.removeEventListener("mouseup",g)):(window.removeEventListener("keydown",y),window.removeEventListener("keyup",S)),()=>{n==="MouseLeft"||n==="MouseRight"?(window.removeEventListener("mousedown",_),window.removeEventListener("mouseup",g)):(window.removeEventListener("keydown",y),window.removeEventListener("keyup",S))}},[n,t,e,i]),ae.jsxs(FA,{$reverse:v==="right",children:[ae.jsx(Sh,{buttonName:e,handedness:v}),ae.jsx(bu,{$reverse:v==="right",children:t?ae.jsx(Vi,{$pressed:f,children:ma[n]}):ae.jsxs(ae.Fragment,{children:[ae.jsx(mi,{$reverse:v==="right",style:{backgroundColor:c?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"50px"},onClick:()=>{u(!0),i.updateButtonValue(e,1),setTimeout(()=>{u(!1),i.updateButtonValue(e,0)},r.buttonPressDuration)},children:"Press"}),ae.jsx(mi,{$reverse:v==="right",style:{backgroundColor:s?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"29px"},onClick:()=>{o(!s),i.updateButtonTouch(e,!s)},children:ae.jsx(Hn,{icon:dy})}),ae.jsx(kA,{$reverse:v==="right",value:p,onChange:y=>{const S=Number(y.target.value);m(S),i.updateButtonValue(e,S/100)},min:"0",max:"100"})]})})]})},ZF=({xrController:i,buttonId:e,pointerLocked:t,mappedKey:n})=>{const r=Cy(),[s,o]=en.useState(!1),[c,u]=en.useState(!1),[f,h]=en.useState(!1),[p,m]=en.useState(!1),v=i.inputSource.handedness;return en.useEffect(()=>{const y=_=>{_.code===n&&(i.updateButtonValue(e,1),m(!0))},S=_=>{_.code===n&&(i.updateButtonValue(e,0),m(!1))};return t?(window.addEventListener("keydown",y),window.addEventListener("keyup",S)):(window.removeEventListener("keydown",y),window.removeEventListener("keyup",S)),()=>{window.removeEventListener("keydown",y),window.removeEventListener("keyup",S)}},[n,t,e,i]),ae.jsxs(FA,{$reverse:v==="right",children:[ae.jsx(Sh,{buttonName:e,handedness:v}),ae.jsx(bu,{$reverse:v==="right",children:t?ae.jsx(Vi,{$pressed:p,children:ma[n]}):ae.jsxs(ae.Fragment,{children:[ae.jsx(mi,{$reverse:v==="right",style:{backgroundColor:f?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"50px"},onClick:()=>{h(!0),i.updateButtonValue(e,1),setTimeout(()=>{h(!1),i.updateButtonValue(e,0)},r.buttonPressDuration)},children:"Press"}),ae.jsx(mi,{$reverse:v==="right",style:{backgroundColor:s?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"29px"},onClick:()=>{o(!s),i.updateButtonTouch(e,!s)},children:ae.jsx(Hn,{icon:dy})}),ae.jsx(mi,{$reverse:v==="right",style:{backgroundColor:c?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"49px"},onClick:()=>{u(!c),i.updateButtonValue(e,c?0:1)},children:"Hold"})]})})]})},QF=Dn.div`
	display: flex;
	align-items: center;
	margin-bottom: 2px;
`,JF=Dn.button`
	background-color: rgba(255, 255, 255, 0.3);
	border: none;
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 0;
	pointer-events: none;
	width: 50px;
	height: 50px;
	border-radius: 50%;
	position: relative;
	margin: 0 5px;
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
`,e9=Dn.div`
	position: absolute;
	background-color: white;
	border-radius: 50%;
	width: 36px;
	height: 36px;
	cursor: pointer;
	pointer-events: auto;
`,$T=Dn(mi)`
	width: 49px;
	font-size: 14px;

	${({$reverse:i})=>i?`
    &:first-child {
      margin-left: 1px;
      border-radius: 2px 8px 8px 2px;
    }

    &:last-child {
      margin-right: 1px;
      border-radius: 8px 2px 2px 8px;
    }
  `:`
    &:first-child {
      margin-right: 1px;
      border-radius: 8px 2px 2px 8px;
    }

    &:last-child {
      margin-left: 1px;
      border-radius: 2px 8px 8px 2px;
    }
  `}
`,t9=({xrController:i,pointerLocked:e,buttonId:t,mappedKeyUp:n,mappedKeyDown:r,mappedKeyLeft:s,mappedKeyRight:o,mappedKeyPressed:c})=>{const u=Cy(),f=en.useRef(null),[h,p]=en.useState(!1),[m,v]=en.useState(!1),[y,S]=en.useState(!1),[_,g]=en.useState(!1),[b,E]=en.useState({x:0,y:0}),[T,L]=en.useState({up:!1,down:!1,left:!1,right:!1,pressed:!1}),C=i.inputSource.handedness,P=()=>{if(f.current){const w=f.current.getBoundingClientRect();E({x:w.left+w.width/2,y:w.top+w.height/2}),p(!0)}},N=w=>{if(h&&f.current){const D=w.clientX-b.x,X=w.clientY-b.y,z=Math.sqrt(D*D+X*X),G=12;let Z,q;if(z<G)Z=D,q=X;else{const ie=Math.atan2(X,D);Z=Math.cos(ie)*G,q=Math.sin(ie)*G}f.current.style.transform=`translate(${Z}px, ${q}px)`;const K=Z/G,B=q/G;i.updateAxes(t,K,B)}},A=()=>{p(!1),f.current&&(f.current.style.transform="translate(0, 0)",i.updateAxes(t,0,0))};return en.useEffect(()=>{const w=z=>{const G={...T};z.code===n&&(G.up=!0),z.code===r&&(G.down=!0),z.code===s&&(G.left=!0),z.code===o&&(G.right=!0),z.code===c&&(G.pressed=!0,i.updateButtonValue(t,1)),L(G),X(G)},D=z=>{const G={...T};z.code===n&&(G.up=!1),z.code===r&&(G.down=!1),z.code===s&&(G.left=!1),z.code===o&&(G.right=!1),z.code===c&&(G.pressed=!1,i.updateButtonValue(t,0)),L(G),X(G)},X=z=>{const G=(z.right?1:0)-(z.left?1:0),Z=(z.down?1:0)-(z.up?1:0),q=Math.sqrt(G*G+Z*Z);if(q===0){i.updateAxes(t,0,0);return}const K=G/q,B=Z/q;i.updateAxes(t,K,B)};return e?(window.addEventListener("keydown",w),window.addEventListener("keyup",D)):(window.removeEventListener("keydown",w),window.removeEventListener("keyup",D)),()=>{window.removeEventListener("keydown",w),window.removeEventListener("keyup",D)}},[n,r,s,o,e,T]),en.useEffect(()=>(document.addEventListener("mousemove",N),document.addEventListener("mouseup",A),()=>{document.removeEventListener("mousemove",N),document.removeEventListener("mouseup",A)}),[h,b]),ae.jsxs(QF,{style:{flexDirection:i.inputSource.handedness==="left"?"row":"row-reverse",alignItems:"flex-start"},children:[ae.jsx(Sh,{buttonName:"thumbstick",handedness:i.inputSource.handedness}),e?ae.jsxs(uF,{$reverse:C==="right",children:[ae.jsxs(HT,{$reverse:C==="right",children:[ae.jsx(Vi,{$pressed:T.up,style:{margin:"2px"},children:ma[n]}),ae.jsx(Vi,{$pressed:T.pressed,style:{margin:"2px"},children:ma[c]})]}),ae.jsxs(HT,{$reverse:!1,children:[ae.jsx(Vi,{$pressed:T.left,style:{margin:"2px"},children:ma[s]}),ae.jsx(Vi,{$pressed:T.down,style:{margin:"2px"},children:ma[r]}),ae.jsx(Vi,{$pressed:T.right,style:{margin:"2px"},children:ma[o]})]})]}):ae.jsxs(ae.Fragment,{children:[ae.jsx(JF,{style:{margin:i.inputSource.handedness==="left"?"0 5px 0 -3px":"0 -3px 0 5px"},children:ae.jsx(e9,{ref:f,onMouseDown:P})}),ae.jsxs("div",{style:{display:"flex",flexDirection:"column"},children:[ae.jsx(mi,{$reverse:C==="right",style:{backgroundColor:_?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"80px",marginBottom:"2px",borderRadius:"8px"},onClick:()=>{g(!0),i.updateButtonValue(t,1),setTimeout(()=>{g(!1),i.updateButtonValue(t,0)},u.buttonPressDuration)},children:"Press"}),ae.jsxs(bu,{$reverse:C==="right",children:[ae.jsx($T,{$reverse:i.inputSource.handedness!=="left",style:{backgroundColor:m?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"29px"},onClick:()=>{v(!m),i.updateButtonTouch(t,!m)},children:ae.jsx(Hn,{icon:dy})}),ae.jsx($T,{$reverse:i.inputSource.handedness!=="left",style:{backgroundColor:y?"rgba(255, 255, 255, 0.6)":"rgba(255, 255, 255, 0.3)",width:"49px"},onClick:()=>{S(!y),i.updateButtonValue(t,y?0:1)},children:"Hold"})]})]})]})]})},n9=Dn.div`
	padding: ${({$reverse:i})=>i?"6px 2px 3px 5px":"6px 5px 3px 2px"};
	pointer-events: all;
	background-color: rgba(43, 43, 43, 0.5);
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
	border-radius: ${({$reverse:i})=>i?"12px 0 0 0":"0 12px 0 0"};
`;function i9(i){const e=new Set;for(const n of i.axes)n&&n.id&&e.add(n.id);const t=i.buttons.filter(n=>n!==null).map(n=>({id:n.id,type:n.type,hasAxes:e.has(n.id)}));return t.sort((n,r)=>n.hasAxes&&!r.hasAxes?-1:!n.hasAxes&&r.hasAxes?1:0),t}const r9=({xrDevice:i,keyMap:e,pointerLocked:t})=>ae.jsx("div",{style:{display:"flex",justifyContent:"space-between",flexDirection:"row"},children:Object.entries(i.controllers).map(([n,r])=>ae.jsx(n9,{$reverse:n!=="left",children:i9(r.gamepadConfig).map(s=>{const o=e[n];return s.hasAxes?ae.jsx(t9,{xrController:r,pointerLocked:t,buttonId:s.id,mappedKeyUp:e[n][`${s.id}-up`],mappedKeyDown:o[`${s.id}-down`],mappedKeyLeft:o[`${s.id}-left`],mappedKeyRight:o[`${s.id}-right`],mappedKeyPressed:o[s.id]},s.id):s.type==="analog"?ae.jsx(KF,{xrController:r,buttonId:s.id,mappedKey:o[s.id],pointerLocked:t},s.id):ae.jsx(ZF,{xrController:r,buttonId:s.id,mappedKey:o[s.id],pointerLocked:t},s.id)})},n))}),s9=Dn.div`
	display: flex;
	justify-content: center;
	pointer-events: all;
	position: fixed;
	display: flex;
	top: 40px;
	left: calc(50vw - 156px);
	width: 312px;
`,a9=({xrDevice:i,inputLayer:e})=>{const[t,n]=en.useState(i.fovy);return ae.jsx(s9,{children:ae.jsxs(bu,{$reverse:!1,children:[ae.jsx(mi,{$reverse:!1,disabled:!0,children:"FOV-Y"}),ae.jsx(kA,{$reverse:!1,value:t,style:{width:"100px",borderRadius:"2px"},onChange:r=>{const s=Number(r.target.value);n(s),i.fovy=s,e.syncFovy(),e.renderScene()},min:Math.PI/6,max:Math.PI/1.5,step:Math.PI/48}),ae.jsxs(mi,{$reverse:!1,disabled:!0,children:[(t/Math.PI*180).toFixed(2),"°"]})]})})},o9=Dn.div`
	padding: 6px 5px;
	display: flex;
	background-color: rgba(43, 43, 43, 0.5);
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
	justify-content: center;
	pointer-events: all;
	border-radius: 0 0 12px 12px;
	align-items: center;
	height: 24px;
`,jT=Dn.div`
	background-color: rgba(43, 43, 43, 0.5);
	backdrop-filter: blur(10px);
	-webkit-backdrop-filter: blur(10px);
	border: none;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;
	cursor: pointer;
	color: white;
	white-space: nowrap;
	font-size: 14px;
	text-transform: none;
	box-shadow: none;
	font-family: Arial, sans-serif;
	border-radius: ${({$reverse:i})=>i?"0 0 0 12px":"0 0 12px 0"};
	padding: 5px;

	> div {
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 2px;
		margin: 2px;
	}
`,l9=({xrDevice:i,inputLayer:e,keyMapOpen:t,setKeyMapOpen:n,fovSettingOpen:r,setFovSettingOpen:s})=>ae.jsxs("div",{style:{display:"flex",justifyContent:"center"},children:[ae.jsxs(o9,{children:[ae.jsx(IF,{}),ae.jsxs("div",{style:{display:"flex",flexDirection:"row",marginLeft:"4px"},children:[ae.jsx(mi,{$reverse:!1,onClick:()=>{e.resetDeviceTransforms()},children:ae.jsx(Hn,{icon:BF})}),ae.jsx(mi,{$reverse:!1,onClick:()=>{e.lockPointer(),n(!1),s(!1)},children:ae.jsx(Hn,{icon:zF})}),ae.jsx(mi,{$reverse:!1,onClick:()=>{n(!t),s(!1)},children:ae.jsx(Hn,{icon:VF})}),ae.jsx(mi,{$reverse:!1,onClick:()=>{s(!r),n(!1)},children:ae.jsx(Hn,{icon:$F})}),ae.jsx(mi,{$reverse:!1,onClick:()=>{const o=i.activeSession;o==null||o.end()},children:ae.jsx(Hn,{icon:UF})})]})]}),ae.jsxs(jT,{$reverse:!1,style:{position:"fixed",left:"0",top:"0"},children:[ae.jsxs("div",{children:[ae.jsx(Hn,{icon:HF,style:{marginRight:"4px"}})," ","Roomscale Movement"]}),ae.jsxs("div",{children:[ae.jsx(Vi,{$pressed:!1,style:{width:"50px"},children:"L Shift"}),ae.jsx("span",{style:{margin:"0 4px"},children:"+"}),ae.jsx(Vi,{$pressed:!1,children:"W"}),ae.jsx(Vi,{$pressed:!1,children:"A"}),ae.jsx(Vi,{$pressed:!1,children:"S"}),ae.jsx(Vi,{$pressed:!1,children:"D"})]})]}),ae.jsxs(jT,{$reverse:!0,style:{position:"fixed",right:"0",top:"0"},children:[ae.jsxs("div",{children:[ae.jsx(Hn,{icon:XF,style:{marginRight:"4px"}})," Camera Height"]}),ae.jsxs("div",{children:[ae.jsx(Vi,{$pressed:!1,style:{width:"50px"},children:"L Shift"}),ae.jsx("span",{style:{margin:"0 4px"},children:"+"}),ae.jsx(Vi,{$pressed:!1,children:ae.jsx(Hn,{icon:BA})}),ae.jsx(Vi,{$pressed:!1,children:ae.jsx(Hn,{icon:zA})})]})]})]});/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const py="168",c9=0,qT=1,u9=2,HA=1,f9=2,fa=3,wa=0,cr=1,Is=2,Ao=0,iu=1,YT=2,KT=3,ZT=4,h9=5,vl=100,d9=101,p9=102,m9=103,g9=104,_9=200,v9=201,x9=202,y9=203,B1=204,z1=205,S9=206,M9=207,E9=208,T9=209,w9=210,b9=211,A9=212,R9=213,C9=214,P9=0,L9=1,I9=2,Pm=3,D9=4,N9=5,U9=6,O9=7,VA=0,F9=1,k9=2,Ro=0,B9=1,z9=2,H9=3,V9=4,G9=5,W9=6,X9=7,GA=300,Au=301,Ru=302,H1=303,V1=304,n0=306,G1=1e3,Ml=1001,W1=1002,jr=1003,$9=1004,dp=1005,cs=1006,U_=1007,El=1008,ba=1009,WA=1010,XA=1011,Mh=1012,my=1013,Ol=1014,xa=1015,Ph=1016,gy=1017,_y=1018,Cu=1020,$A=35902,jA=1021,qA=1022,ds=1023,YA=1024,KA=1025,ru=1026,Pu=1027,ZA=1028,vy=1029,QA=1030,xy=1031,yy=1033,am=33776,om=33777,lm=33778,cm=33779,X1=35840,$1=35841,j1=35842,q1=35843,Y1=36196,K1=37492,Z1=37496,Q1=37808,J1=37809,ex=37810,tx=37811,nx=37812,ix=37813,rx=37814,sx=37815,ax=37816,ox=37817,lx=37818,cx=37819,ux=37820,fx=37821,um=36492,hx=36494,dx=36495,JA=36283,px=36284,mx=36285,gx=36286,j9=3200,q9=3201,Y9=0,K9=1,So="",bs="srgb",Uo="srgb-linear",Sy="display-p3",i0="display-p3-linear",Lm="linear",Mn="srgb",Im="rec709",Dm="p3",bc=7680,QT=519,Z9=512,Q9=513,J9=514,eR=515,e7=516,t7=517,n7=518,i7=519,JT=35044,ew="300 es",ya=2e3,Nm=2001;class ku{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Pi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],O_=Math.PI/180,_x=180/Math.PI;function Lh(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pi[i&255]+Pi[i>>8&255]+Pi[i>>16&255]+Pi[i>>24&255]+"-"+Pi[e&255]+Pi[e>>8&255]+"-"+Pi[e>>16&15|64]+Pi[e>>24&255]+"-"+Pi[t&63|128]+Pi[t>>8&255]+"-"+Pi[t>>16&255]+Pi[t>>24&255]+Pi[n&255]+Pi[n>>8&255]+Pi[n>>16&255]+Pi[n>>24&255]).toLowerCase()}function sr(i,e,t){return Math.max(e,Math.min(t,i))}function r7(i,e){return(i%e+e)%e}function F_(i,e,t){return(1-t)*i+t*e}function If(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return i/4294967295;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int32Array:return Math.max(i/2147483647,-1);case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function tr(i,e){switch(e.constructor){case Float32Array:return i;case Uint32Array:return Math.round(i*4294967295);case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int32Array:return Math.round(i*2147483647);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}class Kt{constructor(e=0,t=0){Kt.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(sr(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class zt{constructor(e,t,n,r,s,o,c,u,f){zt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,c,u,f)}set(e,t,n,r,s,o,c,u,f){const h=this.elements;return h[0]=e,h[1]=r,h[2]=c,h[3]=t,h[4]=s,h[5]=u,h[6]=n,h[7]=o,h[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],c=n[3],u=n[6],f=n[1],h=n[4],p=n[7],m=n[2],v=n[5],y=n[8],S=r[0],_=r[3],g=r[6],b=r[1],E=r[4],T=r[7],L=r[2],C=r[5],P=r[8];return s[0]=o*S+c*b+u*L,s[3]=o*_+c*E+u*C,s[6]=o*g+c*T+u*P,s[1]=f*S+h*b+p*L,s[4]=f*_+h*E+p*C,s[7]=f*g+h*T+p*P,s[2]=m*S+v*b+y*L,s[5]=m*_+v*E+y*C,s[8]=m*g+v*T+y*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8];return t*o*h-t*c*f-n*s*h+n*c*u+r*s*f-r*o*u}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8],p=h*o-c*f,m=c*u-h*s,v=f*s-o*u,y=t*p+n*m+r*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const S=1/y;return e[0]=p*S,e[1]=(r*f-h*n)*S,e[2]=(c*n-r*o)*S,e[3]=m*S,e[4]=(h*t-r*u)*S,e[5]=(r*s-c*t)*S,e[6]=v*S,e[7]=(n*u-f*t)*S,e[8]=(o*t-n*s)*S,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,c){const u=Math.cos(s),f=Math.sin(s);return this.set(n*u,n*f,-n*(u*o+f*c)+o+e,-r*f,r*u,-r*(-f*o+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(k_.makeScale(e,t)),this}rotate(e){return this.premultiply(k_.makeRotation(-e)),this}translate(e,t){return this.premultiply(k_.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const k_=new zt;function tR(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function Um(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function s7(){const i=Um("canvas");return i.style.display="block",i}const tw={};function sh(i){i in tw||(tw[i]=!0,console.warn(i))}function a7(i,e,t){return new Promise(function(n,r){function s(){switch(i.clientWaitSync(e,i.SYNC_FLUSH_COMMANDS_BIT,0)){case i.WAIT_FAILED:r();break;case i.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:n()}}setTimeout(s,t)})}const nw=new zt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),iw=new zt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Df={[Uo]:{transfer:Lm,primaries:Im,luminanceCoefficients:[.2126,.7152,.0722],toReference:i=>i,fromReference:i=>i},[bs]:{transfer:Mn,primaries:Im,luminanceCoefficients:[.2126,.7152,.0722],toReference:i=>i.convertSRGBToLinear(),fromReference:i=>i.convertLinearToSRGB()},[i0]:{transfer:Lm,primaries:Dm,luminanceCoefficients:[.2289,.6917,.0793],toReference:i=>i.applyMatrix3(iw),fromReference:i=>i.applyMatrix3(nw)},[Sy]:{transfer:Mn,primaries:Dm,luminanceCoefficients:[.2289,.6917,.0793],toReference:i=>i.convertSRGBToLinear().applyMatrix3(iw),fromReference:i=>i.applyMatrix3(nw).convertLinearToSRGB()}},o7=new Set([Uo,i0]),an={enabled:!0,_workingColorSpace:Uo,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(i){if(!o7.has(i))throw new Error(`Unsupported working color space, "${i}".`);this._workingColorSpace=i},convert:function(i,e,t){if(this.enabled===!1||e===t||!e||!t)return i;const n=Df[e].toReference,r=Df[t].fromReference;return r(n(i))},fromWorkingColorSpace:function(i,e){return this.convert(i,this._workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this._workingColorSpace)},getPrimaries:function(i){return Df[i].primaries},getTransfer:function(i){return i===So?Lm:Df[i].transfer},getLuminanceCoefficients:function(i,e=this._workingColorSpace){return i.fromArray(Df[e].luminanceCoefficients)}};function su(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function B_(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}let Ac;class l7{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Ac===void 0&&(Ac=Um("canvas")),Ac.width=e.width,Ac.height=e.height;const n=Ac.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ac}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Um("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=su(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(su(t[n]/255)*255):t[n]=su(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let c7=0;class nR{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:c7++}),this.uuid=Lh(),this.data=e,this.dataReady=!0,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,c=r.length;o<c;o++)r[o].isDataTexture?s.push(z_(r[o].image)):s.push(z_(r[o]))}else s=z_(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function z_(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?l7.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let u7=0;class ur extends ku{constructor(e=ur.DEFAULT_IMAGE,t=ur.DEFAULT_MAPPING,n=Ml,r=Ml,s=cs,o=El,c=ds,u=ba,f=ur.DEFAULT_ANISOTROPY,h=So){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:u7++}),this.uuid=Lh(),this.name="",this.source=new nR(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=u,this.offset=new Kt(0,0),this.repeat=new Kt(1,1),this.center=new Kt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==GA)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case G1:e.x=e.x-Math.floor(e.x);break;case Ml:e.x=e.x<0?0:1;break;case W1:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case G1:e.y=e.y-Math.floor(e.y);break;case Ml:e.y=e.y<0?0:1;break;case W1:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}ur.DEFAULT_IMAGE=null;ur.DEFAULT_MAPPING=GA;ur.DEFAULT_ANISOTROPY=1;class gi{constructor(e=0,t=0,n=0,r=1){gi.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const u=e.elements,f=u[0],h=u[4],p=u[8],m=u[1],v=u[5],y=u[9],S=u[2],_=u[6],g=u[10];if(Math.abs(h-m)<.01&&Math.abs(p-S)<.01&&Math.abs(y-_)<.01){if(Math.abs(h+m)<.1&&Math.abs(p+S)<.1&&Math.abs(y+_)<.1&&Math.abs(f+v+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const E=(f+1)/2,T=(v+1)/2,L=(g+1)/2,C=(h+m)/4,P=(p+S)/4,N=(y+_)/4;return E>T&&E>L?E<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(E),r=C/n,s=P/n):T>L?T<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(T),n=C/r,s=N/r):L<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(L),n=P/s,r=N/s),this.set(n,r,s,t),this}let b=Math.sqrt((_-y)*(_-y)+(p-S)*(p-S)+(m-h)*(m-h));return Math.abs(b)<.001&&(b=1),this.x=(_-y)/b,this.y=(p-S)/b,this.z=(m-h)/b,this.w=Math.acos((f+v+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class f7 extends ku{constructor(e=1,t=1,n={}){super(),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new gi(0,0,e,t),this.scissorTest=!1,this.viewport=new gi(0,0,e,t);const r={width:e,height:t,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:cs,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new ur(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let c=0;c<o;c++)this.textures[c]=s.clone(),this.textures[c].isRenderTargetTexture=!0;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let r=0,s=this.textures.length;r<s;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=n;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let n=0,r=e.textures.length;n<r;n++)this.textures[n]=e.textures[n].clone(),this.textures[n].isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new nR(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Fl extends f7{constructor(e=1,t=1,n={}){super(e,t,n),this.isWebGLRenderTarget=!0}}class iR extends ur{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=jr,this.minFilter=jr,this.wrapR=Ml,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class h7 extends ur{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=jr,this.minFilter=jr,this.wrapR=Ml,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Si{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,c){let u=n[r+0],f=n[r+1],h=n[r+2],p=n[r+3];const m=s[o+0],v=s[o+1],y=s[o+2],S=s[o+3];if(c===0){e[t+0]=u,e[t+1]=f,e[t+2]=h,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=S;return}if(p!==S||u!==m||f!==v||h!==y){let _=1-c;const g=u*m+f*v+h*y+p*S,b=g>=0?1:-1,E=1-g*g;if(E>Number.EPSILON){const L=Math.sqrt(E),C=Math.atan2(L,g*b);_=Math.sin(_*C)/L,c=Math.sin(c*C)/L}const T=c*b;if(u=u*_+m*T,f=f*_+v*T,h=h*_+y*T,p=p*_+S*T,_===1-c){const L=1/Math.sqrt(u*u+f*f+h*h+p*p);u*=L,f*=L,h*=L,p*=L}}e[t]=u,e[t+1]=f,e[t+2]=h,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,r,s,o){const c=n[r],u=n[r+1],f=n[r+2],h=n[r+3],p=s[o],m=s[o+1],v=s[o+2],y=s[o+3];return e[t]=c*y+h*p+u*v-f*m,e[t+1]=u*y+h*m+f*p-c*v,e[t+2]=f*y+h*v+c*m-u*p,e[t+3]=h*y-c*p-u*m-f*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const n=e._x,r=e._y,s=e._z,o=e._order,c=Math.cos,u=Math.sin,f=c(n/2),h=c(r/2),p=c(s/2),m=u(n/2),v=u(r/2),y=u(s/2);switch(o){case"XYZ":this._x=m*h*p+f*v*y,this._y=f*v*p-m*h*y,this._z=f*h*y+m*v*p,this._w=f*h*p-m*v*y;break;case"YXZ":this._x=m*h*p+f*v*y,this._y=f*v*p-m*h*y,this._z=f*h*y-m*v*p,this._w=f*h*p+m*v*y;break;case"ZXY":this._x=m*h*p-f*v*y,this._y=f*v*p+m*h*y,this._z=f*h*y+m*v*p,this._w=f*h*p-m*v*y;break;case"ZYX":this._x=m*h*p-f*v*y,this._y=f*v*p+m*h*y,this._z=f*h*y-m*v*p,this._w=f*h*p+m*v*y;break;case"YZX":this._x=m*h*p+f*v*y,this._y=f*v*p+m*h*y,this._z=f*h*y-m*v*p,this._w=f*h*p-m*v*y;break;case"XZY":this._x=m*h*p-f*v*y,this._y=f*v*p-m*h*y,this._z=f*h*y+m*v*p,this._w=f*h*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],c=t[5],u=t[9],f=t[2],h=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(h-u)*v,this._y=(s-f)*v,this._z=(o-r)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(h-u)/v,this._x=.25*v,this._y=(r+o)/v,this._z=(s+f)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(s-f)/v,this._x=(r+o)/v,this._y=.25*v,this._z=(u+h)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(o-r)/v,this._x=(s+f)/v,this._y=(u+h)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(sr(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,c=t._x,u=t._y,f=t._z,h=t._w;return this._x=n*h+o*c+r*f-s*u,this._y=r*h+o*u+s*c-n*f,this._z=s*h+o*f+n*u-r*c,this._w=o*h-n*c-r*u-s*f,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let c=o*e._w+n*e._x+r*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*o+t*this._w,this._x=v*n+t*this._x,this._y=v*r+t*this._y,this._z=v*s+t*this._z,this.normalize(),this}const f=Math.sqrt(u),h=Math.atan2(f,c),p=Math.sin((1-t)*h)/f,m=Math.sin(t*h)/f;return this._w=o*p+this._w*m,this._x=n*p+this._x*m,this._y=r*p+this._y*m,this._z=s*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),n=Math.random(),r=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(r*Math.sin(e),r*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class me{constructor(e=0,t=0,n=0){me.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(rw.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(rw.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,c=e.z,u=e.w,f=2*(o*r-c*n),h=2*(c*t-s*r),p=2*(s*n-o*t);return this.x=t+u*f+o*p-c*h,this.y=n+u*h+c*f-s*p,this.z=r+u*p+s*h-o*f,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,c=t.y,u=t.z;return this.x=r*u-s*c,this.y=s*o-n*u,this.z=n*c-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return H_.copy(this).projectOnVector(e),this.sub(H_)}reflect(e){return this.sub(H_.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(sr(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,n=Math.sqrt(1-t*t);return this.x=n*Math.cos(e),this.y=t,this.z=n*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const H_=new me,rw=new Si;class Ih{constructor(e=new me(1/0,1/0,1/0),t=new me(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(ss.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(ss.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=ss.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0){const s=n.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,c=s.count;o<c;o++)e.isMesh===!0?e.getVertexPosition(o,ss):ss.fromBufferAttribute(s,o),ss.applyMatrix4(e.matrixWorld),this.expandByPoint(ss);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),pp.copy(e.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),pp.copy(n.boundingBox)),pp.applyMatrix4(e.matrixWorld),this.union(pp)}const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,ss),ss.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Nf),mp.subVectors(this.max,Nf),Rc.subVectors(e.a,Nf),Cc.subVectors(e.b,Nf),Pc.subVectors(e.c,Nf),ro.subVectors(Cc,Rc),so.subVectors(Pc,Cc),nl.subVectors(Rc,Pc);let t=[0,-ro.z,ro.y,0,-so.z,so.y,0,-nl.z,nl.y,ro.z,0,-ro.x,so.z,0,-so.x,nl.z,0,-nl.x,-ro.y,ro.x,0,-so.y,so.x,0,-nl.y,nl.x,0];return!V_(t,Rc,Cc,Pc,mp)||(t=[1,0,0,0,1,0,0,0,1],!V_(t,Rc,Cc,Pc,mp))?!1:(gp.crossVectors(ro,so),t=[gp.x,gp.y,gp.z],V_(t,Rc,Cc,Pc,mp))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,ss).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(ss).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(sa[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),sa[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),sa[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),sa[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),sa[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),sa[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),sa[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),sa[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(sa),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const sa=[new me,new me,new me,new me,new me,new me,new me,new me],ss=new me,pp=new Ih,Rc=new me,Cc=new me,Pc=new me,ro=new me,so=new me,nl=new me,Nf=new me,mp=new me,gp=new me,il=new me;function V_(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){il.fromArray(i,s);const c=r.x*Math.abs(il.x)+r.y*Math.abs(il.y)+r.z*Math.abs(il.z),u=e.dot(il),f=t.dot(il),h=n.dot(il);if(Math.max(-Math.max(u,f,h),Math.min(u,f,h))>c)return!1}return!0}const d7=new Ih,Uf=new me,G_=new me;class r0{constructor(e=new me,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):d7.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Uf.subVectors(e,this.center);const t=Uf.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.addScaledVector(Uf,r/n),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(G_.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Uf.copy(e.center).add(G_)),this.expandByPoint(Uf.copy(e.center).sub(G_))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const aa=new me,W_=new me,_p=new me,ao=new me,X_=new me,vp=new me,$_=new me;class My{constructor(e=new me,t=new me(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,aa)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=aa.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(aa.copy(this.origin).addScaledVector(this.direction,t),aa.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){W_.copy(e).add(t).multiplyScalar(.5),_p.copy(t).sub(e).normalize(),ao.copy(this.origin).sub(W_);const s=e.distanceTo(t)*.5,o=-this.direction.dot(_p),c=ao.dot(this.direction),u=-ao.dot(_p),f=ao.lengthSq(),h=Math.abs(1-o*o);let p,m,v,y;if(h>0)if(p=o*u-c,m=o*c-u,y=s*h,p>=0)if(m>=-y)if(m<=y){const S=1/h;p*=S,m*=S,v=p*(p+o*m+2*c)+m*(o*p+m+2*u)+f}else m=s,p=Math.max(0,-(o*m+c)),v=-p*p+m*(m+2*u)+f;else m=-s,p=Math.max(0,-(o*m+c)),v=-p*p+m*(m+2*u)+f;else m<=-y?(p=Math.max(0,-(-o*s+c)),m=p>0?-s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+f):m<=y?(p=0,m=Math.min(Math.max(-s,-u),s),v=m*(m+2*u)+f):(p=Math.max(0,-(o*s+c)),m=p>0?s:Math.min(Math.max(-s,-u),s),v=-p*p+m*(m+2*u)+f);else m=o>0?-s:s,p=Math.max(0,-(o*m+c)),v=-p*p+m*(m+2*u)+f;return n&&n.copy(this.origin).addScaledVector(this.direction,p),r&&r.copy(W_).addScaledVector(_p,m),v}intersectSphere(e,t){aa.subVectors(e.center,this.origin);const n=aa.dot(this.direction),r=aa.dot(aa)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),c=n-o,u=n+o;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,c,u;const f=1/this.direction.x,h=1/this.direction.y,p=1/this.direction.z,m=this.origin;return f>=0?(n=(e.min.x-m.x)*f,r=(e.max.x-m.x)*f):(n=(e.max.x-m.x)*f,r=(e.min.x-m.x)*f),h>=0?(s=(e.min.y-m.y)*h,o=(e.max.y-m.y)*h):(s=(e.max.y-m.y)*h,o=(e.min.y-m.y)*h),n>o||s>r||((s>n||isNaN(n))&&(n=s),(o<r||isNaN(r))&&(r=o),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>r)||((c>n||n!==n)&&(n=c),(u<r||r!==r)&&(r=u),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,aa)!==null}intersectTriangle(e,t,n,r,s){X_.subVectors(t,e),vp.subVectors(n,e),$_.crossVectors(X_,vp);let o=this.direction.dot($_),c;if(o>0){if(r)return null;c=1}else if(o<0)c=-1,o=-o;else return null;ao.subVectors(this.origin,e);const u=c*this.direction.dot(vp.crossVectors(ao,vp));if(u<0)return null;const f=c*this.direction.dot(X_.cross(ao));if(f<0||u+f>o)return null;const h=-c*ao.dot($_);return h<0?null:this.at(h/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class In{constructor(e,t,n,r,s,o,c,u,f,h,p,m,v,y,S,_){In.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,r,s,o,c,u,f,h,p,m,v,y,S,_)}set(e,t,n,r,s,o,c,u,f,h,p,m,v,y,S,_){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=s,g[5]=o,g[9]=c,g[13]=u,g[2]=f,g[6]=h,g[10]=p,g[14]=m,g[3]=v,g[7]=y,g[11]=S,g[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new In().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/Lc.setFromMatrixColumn(e,0).length(),s=1/Lc.setFromMatrixColumn(e,1).length(),o=1/Lc.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),c=Math.sin(n),u=Math.cos(r),f=Math.sin(r),h=Math.cos(s),p=Math.sin(s);if(e.order==="XYZ"){const m=o*h,v=o*p,y=c*h,S=c*p;t[0]=u*h,t[4]=-u*p,t[8]=f,t[1]=v+y*f,t[5]=m-S*f,t[9]=-c*u,t[2]=S-m*f,t[6]=y+v*f,t[10]=o*u}else if(e.order==="YXZ"){const m=u*h,v=u*p,y=f*h,S=f*p;t[0]=m+S*c,t[4]=y*c-v,t[8]=o*f,t[1]=o*p,t[5]=o*h,t[9]=-c,t[2]=v*c-y,t[6]=S+m*c,t[10]=o*u}else if(e.order==="ZXY"){const m=u*h,v=u*p,y=f*h,S=f*p;t[0]=m-S*c,t[4]=-o*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=o*h,t[9]=S-m*c,t[2]=-o*f,t[6]=c,t[10]=o*u}else if(e.order==="ZYX"){const m=o*h,v=o*p,y=c*h,S=c*p;t[0]=u*h,t[4]=y*f-v,t[8]=m*f+S,t[1]=u*p,t[5]=S*f+m,t[9]=v*f-y,t[2]=-f,t[6]=c*u,t[10]=o*u}else if(e.order==="YZX"){const m=o*u,v=o*f,y=c*u,S=c*f;t[0]=u*h,t[4]=S-m*p,t[8]=y*p+v,t[1]=p,t[5]=o*h,t[9]=-c*h,t[2]=-f*h,t[6]=v*p+y,t[10]=m-S*p}else if(e.order==="XZY"){const m=o*u,v=o*f,y=c*u,S=c*f;t[0]=u*h,t[4]=-p,t[8]=f*h,t[1]=m*p+S,t[5]=o*h,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*h,t[10]=S*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(p7,e,m7)}lookAt(e,t,n){const r=this.elements;return Mr.subVectors(e,t),Mr.lengthSq()===0&&(Mr.z=1),Mr.normalize(),oo.crossVectors(n,Mr),oo.lengthSq()===0&&(Math.abs(n.z)===1?Mr.x+=1e-4:Mr.z+=1e-4,Mr.normalize(),oo.crossVectors(n,Mr)),oo.normalize(),xp.crossVectors(Mr,oo),r[0]=oo.x,r[4]=xp.x,r[8]=Mr.x,r[1]=oo.y,r[5]=xp.y,r[9]=Mr.y,r[2]=oo.z,r[6]=xp.z,r[10]=Mr.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],c=n[4],u=n[8],f=n[12],h=n[1],p=n[5],m=n[9],v=n[13],y=n[2],S=n[6],_=n[10],g=n[14],b=n[3],E=n[7],T=n[11],L=n[15],C=r[0],P=r[4],N=r[8],A=r[12],w=r[1],D=r[5],X=r[9],z=r[13],G=r[2],Z=r[6],q=r[10],K=r[14],B=r[3],ie=r[7],oe=r[11],V=r[15];return s[0]=o*C+c*w+u*G+f*B,s[4]=o*P+c*D+u*Z+f*ie,s[8]=o*N+c*X+u*q+f*oe,s[12]=o*A+c*z+u*K+f*V,s[1]=h*C+p*w+m*G+v*B,s[5]=h*P+p*D+m*Z+v*ie,s[9]=h*N+p*X+m*q+v*oe,s[13]=h*A+p*z+m*K+v*V,s[2]=y*C+S*w+_*G+g*B,s[6]=y*P+S*D+_*Z+g*ie,s[10]=y*N+S*X+_*q+g*oe,s[14]=y*A+S*z+_*K+g*V,s[3]=b*C+E*w+T*G+L*B,s[7]=b*P+E*D+T*Z+L*ie,s[11]=b*N+E*X+T*q+L*oe,s[15]=b*A+E*z+T*K+L*V,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],c=e[5],u=e[9],f=e[13],h=e[2],p=e[6],m=e[10],v=e[14],y=e[3],S=e[7],_=e[11],g=e[15];return y*(+s*u*p-r*f*p-s*c*m+n*f*m+r*c*v-n*u*v)+S*(+t*u*v-t*f*m+s*o*m-r*o*v+r*f*h-s*u*h)+_*(+t*f*p-t*c*v-s*o*p+n*o*v+s*c*h-n*f*h)+g*(-r*c*h-t*u*p+t*c*m+r*o*p-n*o*m+n*u*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],c=e[5],u=e[6],f=e[7],h=e[8],p=e[9],m=e[10],v=e[11],y=e[12],S=e[13],_=e[14],g=e[15],b=p*_*f-S*m*f+S*u*v-c*_*v-p*u*g+c*m*g,E=y*m*f-h*_*f-y*u*v+o*_*v+h*u*g-o*m*g,T=h*S*f-y*p*f+y*c*v-o*S*v-h*c*g+o*p*g,L=y*p*u-h*S*u-y*c*m+o*S*m+h*c*_-o*p*_,C=t*b+n*E+r*T+s*L;if(C===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/C;return e[0]=b*P,e[1]=(S*m*s-p*_*s-S*r*v+n*_*v+p*r*g-n*m*g)*P,e[2]=(c*_*s-S*u*s+S*r*f-n*_*f-c*r*g+n*u*g)*P,e[3]=(p*u*s-c*m*s-p*r*f+n*m*f+c*r*v-n*u*v)*P,e[4]=E*P,e[5]=(h*_*s-y*m*s+y*r*v-t*_*v-h*r*g+t*m*g)*P,e[6]=(y*u*s-o*_*s-y*r*f+t*_*f+o*r*g-t*u*g)*P,e[7]=(o*m*s-h*u*s+h*r*f-t*m*f-o*r*v+t*u*v)*P,e[8]=T*P,e[9]=(y*p*s-h*S*s-y*n*v+t*S*v+h*n*g-t*p*g)*P,e[10]=(o*S*s-y*c*s+y*n*f-t*S*f-o*n*g+t*c*g)*P,e[11]=(h*c*s-o*p*s-h*n*f+t*p*f+o*n*v-t*c*v)*P,e[12]=L*P,e[13]=(h*S*r-y*p*r+y*n*m-t*S*m-h*n*_+t*p*_)*P,e[14]=(y*c*r-o*S*r-y*n*u+t*S*u+o*n*_-t*c*_)*P,e[15]=(o*p*r-h*c*r+h*n*u-t*p*u-o*n*m+t*c*m)*P,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,c=e.y,u=e.z,f=s*o,h=s*c;return this.set(f*o+n,f*c-r*u,f*u+r*c,0,f*c+r*u,h*c+n,h*u-r*o,0,f*u-r*c,h*u+r*o,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,c=t._z,u=t._w,f=s+s,h=o+o,p=c+c,m=s*f,v=s*h,y=s*p,S=o*h,_=o*p,g=c*p,b=u*f,E=u*h,T=u*p,L=n.x,C=n.y,P=n.z;return r[0]=(1-(S+g))*L,r[1]=(v+T)*L,r[2]=(y-E)*L,r[3]=0,r[4]=(v-T)*C,r[5]=(1-(m+g))*C,r[6]=(_+b)*C,r[7]=0,r[8]=(y+E)*P,r[9]=(_-b)*P,r[10]=(1-(m+S))*P,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=Lc.set(r[0],r[1],r[2]).length();const o=Lc.set(r[4],r[5],r[6]).length(),c=Lc.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],as.copy(this);const f=1/s,h=1/o,p=1/c;return as.elements[0]*=f,as.elements[1]*=f,as.elements[2]*=f,as.elements[4]*=h,as.elements[5]*=h,as.elements[6]*=h,as.elements[8]*=p,as.elements[9]*=p,as.elements[10]*=p,t.setFromRotationMatrix(as),n.x=s,n.y=o,n.z=c,this}makePerspective(e,t,n,r,s,o,c=ya){const u=this.elements,f=2*s/(t-e),h=2*s/(n-r),p=(t+e)/(t-e),m=(n+r)/(n-r);let v,y;if(c===ya)v=-(o+s)/(o-s),y=-2*o*s/(o-s);else if(c===Nm)v=-o/(o-s),y=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=f,u[4]=0,u[8]=p,u[12]=0,u[1]=0,u[5]=h,u[9]=m,u[13]=0,u[2]=0,u[6]=0,u[10]=v,u[14]=y,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,r,s,o,c=ya){const u=this.elements,f=1/(t-e),h=1/(n-r),p=1/(o-s),m=(t+e)*f,v=(n+r)*h;let y,S;if(c===ya)y=(o+s)*p,S=-2*p;else if(c===Nm)y=s*p,S=-1*p;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*f,u[4]=0,u[8]=0,u[12]=-m,u[1]=0,u[5]=2*h,u[9]=0,u[13]=-v,u[2]=0,u[6]=0,u[10]=S,u[14]=-y,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const Lc=new me,as=new In,p7=new me(0,0,0),m7=new me(1,1,1),oo=new me,xp=new me,Mr=new me,sw=new In,aw=new Si;class Hs{constructor(e=0,t=0,n=0,r=Hs.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],c=r[8],u=r[1],f=r[5],h=r[9],p=r[2],m=r[6],v=r[10];switch(t){case"XYZ":this._y=Math.asin(sr(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-h,v),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(m,f),this._z=0);break;case"YXZ":this._x=Math.asin(-sr(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,f)):(this._y=Math.atan2(-p,s),this._z=0);break;case"ZXY":this._x=Math.asin(sr(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-o,f)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-sr(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-o,f));break;case"YZX":this._z=Math.asin(sr(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-h,f),this._y=Math.atan2(-p,s)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-sr(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(m,f),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-h,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return sw.makeRotationFromQuaternion(e),this.setFromRotationMatrix(sw,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return aw.setFromEuler(this),this.setFromQuaternion(aw,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Hs.DEFAULT_ORDER="XYZ";class Ey{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let g7=0;const ow=new me,Ic=new Si,oa=new In,yp=new me,Of=new me,_7=new me,v7=new Si,lw=new me(1,0,0),cw=new me(0,1,0),uw=new me(0,0,1),fw={type:"added"},x7={type:"removed"},Dc={type:"childadded",child:null},j_={type:"childremoved",child:null};class Ei extends ku{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:g7++}),this.uuid=Lh(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ei.DEFAULT_UP.clone();const e=new me,t=new Hs,n=new Si,r=new me(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new In},normalMatrix:{value:new zt}}),this.matrix=new In,this.matrixWorld=new In,this.matrixAutoUpdate=Ei.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ei.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Ey,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ic.setFromAxisAngle(e,t),this.quaternion.multiply(Ic),this}rotateOnWorldAxis(e,t){return Ic.setFromAxisAngle(e,t),this.quaternion.premultiply(Ic),this}rotateX(e){return this.rotateOnAxis(lw,e)}rotateY(e){return this.rotateOnAxis(cw,e)}rotateZ(e){return this.rotateOnAxis(uw,e)}translateOnAxis(e,t){return ow.copy(e).applyQuaternion(this.quaternion),this.position.add(ow.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(lw,e)}translateY(e){return this.translateOnAxis(cw,e)}translateZ(e){return this.translateOnAxis(uw,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(oa.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?yp.copy(e):yp.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Of.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?oa.lookAt(Of,yp,this.up):oa.lookAt(yp,Of,this.up),this.quaternion.setFromRotationMatrix(oa),r&&(oa.extractRotation(r.matrixWorld),Ic.setFromRotationMatrix(oa),this.quaternion.premultiply(Ic.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(fw),Dc.child=e,this.dispatchEvent(Dc),Dc.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(x7),j_.child=e,this.dispatchEvent(j_),j_.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),oa.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),oa.multiply(e.parent.matrixWorld)),e.applyMatrix4(oa),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(fw),Dc.child=e,this.dispatchEvent(Dc),Dc.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,n=[]){this[e]===t&&n.push(this);const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].getObjectsByProperty(e,t,n);return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Of,e,_7),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Of,v7,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++)r[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(c=>({boxInitialized:c.boxInitialized,boxMin:c.box.min.toArray(),boxMax:c.box.max.toArray(),sphereInitialized:c.sphereInitialized,sphereRadius:c.sphere.radius,sphereCenter:c.sphere.center.toArray()})),r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let f=0,h=u.length;f<h;f++){const p=u[f];s(e.shapes,p)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,f=this.material.length;u<f;u++)c.push(s(e.materials,this.material[u]));r.material=c}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let c=0;c<this.children.length;c++)r.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];r.animations.push(s(e.animations,u))}}if(t){const c=o(e.geometries),u=o(e.materials),f=o(e.textures),h=o(e.images),p=o(e.shapes),m=o(e.skeletons),v=o(e.animations),y=o(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),f.length>0&&(n.textures=f),h.length>0&&(n.images=h),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=r,n;function o(c){const u=[];for(const f in c){const h=c[f];delete h.metadata,u.push(h)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}Ei.DEFAULT_UP=new me(0,1,0);Ei.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ei.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const os=new me,la=new me,q_=new me,ca=new me,Nc=new me,Uc=new me,hw=new me,Y_=new me,K_=new me,Z_=new me;class Ds{constructor(e=new me,t=new me,n=new me){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),os.subVectors(e,t),r.cross(os);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){os.subVectors(r,t),la.subVectors(n,t),q_.subVectors(e,t);const o=os.dot(os),c=os.dot(la),u=os.dot(q_),f=la.dot(la),h=la.dot(q_),p=o*f-c*c;if(p===0)return s.set(0,0,0),null;const m=1/p,v=(f*u-c*h)*m,y=(o*h-c*u)*m;return s.set(1-v-y,y,v)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,ca)===null?!1:ca.x>=0&&ca.y>=0&&ca.x+ca.y<=1}static getInterpolation(e,t,n,r,s,o,c,u){return this.getBarycoord(e,t,n,r,ca)===null?(u.x=0,u.y=0,"z"in u&&(u.z=0),"w"in u&&(u.w=0),null):(u.setScalar(0),u.addScaledVector(s,ca.x),u.addScaledVector(o,ca.y),u.addScaledVector(c,ca.z),u)}static isFrontFacing(e,t,n,r){return os.subVectors(n,t),la.subVectors(e,t),os.cross(la).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return os.subVectors(this.c,this.b),la.subVectors(this.a,this.b),os.cross(la).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ds.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ds.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,n,r,s){return Ds.getInterpolation(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return Ds.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ds.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,c;Nc.subVectors(r,n),Uc.subVectors(s,n),Y_.subVectors(e,n);const u=Nc.dot(Y_),f=Uc.dot(Y_);if(u<=0&&f<=0)return t.copy(n);K_.subVectors(e,r);const h=Nc.dot(K_),p=Uc.dot(K_);if(h>=0&&p<=h)return t.copy(r);const m=u*p-h*f;if(m<=0&&u>=0&&h<=0)return o=u/(u-h),t.copy(n).addScaledVector(Nc,o);Z_.subVectors(e,s);const v=Nc.dot(Z_),y=Uc.dot(Z_);if(y>=0&&v<=y)return t.copy(s);const S=v*f-u*y;if(S<=0&&f>=0&&y<=0)return c=f/(f-y),t.copy(n).addScaledVector(Uc,c);const _=h*y-v*p;if(_<=0&&p-h>=0&&v-y>=0)return hw.subVectors(s,r),c=(p-h)/(p-h+(v-y)),t.copy(r).addScaledVector(hw,c);const g=1/(_+S+m);return o=S*g,c=m*g,t.copy(n).addScaledVector(Nc,o).addScaledVector(Uc,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const rR={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},lo={h:0,s:0,l:0},Sp={h:0,s:0,l:0};function Q_(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}class fn{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=bs){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,an.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=an.workingColorSpace){return this.r=e,this.g=t,this.b=n,an.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=an.workingColorSpace){if(e=r7(e,1),t=sr(t,0,1),n=sr(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Q_(o,s,e+1/3),this.g=Q_(o,s,e),this.b=Q_(o,s,e-1/3)}return an.toWorkingColorSpace(this,r),this}setStyle(e,t=bs){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],c=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=bs){const n=rR[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=su(e.r),this.g=su(e.g),this.b=su(e.b),this}copyLinearToSRGB(e){return this.r=B_(e.r),this.g=B_(e.g),this.b=B_(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=bs){return an.fromWorkingColorSpace(Li.copy(this),e),Math.round(sr(Li.r*255,0,255))*65536+Math.round(sr(Li.g*255,0,255))*256+Math.round(sr(Li.b*255,0,255))}getHexString(e=bs){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=an.workingColorSpace){an.fromWorkingColorSpace(Li.copy(this),t);const n=Li.r,r=Li.g,s=Li.b,o=Math.max(n,r,s),c=Math.min(n,r,s);let u,f;const h=(c+o)/2;if(c===o)u=0,f=0;else{const p=o-c;switch(f=h<=.5?p/(o+c):p/(2-o-c),o){case n:u=(r-s)/p+(r<s?6:0);break;case r:u=(s-n)/p+2;break;case s:u=(n-r)/p+4;break}u/=6}return e.h=u,e.s=f,e.l=h,e}getRGB(e,t=an.workingColorSpace){return an.fromWorkingColorSpace(Li.copy(this),t),e.r=Li.r,e.g=Li.g,e.b=Li.b,e}getStyle(e=bs){an.fromWorkingColorSpace(Li.copy(this),e);const t=Li.r,n=Li.g,r=Li.b;return e!==bs?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(r*255)})`}offsetHSL(e,t,n){return this.getHSL(lo),this.setHSL(lo.h+e,lo.s+t,lo.l+n)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(lo),e.getHSL(Sp);const n=F_(lo.h,Sp.h,t),r=F_(lo.s,Sp.s,t),s=F_(lo.l,Sp.l,t);return this.setHSL(n,r,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,r=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*r,this.g=s[1]*t+s[4]*n+s[7]*r,this.b=s[2]*t+s[5]*n+s[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Li=new fn;fn.NAMES=rR;let y7=0;class Dh extends ku{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:y7++}),this.uuid=Lh(),this.name="",this.type="Material",this.blending=iu,this.side=wa,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=B1,this.blendDst=z1,this.blendEquation=vl,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new fn(0,0,0),this.blendAlpha=0,this.depthFunc=Pm,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=QT,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=bc,this.stencilZFail=bc,this.stencilZPass=bc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==iu&&(n.blending=this.blending),this.side!==wa&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==B1&&(n.blendSrc=this.blendSrc),this.blendDst!==z1&&(n.blendDst=this.blendDst),this.blendEquation!==vl&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Pm&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==QT&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==bc&&(n.stencilFail=this.stencilFail),this.stencilZFail!==bc&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==bc&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function r(s){const o=[];for(const c in s){const u=s[c];delete u.metadata,o.push(u)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Nh extends Dh{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new fn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Hs,this.combine=VA,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Wn=new me,Mp=new Kt;class Fs{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=JT,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=xa,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}get updateRange(){return sh("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Mp.fromBufferAttribute(this,t),Mp.applyMatrix3(e),this.setXY(t,Mp.x,Mp.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Wn.fromBufferAttribute(this,t),Wn.applyMatrix3(e),this.setXYZ(t,Wn.x,Wn.y,Wn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Wn.fromBufferAttribute(this,t),Wn.applyMatrix4(e),this.setXYZ(t,Wn.x,Wn.y,Wn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Wn.fromBufferAttribute(this,t),Wn.applyNormalMatrix(e),this.setXYZ(t,Wn.x,Wn.y,Wn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Wn.fromBufferAttribute(this,t),Wn.transformDirection(e),this.setXYZ(t,Wn.x,Wn.y,Wn.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let n=this.array[e*this.itemSize+t];return this.normalized&&(n=If(n,this.array)),n}setComponent(e,t,n){return this.normalized&&(n=tr(n,this.array)),this.array[e*this.itemSize+t]=n,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=If(t,this.array)),t}setX(e,t){return this.normalized&&(t=tr(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=If(t,this.array)),t}setY(e,t){return this.normalized&&(t=tr(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=If(t,this.array)),t}setZ(e,t){return this.normalized&&(t=tr(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=If(t,this.array)),t}setW(e,t){return this.normalized&&(t=tr(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=tr(t,this.array),n=tr(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=tr(t,this.array),n=tr(n,this.array),r=tr(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=tr(t,this.array),n=tr(n,this.array),r=tr(r,this.array),s=tr(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==JT&&(e.usage=this.usage),e}}class sR extends Fs{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class aR extends Fs{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class wn extends Fs{constructor(e,t,n){super(new Float32Array(e),t,n)}}let S7=0;const Vr=new In,J_=new Ei,Oc=new me,Er=new Ih,Ff=new Ih,fi=new me;class qi extends ku{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:S7++}),this.uuid=Lh(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(tR(e)?aR:sR)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new zt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Vr.makeRotationFromQuaternion(e),this.applyMatrix4(Vr),this}rotateX(e){return Vr.makeRotationX(e),this.applyMatrix4(Vr),this}rotateY(e){return Vr.makeRotationY(e),this.applyMatrix4(Vr),this}rotateZ(e){return Vr.makeRotationZ(e),this.applyMatrix4(Vr),this}translate(e,t,n){return Vr.makeTranslation(e,t,n),this.applyMatrix4(Vr),this}scale(e,t,n){return Vr.makeScale(e,t,n),this.applyMatrix4(Vr),this}lookAt(e){return J_.lookAt(e),J_.updateMatrix(),this.applyMatrix4(J_.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Oc).negate(),this.translate(Oc.x,Oc.y,Oc.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new wn(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ih);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new me(-1/0,-1/0,-1/0),new me(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];Er.setFromBufferAttribute(s),this.morphTargetsRelative?(fi.addVectors(this.boundingBox.min,Er.min),this.boundingBox.expandByPoint(fi),fi.addVectors(this.boundingBox.max,Er.max),this.boundingBox.expandByPoint(fi)):(this.boundingBox.expandByPoint(Er.min),this.boundingBox.expandByPoint(Er.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new r0);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new me,1/0);return}if(e){const n=this.boundingSphere.center;if(Er.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const c=t[s];Ff.setFromBufferAttribute(c),this.morphTargetsRelative?(fi.addVectors(Er.min,Ff.min),Er.expandByPoint(fi),fi.addVectors(Er.max,Ff.max),Er.expandByPoint(fi)):(Er.expandByPoint(Ff.min),Er.expandByPoint(Ff.max))}Er.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)fi.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(fi));if(t)for(let s=0,o=t.length;s<o;s++){const c=t[s],u=this.morphTargetsRelative;for(let f=0,h=c.count;f<h;f++)fi.fromBufferAttribute(c,f),u&&(Oc.fromBufferAttribute(e,f),fi.add(Oc)),r=Math.max(r,n.distanceToSquared(fi))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=t.position,r=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Fs(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),c=[],u=[];for(let N=0;N<n.count;N++)c[N]=new me,u[N]=new me;const f=new me,h=new me,p=new me,m=new Kt,v=new Kt,y=new Kt,S=new me,_=new me;function g(N,A,w){f.fromBufferAttribute(n,N),h.fromBufferAttribute(n,A),p.fromBufferAttribute(n,w),m.fromBufferAttribute(s,N),v.fromBufferAttribute(s,A),y.fromBufferAttribute(s,w),h.sub(f),p.sub(f),v.sub(m),y.sub(m);const D=1/(v.x*y.y-y.x*v.y);isFinite(D)&&(S.copy(h).multiplyScalar(y.y).addScaledVector(p,-v.y).multiplyScalar(D),_.copy(p).multiplyScalar(v.x).addScaledVector(h,-y.x).multiplyScalar(D),c[N].add(S),c[A].add(S),c[w].add(S),u[N].add(_),u[A].add(_),u[w].add(_))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let N=0,A=b.length;N<A;++N){const w=b[N],D=w.start,X=w.count;for(let z=D,G=D+X;z<G;z+=3)g(e.getX(z+0),e.getX(z+1),e.getX(z+2))}const E=new me,T=new me,L=new me,C=new me;function P(N){L.fromBufferAttribute(r,N),C.copy(L);const A=c[N];E.copy(A),E.sub(L.multiplyScalar(L.dot(A))).normalize(),T.crossVectors(C,A);const D=T.dot(u[N])<0?-1:1;o.setXYZW(N,E.x,E.y,E.z,D)}for(let N=0,A=b.length;N<A;++N){const w=b[N],D=w.start,X=w.count;for(let z=D,G=D+X;z<G;z+=3)P(e.getX(z+0)),P(e.getX(z+1)),P(e.getX(z+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Fs(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const r=new me,s=new me,o=new me,c=new me,u=new me,f=new me,h=new me,p=new me;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),S=e.getX(m+1),_=e.getX(m+2);r.fromBufferAttribute(t,y),s.fromBufferAttribute(t,S),o.fromBufferAttribute(t,_),h.subVectors(o,s),p.subVectors(r,s),h.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,S),f.fromBufferAttribute(n,_),c.add(h),u.add(h),f.add(h),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(S,u.x,u.y,u.z),n.setXYZ(_,f.x,f.y,f.z)}else for(let m=0,v=t.count;m<v;m+=3)r.fromBufferAttribute(t,m+0),s.fromBufferAttribute(t,m+1),o.fromBufferAttribute(t,m+2),h.subVectors(o,s),p.subVectors(r,s),h.cross(p),n.setXYZ(m+0,h.x,h.y,h.z),n.setXYZ(m+1,h.x,h.y,h.z),n.setXYZ(m+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)fi.fromBufferAttribute(e,t),fi.normalize(),e.setXYZ(t,fi.x,fi.y,fi.z)}toNonIndexed(){function e(c,u){const f=c.array,h=c.itemSize,p=c.normalized,m=new f.constructor(u.length*h);let v=0,y=0;for(let S=0,_=u.length;S<_;S++){c.isInterleavedBufferAttribute?v=u[S]*c.data.stride+c.offset:v=u[S]*h;for(let g=0;g<h;g++)m[y++]=f[v++]}return new Fs(m,h,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new qi,n=this.index.array,r=this.attributes;for(const c in r){const u=r[c],f=e(u,n);t.setAttribute(c,f)}const s=this.morphAttributes;for(const c in s){const u=[],f=s[c];for(let h=0,p=f.length;h<p;h++){const m=f[h],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];t.addGroup(f.start,f.count,f.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const f in u)u[f]!==void 0&&(e[f]=u[f]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const f=n[u];e.data.attributes[u]=f.toJSON(e.data)}const r={};let s=!1;for(const u in this.morphAttributes){const f=this.morphAttributes[u],h=[];for(let p=0,m=f.length;p<m;p++){const v=f[p];h.push(v.toJSON(e.data))}h.length>0&&(r[u]=h,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const f in r){const h=r[f];this.setAttribute(f,h.clone(t))}const s=e.morphAttributes;for(const f in s){const h=[],p=s[f];for(let m=0,v=p.length;m<v;m++)h.push(p[m].clone(t));this.morphAttributes[f]=h}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let f=0,h=o.length;f<h;f++){const p=o[f];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const dw=new In,rl=new My,Ep=new r0,pw=new me,Fc=new me,kc=new me,Bc=new me,ev=new me,Tp=new me,wp=new Kt,bp=new Kt,Ap=new Kt,mw=new me,gw=new me,_w=new me,Rp=new me,Cp=new me;class dt extends Ei{constructor(e=new qi,t=new Nh){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,r=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(r,e);const c=this.morphTargetInfluences;if(s&&c){Tp.set(0,0,0);for(let u=0,f=s.length;u<f;u++){const h=c[u],p=s[u];h!==0&&(ev.fromBufferAttribute(p,e),o?Tp.addScaledVector(ev,h):Tp.addScaledVector(ev.sub(t),h))}t.add(Tp)}return t}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;r!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Ep.copy(n.boundingSphere),Ep.applyMatrix4(s),rl.copy(e.ray).recast(e.near),!(Ep.containsPoint(rl.origin)===!1&&(rl.intersectSphere(Ep,pw)===null||rl.origin.distanceToSquared(pw)>(e.far-e.near)**2))&&(dw.copy(s).invert(),rl.copy(e.ray).applyMatrix4(dw),!(n.boundingBox!==null&&rl.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,rl)))}_computeIntersections(e,t,n){let r;const s=this.geometry,o=this.material,c=s.index,u=s.attributes.position,f=s.attributes.uv,h=s.attributes.uv1,p=s.attributes.normal,m=s.groups,v=s.drawRange;if(c!==null)if(Array.isArray(o))for(let y=0,S=m.length;y<S;y++){const _=m[y],g=o[_.materialIndex],b=Math.max(_.start,v.start),E=Math.min(c.count,Math.min(_.start+_.count,v.start+v.count));for(let T=b,L=E;T<L;T+=3){const C=c.getX(T),P=c.getX(T+1),N=c.getX(T+2);r=Pp(this,g,e,n,f,h,p,C,P,N),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=_.materialIndex,t.push(r))}}else{const y=Math.max(0,v.start),S=Math.min(c.count,v.start+v.count);for(let _=y,g=S;_<g;_+=3){const b=c.getX(_),E=c.getX(_+1),T=c.getX(_+2);r=Pp(this,o,e,n,f,h,p,b,E,T),r&&(r.faceIndex=Math.floor(_/3),t.push(r))}}else if(u!==void 0)if(Array.isArray(o))for(let y=0,S=m.length;y<S;y++){const _=m[y],g=o[_.materialIndex],b=Math.max(_.start,v.start),E=Math.min(u.count,Math.min(_.start+_.count,v.start+v.count));for(let T=b,L=E;T<L;T+=3){const C=T,P=T+1,N=T+2;r=Pp(this,g,e,n,f,h,p,C,P,N),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=_.materialIndex,t.push(r))}}else{const y=Math.max(0,v.start),S=Math.min(u.count,v.start+v.count);for(let _=y,g=S;_<g;_+=3){const b=_,E=_+1,T=_+2;r=Pp(this,o,e,n,f,h,p,b,E,T),r&&(r.faceIndex=Math.floor(_/3),t.push(r))}}}}function M7(i,e,t,n,r,s,o,c){let u;if(e.side===cr?u=n.intersectTriangle(o,s,r,!0,c):u=n.intersectTriangle(r,s,o,e.side===wa,c),u===null)return null;Cp.copy(c),Cp.applyMatrix4(i.matrixWorld);const f=t.ray.origin.distanceTo(Cp);return f<t.near||f>t.far?null:{distance:f,point:Cp.clone(),object:i}}function Pp(i,e,t,n,r,s,o,c,u,f){i.getVertexPosition(c,Fc),i.getVertexPosition(u,kc),i.getVertexPosition(f,Bc);const h=M7(i,e,t,n,Fc,kc,Bc,Rp);if(h){r&&(wp.fromBufferAttribute(r,c),bp.fromBufferAttribute(r,u),Ap.fromBufferAttribute(r,f),h.uv=Ds.getInterpolation(Rp,Fc,kc,Bc,wp,bp,Ap,new Kt)),s&&(wp.fromBufferAttribute(s,c),bp.fromBufferAttribute(s,u),Ap.fromBufferAttribute(s,f),h.uv1=Ds.getInterpolation(Rp,Fc,kc,Bc,wp,bp,Ap,new Kt)),o&&(mw.fromBufferAttribute(o,c),gw.fromBufferAttribute(o,u),_w.fromBufferAttribute(o,f),h.normal=Ds.getInterpolation(Rp,Fc,kc,Bc,mw,gw,_w,new me),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const p={a:c,b:u,c:f,normal:new me,materialIndex:0};Ds.getNormal(Fc,kc,Bc,p.normal),h.face=p}return h}class zn extends qi{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const c=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const u=[],f=[],h=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,o,s,0),y("z","y","x",1,-1,n,t,-e,o,s,1),y("x","z","y",1,1,e,n,t,r,o,2),y("x","z","y",1,-1,e,n,-t,r,o,3),y("x","y","z",1,-1,e,t,n,r,s,4),y("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(u),this.setAttribute("position",new wn(f,3)),this.setAttribute("normal",new wn(h,3)),this.setAttribute("uv",new wn(p,2));function y(S,_,g,b,E,T,L,C,P,N,A){const w=T/P,D=L/N,X=T/2,z=L/2,G=C/2,Z=P+1,q=N+1;let K=0,B=0;const ie=new me;for(let oe=0;oe<q;oe++){const V=oe*D-z;for(let de=0;de<Z;de++){const Ge=de*w-X;ie[S]=Ge*b,ie[_]=V*E,ie[g]=G,f.push(ie.x,ie.y,ie.z),ie[S]=0,ie[_]=0,ie[g]=C>0?1:-1,h.push(ie.x,ie.y,ie.z),p.push(de/P),p.push(1-oe/N),K+=1}}for(let oe=0;oe<N;oe++)for(let V=0;V<P;V++){const de=m+V+Z*oe,Ge=m+V+Z*(oe+1),j=m+(V+1)+Z*(oe+1),fe=m+(V+1)+Z*oe;u.push(de,Ge,fe),u.push(Ge,j,fe),B+=6}c.addGroup(v,B,A),v+=B,m+=K}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new zn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Lu(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function Hi(i){const e={};for(let t=0;t<i.length;t++){const n=Lu(i[t]);for(const r in n)e[r]=n[r]}return e}function E7(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}function oR(i){const e=i.getRenderTarget();return e===null?i.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:an.workingColorSpace}const T7={clone:Lu,merge:Hi};var w7=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,b7=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class No extends Dh{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=w7,this.fragmentShader=b7,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Lu(e.uniforms),this.uniformsGroups=E7(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class lR extends Ei{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new In,this.projectionMatrix=new In,this.projectionMatrixInverse=new In,this.coordinateSystem=ya}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const co=new me,vw=new Kt,xw=new Kt;class Xr extends lR{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=_x*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(O_*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return _x*2*Math.atan(Math.tan(O_*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,n){co.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(co.x,co.y).multiplyScalar(-e/co.z),co.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(co.x,co.y).multiplyScalar(-e/co.z)}getViewSize(e,t){return this.getViewBounds(e,vw,xw),t.subVectors(xw,vw)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(O_*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,f=o.fullHeight;s+=o.offsetX*r/u,t-=o.offsetY*n/f,r*=o.width/u,n*=o.height/f}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const zc=-90,Hc=1;class A7 extends Ei{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Xr(zc,Hc,e,t);r.layers=this.layers,this.add(r);const s=new Xr(zc,Hc,e,t);s.layers=this.layers,this.add(s);const o=new Xr(zc,Hc,e,t);o.layers=this.layers,this.add(o);const c=new Xr(zc,Hc,e,t);c.layers=this.layers,this.add(c);const u=new Xr(zc,Hc,e,t);u.layers=this.layers,this.add(u);const f=new Xr(zc,Hc,e,t);f.layers=this.layers,this.add(f)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,r,s,o,c,u]=t;for(const f of t)this.remove(f);if(e===ya)n.up.set(0,1,0),n.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===Nm)n.up.set(0,-1,0),n.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const f of t)this.add(f),f.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,c,u,f,h]=this.children,p=e.getRenderTarget(),m=e.getActiveCubeFace(),v=e.getActiveMipmapLevel(),y=e.xr.enabled;e.xr.enabled=!1;const S=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0,r),e.render(t,s),e.setRenderTarget(n,1,r),e.render(t,o),e.setRenderTarget(n,2,r),e.render(t,c),e.setRenderTarget(n,3,r),e.render(t,u),e.setRenderTarget(n,4,r),e.render(t,f),n.texture.generateMipmaps=S,e.setRenderTarget(n,5,r),e.render(t,h),e.setRenderTarget(p,m,v),e.xr.enabled=y,n.texture.needsPMREMUpdate=!0}}class cR extends ur{constructor(e,t,n,r,s,o,c,u,f,h){e=e!==void 0?e:[],t=t!==void 0?t:Au,super(e,t,n,r,s,o,c,u,f,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class R7 extends Fl{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new cR(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:cs}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new zn(5,5,5),s=new No({name:"CubemapFromEquirect",uniforms:Lu(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:cr,blending:Ao});s.uniforms.tEquirect.value=t;const o=new dt(r,s),c=t.minFilter;return t.minFilter===El&&(t.minFilter=cs),new A7(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}const tv=new me,C7=new me,P7=new zt;class hl{constructor(e=new me(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=tv.subVectors(n,t).cross(C7.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(tv),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||P7.getNormalMatrix(e),r=this.coplanarPoint(tv).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const sl=new r0,Lp=new me;class uR{constructor(e=new hl,t=new hl,n=new hl,r=new hl,s=new hl,o=new hl){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(r),c[4].copy(s),c[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=ya){const n=this.planes,r=e.elements,s=r[0],o=r[1],c=r[2],u=r[3],f=r[4],h=r[5],p=r[6],m=r[7],v=r[8],y=r[9],S=r[10],_=r[11],g=r[12],b=r[13],E=r[14],T=r[15];if(n[0].setComponents(u-s,m-f,_-v,T-g).normalize(),n[1].setComponents(u+s,m+f,_+v,T+g).normalize(),n[2].setComponents(u+o,m+h,_+y,T+b).normalize(),n[3].setComponents(u-o,m-h,_-y,T-b).normalize(),n[4].setComponents(u-c,m-p,_-S,T-E).normalize(),t===ya)n[5].setComponents(u+c,m+p,_+S,T+E).normalize();else if(t===Nm)n[5].setComponents(c,p,S,E).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),sl.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),sl.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(sl)}intersectsSprite(e){return sl.center.set(0,0,0),sl.radius=.7071067811865476,sl.applyMatrix4(e.matrixWorld),this.intersectsSphere(sl)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Lp.x=r.normal.x>0?e.max.x:e.min.x,Lp.y=r.normal.y>0?e.max.y:e.min.y,Lp.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Lp)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function fR(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function L7(i){const e=new WeakMap;function t(c,u){const f=c.array,h=c.usage,p=f.byteLength,m=i.createBuffer();i.bindBuffer(u,m),i.bufferData(u,f,h),c.onUploadCallback();let v;if(f instanceof Float32Array)v=i.FLOAT;else if(f instanceof Uint16Array)c.isFloat16BufferAttribute?v=i.HALF_FLOAT:v=i.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=i.SHORT;else if(f instanceof Uint32Array)v=i.UNSIGNED_INT;else if(f instanceof Int32Array)v=i.INT;else if(f instanceof Int8Array)v=i.BYTE;else if(f instanceof Uint8Array)v=i.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=i.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:m,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version,size:p}}function n(c,u,f){const h=u.array,p=u._updateRange,m=u.updateRanges;if(i.bindBuffer(f,c),p.count===-1&&m.length===0&&i.bufferSubData(f,0,h),m.length!==0){for(let v=0,y=m.length;v<y;v++){const S=m[v];i.bufferSubData(f,S.start*h.BYTES_PER_ELEMENT,h,S.start,S.count)}u.clearUpdateRanges()}p.count!==-1&&(i.bufferSubData(f,p.offset*h.BYTES_PER_ELEMENT,h,p.offset,p.count),p.count=-1),u.onUploadCallback()}function r(c){return c.isInterleavedBufferAttribute&&(c=c.data),e.get(c)}function s(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=e.get(c);u&&(i.deleteBuffer(u.buffer),e.delete(c))}function o(c,u){if(c.isInterleavedBufferAttribute&&(c=c.data),c.isGLBufferAttribute){const h=e.get(c);(!h||h.version<c.version)&&e.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}const f=e.get(c);if(f===void 0)e.set(c,t(c,u));else if(f.version<c.version){if(f.size!==c.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(f.buffer,c,u),f.version=c.version}}return{get:r,remove:s,update:o}}let Ty=class hR extends qi{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,c=Math.floor(n),u=Math.floor(r),f=c+1,h=u+1,p=e/c,m=t/u,v=[],y=[],S=[],_=[];for(let g=0;g<h;g++){const b=g*m-o;for(let E=0;E<f;E++){const T=E*p-s;y.push(T,-b,0),S.push(0,0,1),_.push(E/c),_.push(1-g/u)}}for(let g=0;g<u;g++)for(let b=0;b<c;b++){const E=b+f*g,T=b+f*(g+1),L=b+1+f*(g+1),C=b+1+f*g;v.push(E,T,C),v.push(T,L,C)}this.setIndex(v),this.setAttribute("position",new wn(y,3)),this.setAttribute("normal",new wn(S,3)),this.setAttribute("uv",new wn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hR(e.width,e.height,e.widthSegments,e.heightSegments)}};var I7=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,D7=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,N7=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,U7=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,O7=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,F7=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,k7=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,B7=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,z7=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,H7=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,V7=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,G7=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,W7=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,X7=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,$7=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,j7=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,q7=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Y7=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,K7=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Z7=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Q7=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,J7=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,ek=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,tk=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,nk=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,ik=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,rk=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,sk=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,ak=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,ok=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,lk="gl_FragColor = linearToOutputTexel( gl_FragColor );",ck=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,uk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,fk=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,hk=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,dk=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,pk=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,mk=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,gk=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,_k=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,vk=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,xk=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,yk=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Sk=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Mk=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,Ek=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Tk=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,wk=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,bk=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,Ak=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Rk=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,Ck=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,Pk=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Lk=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Ik=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Dk=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,Nk=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Uk=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Ok=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Fk=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,kk=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Bk=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,zk=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Hk=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Vk=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Gk=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Wk=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,Xk=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,$k=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,jk=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,qk=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,Yk=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,Kk=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Zk=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Qk=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Jk=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,eB=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,tB=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,nB=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,iB=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,rB=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,sB=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,aB=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,oB=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,lB=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,cB=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,uB=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,fB=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,hB=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,dB=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,pB=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,mB=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,gB=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,_B=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,vB=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,xB=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,yB=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,SB=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,MB=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,EB=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,TB=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,wB=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,bB=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,AB=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,RB=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,CB=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,PB=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const LB=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,IB=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,DB=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,NB=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,UB=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,OB=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,FB=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,kB=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,BB=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,zB=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,HB=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,VB=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,GB=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,WB=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,XB=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,$B=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jB=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qB=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YB=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,KB=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ZB=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,QB=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,JB=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ez=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,tz=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,nz=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,iz=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,rz=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,sz=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,az=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,oz=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,lz=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,cz=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,uz=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,kt={alphahash_fragment:I7,alphahash_pars_fragment:D7,alphamap_fragment:N7,alphamap_pars_fragment:U7,alphatest_fragment:O7,alphatest_pars_fragment:F7,aomap_fragment:k7,aomap_pars_fragment:B7,batching_pars_vertex:z7,batching_vertex:H7,begin_vertex:V7,beginnormal_vertex:G7,bsdfs:W7,iridescence_fragment:X7,bumpmap_pars_fragment:$7,clipping_planes_fragment:j7,clipping_planes_pars_fragment:q7,clipping_planes_pars_vertex:Y7,clipping_planes_vertex:K7,color_fragment:Z7,color_pars_fragment:Q7,color_pars_vertex:J7,color_vertex:ek,common:tk,cube_uv_reflection_fragment:nk,defaultnormal_vertex:ik,displacementmap_pars_vertex:rk,displacementmap_vertex:sk,emissivemap_fragment:ak,emissivemap_pars_fragment:ok,colorspace_fragment:lk,colorspace_pars_fragment:ck,envmap_fragment:uk,envmap_common_pars_fragment:fk,envmap_pars_fragment:hk,envmap_pars_vertex:dk,envmap_physical_pars_fragment:Tk,envmap_vertex:pk,fog_vertex:mk,fog_pars_vertex:gk,fog_fragment:_k,fog_pars_fragment:vk,gradientmap_pars_fragment:xk,lightmap_pars_fragment:yk,lights_lambert_fragment:Sk,lights_lambert_pars_fragment:Mk,lights_pars_begin:Ek,lights_toon_fragment:wk,lights_toon_pars_fragment:bk,lights_phong_fragment:Ak,lights_phong_pars_fragment:Rk,lights_physical_fragment:Ck,lights_physical_pars_fragment:Pk,lights_fragment_begin:Lk,lights_fragment_maps:Ik,lights_fragment_end:Dk,logdepthbuf_fragment:Nk,logdepthbuf_pars_fragment:Uk,logdepthbuf_pars_vertex:Ok,logdepthbuf_vertex:Fk,map_fragment:kk,map_pars_fragment:Bk,map_particle_fragment:zk,map_particle_pars_fragment:Hk,metalnessmap_fragment:Vk,metalnessmap_pars_fragment:Gk,morphinstance_vertex:Wk,morphcolor_vertex:Xk,morphnormal_vertex:$k,morphtarget_pars_vertex:jk,morphtarget_vertex:qk,normal_fragment_begin:Yk,normal_fragment_maps:Kk,normal_pars_fragment:Zk,normal_pars_vertex:Qk,normal_vertex:Jk,normalmap_pars_fragment:eB,clearcoat_normal_fragment_begin:tB,clearcoat_normal_fragment_maps:nB,clearcoat_pars_fragment:iB,iridescence_pars_fragment:rB,opaque_fragment:sB,packing:aB,premultiplied_alpha_fragment:oB,project_vertex:lB,dithering_fragment:cB,dithering_pars_fragment:uB,roughnessmap_fragment:fB,roughnessmap_pars_fragment:hB,shadowmap_pars_fragment:dB,shadowmap_pars_vertex:pB,shadowmap_vertex:mB,shadowmask_pars_fragment:gB,skinbase_vertex:_B,skinning_pars_vertex:vB,skinning_vertex:xB,skinnormal_vertex:yB,specularmap_fragment:SB,specularmap_pars_fragment:MB,tonemapping_fragment:EB,tonemapping_pars_fragment:TB,transmission_fragment:wB,transmission_pars_fragment:bB,uv_pars_fragment:AB,uv_pars_vertex:RB,uv_vertex:CB,worldpos_vertex:PB,background_vert:LB,background_frag:IB,backgroundCube_vert:DB,backgroundCube_frag:NB,cube_vert:UB,cube_frag:OB,depth_vert:FB,depth_frag:kB,distanceRGBA_vert:BB,distanceRGBA_frag:zB,equirect_vert:HB,equirect_frag:VB,linedashed_vert:GB,linedashed_frag:WB,meshbasic_vert:XB,meshbasic_frag:$B,meshlambert_vert:jB,meshlambert_frag:qB,meshmatcap_vert:YB,meshmatcap_frag:KB,meshnormal_vert:ZB,meshnormal_frag:QB,meshphong_vert:JB,meshphong_frag:ez,meshphysical_vert:tz,meshphysical_frag:nz,meshtoon_vert:iz,meshtoon_frag:rz,points_vert:sz,points_frag:az,shadow_vert:oz,shadow_frag:lz,sprite_vert:cz,sprite_frag:uz},ct={common:{diffuse:{value:new fn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new zt},alphaMap:{value:null},alphaMapTransform:{value:new zt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new zt}},envmap:{envMap:{value:null},envMapRotation:{value:new zt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new zt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new zt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new zt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new zt},normalScale:{value:new Kt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new zt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new zt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new zt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new zt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new fn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new fn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new zt},alphaTest:{value:0},uvTransform:{value:new zt}},sprite:{diffuse:{value:new fn(16777215)},opacity:{value:1},center:{value:new Kt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new zt},alphaMap:{value:null},alphaMapTransform:{value:new zt},alphaTest:{value:0}}},Ps={basic:{uniforms:Hi([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.fog]),vertexShader:kt.meshbasic_vert,fragmentShader:kt.meshbasic_frag},lambert:{uniforms:Hi([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,ct.lights,{emissive:{value:new fn(0)}}]),vertexShader:kt.meshlambert_vert,fragmentShader:kt.meshlambert_frag},phong:{uniforms:Hi([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,ct.lights,{emissive:{value:new fn(0)},specular:{value:new fn(1118481)},shininess:{value:30}}]),vertexShader:kt.meshphong_vert,fragmentShader:kt.meshphong_frag},standard:{uniforms:Hi([ct.common,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.roughnessmap,ct.metalnessmap,ct.fog,ct.lights,{emissive:{value:new fn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag},toon:{uniforms:Hi([ct.common,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.gradientmap,ct.fog,ct.lights,{emissive:{value:new fn(0)}}]),vertexShader:kt.meshtoon_vert,fragmentShader:kt.meshtoon_frag},matcap:{uniforms:Hi([ct.common,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,{matcap:{value:null}}]),vertexShader:kt.meshmatcap_vert,fragmentShader:kt.meshmatcap_frag},points:{uniforms:Hi([ct.points,ct.fog]),vertexShader:kt.points_vert,fragmentShader:kt.points_frag},dashed:{uniforms:Hi([ct.common,ct.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:kt.linedashed_vert,fragmentShader:kt.linedashed_frag},depth:{uniforms:Hi([ct.common,ct.displacementmap]),vertexShader:kt.depth_vert,fragmentShader:kt.depth_frag},normal:{uniforms:Hi([ct.common,ct.bumpmap,ct.normalmap,ct.displacementmap,{opacity:{value:1}}]),vertexShader:kt.meshnormal_vert,fragmentShader:kt.meshnormal_frag},sprite:{uniforms:Hi([ct.sprite,ct.fog]),vertexShader:kt.sprite_vert,fragmentShader:kt.sprite_frag},background:{uniforms:{uvTransform:{value:new zt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:kt.background_vert,fragmentShader:kt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new zt}},vertexShader:kt.backgroundCube_vert,fragmentShader:kt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:kt.cube_vert,fragmentShader:kt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:kt.equirect_vert,fragmentShader:kt.equirect_frag},distanceRGBA:{uniforms:Hi([ct.common,ct.displacementmap,{referencePosition:{value:new me},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:kt.distanceRGBA_vert,fragmentShader:kt.distanceRGBA_frag},shadow:{uniforms:Hi([ct.lights,ct.fog,{color:{value:new fn(0)},opacity:{value:1}}]),vertexShader:kt.shadow_vert,fragmentShader:kt.shadow_frag}};Ps.physical={uniforms:Hi([Ps.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new zt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new zt},clearcoatNormalScale:{value:new Kt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new zt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new zt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new zt},sheen:{value:0},sheenColor:{value:new fn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new zt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new zt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new zt},transmissionSamplerSize:{value:new Kt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new zt},attenuationDistance:{value:0},attenuationColor:{value:new fn(0)},specularColor:{value:new fn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new zt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new zt},anisotropyVector:{value:new Kt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new zt}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag};const Ip={r:0,b:0,g:0},al=new Hs,fz=new In;function hz(i,e,t,n,r,s,o){const c=new fn(0);let u=s===!0?0:1,f,h,p=null,m=0,v=null;function y(b){let E=b.isScene===!0?b.background:null;return E&&E.isTexture&&(E=(b.backgroundBlurriness>0?t:e).get(E)),E}function S(b){let E=!1;const T=y(b);T===null?g(c,u):T&&T.isColor&&(g(T,1),E=!0);const L=i.xr.getEnvironmentBlendMode();L==="additive"?n.buffers.color.setClear(0,0,0,1,o):L==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(i.autoClear||E)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil))}function _(b,E){const T=y(E);T&&(T.isCubeTexture||T.mapping===n0)?(h===void 0&&(h=new dt(new zn(1,1,1),new No({name:"BackgroundCubeMaterial",uniforms:Lu(Ps.backgroundCube.uniforms),vertexShader:Ps.backgroundCube.vertexShader,fragmentShader:Ps.backgroundCube.fragmentShader,side:cr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(L,C,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),al.copy(E.backgroundRotation),al.x*=-1,al.y*=-1,al.z*=-1,T.isCubeTexture&&T.isRenderTargetTexture===!1&&(al.y*=-1,al.z*=-1),h.material.uniforms.envMap.value=T,h.material.uniforms.flipEnvMap.value=T.isCubeTexture&&T.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=E.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=E.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(fz.makeRotationFromEuler(al)),h.material.toneMapped=an.getTransfer(T.colorSpace)!==Mn,(p!==T||m!==T.version||v!==i.toneMapping)&&(h.material.needsUpdate=!0,p=T,m=T.version,v=i.toneMapping),h.layers.enableAll(),b.unshift(h,h.geometry,h.material,0,0,null)):T&&T.isTexture&&(f===void 0&&(f=new dt(new Ty(2,2),new No({name:"BackgroundMaterial",uniforms:Lu(Ps.background.uniforms),vertexShader:Ps.background.vertexShader,fragmentShader:Ps.background.fragmentShader,side:wa,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(f)),f.material.uniforms.t2D.value=T,f.material.uniforms.backgroundIntensity.value=E.backgroundIntensity,f.material.toneMapped=an.getTransfer(T.colorSpace)!==Mn,T.matrixAutoUpdate===!0&&T.updateMatrix(),f.material.uniforms.uvTransform.value.copy(T.matrix),(p!==T||m!==T.version||v!==i.toneMapping)&&(f.material.needsUpdate=!0,p=T,m=T.version,v=i.toneMapping),f.layers.enableAll(),b.unshift(f,f.geometry,f.material,0,0,null))}function g(b,E){b.getRGB(Ip,oR(i)),n.buffers.color.setClear(Ip.r,Ip.g,Ip.b,E,o)}return{getClearColor:function(){return c},setClearColor:function(b,E=1){c.set(b),u=E,g(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(b){u=b,g(c,u)},render:S,addToRenderList:_}}function dz(i,e){const t=i.getParameter(i.MAX_VERTEX_ATTRIBS),n={},r=m(null);let s=r,o=!1;function c(w,D,X,z,G){let Z=!1;const q=p(z,X,D);s!==q&&(s=q,f(s.object)),Z=v(w,z,X,G),Z&&y(w,z,X,G),G!==null&&e.update(G,i.ELEMENT_ARRAY_BUFFER),(Z||o)&&(o=!1,T(w,D,X,z),G!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,e.get(G).buffer))}function u(){return i.createVertexArray()}function f(w){return i.bindVertexArray(w)}function h(w){return i.deleteVertexArray(w)}function p(w,D,X){const z=X.wireframe===!0;let G=n[w.id];G===void 0&&(G={},n[w.id]=G);let Z=G[D.id];Z===void 0&&(Z={},G[D.id]=Z);let q=Z[z];return q===void 0&&(q=m(u()),Z[z]=q),q}function m(w){const D=[],X=[],z=[];for(let G=0;G<t;G++)D[G]=0,X[G]=0,z[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:D,enabledAttributes:X,attributeDivisors:z,object:w,attributes:{},index:null}}function v(w,D,X,z){const G=s.attributes,Z=D.attributes;let q=0;const K=X.getAttributes();for(const B in K)if(K[B].location>=0){const oe=G[B];let V=Z[B];if(V===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(V=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(V=w.instanceColor)),oe===void 0||oe.attribute!==V||V&&oe.data!==V.data)return!0;q++}return s.attributesNum!==q||s.index!==z}function y(w,D,X,z){const G={},Z=D.attributes;let q=0;const K=X.getAttributes();for(const B in K)if(K[B].location>=0){let oe=Z[B];oe===void 0&&(B==="instanceMatrix"&&w.instanceMatrix&&(oe=w.instanceMatrix),B==="instanceColor"&&w.instanceColor&&(oe=w.instanceColor));const V={};V.attribute=oe,oe&&oe.data&&(V.data=oe.data),G[B]=V,q++}s.attributes=G,s.attributesNum=q,s.index=z}function S(){const w=s.newAttributes;for(let D=0,X=w.length;D<X;D++)w[D]=0}function _(w){g(w,0)}function g(w,D){const X=s.newAttributes,z=s.enabledAttributes,G=s.attributeDivisors;X[w]=1,z[w]===0&&(i.enableVertexAttribArray(w),z[w]=1),G[w]!==D&&(i.vertexAttribDivisor(w,D),G[w]=D)}function b(){const w=s.newAttributes,D=s.enabledAttributes;for(let X=0,z=D.length;X<z;X++)D[X]!==w[X]&&(i.disableVertexAttribArray(X),D[X]=0)}function E(w,D,X,z,G,Z,q){q===!0?i.vertexAttribIPointer(w,D,X,G,Z):i.vertexAttribPointer(w,D,X,z,G,Z)}function T(w,D,X,z){S();const G=z.attributes,Z=X.getAttributes(),q=D.defaultAttributeValues;for(const K in Z){const B=Z[K];if(B.location>=0){let ie=G[K];if(ie===void 0&&(K==="instanceMatrix"&&w.instanceMatrix&&(ie=w.instanceMatrix),K==="instanceColor"&&w.instanceColor&&(ie=w.instanceColor)),ie!==void 0){const oe=ie.normalized,V=ie.itemSize,de=e.get(ie);if(de===void 0)continue;const Ge=de.buffer,j=de.type,fe=de.bytesPerElement,Re=j===i.INT||j===i.UNSIGNED_INT||ie.gpuType===my;if(ie.isInterleavedBufferAttribute){const Ee=ie.data,Fe=Ee.stride,He=ie.offset;if(Ee.isInstancedInterleavedBuffer){for(let $e=0;$e<B.locationSize;$e++)g(B.location+$e,Ee.meshPerAttribute);w.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=Ee.meshPerAttribute*Ee.count)}else for(let $e=0;$e<B.locationSize;$e++)_(B.location+$e);i.bindBuffer(i.ARRAY_BUFFER,Ge);for(let $e=0;$e<B.locationSize;$e++)E(B.location+$e,V/B.locationSize,j,oe,Fe*fe,(He+V/B.locationSize*$e)*fe,Re)}else{if(ie.isInstancedBufferAttribute){for(let Ee=0;Ee<B.locationSize;Ee++)g(B.location+Ee,ie.meshPerAttribute);w.isInstancedMesh!==!0&&z._maxInstanceCount===void 0&&(z._maxInstanceCount=ie.meshPerAttribute*ie.count)}else for(let Ee=0;Ee<B.locationSize;Ee++)_(B.location+Ee);i.bindBuffer(i.ARRAY_BUFFER,Ge);for(let Ee=0;Ee<B.locationSize;Ee++)E(B.location+Ee,V/B.locationSize,j,oe,V*fe,V/B.locationSize*Ee*fe,Re)}}else if(q!==void 0){const oe=q[K];if(oe!==void 0)switch(oe.length){case 2:i.vertexAttrib2fv(B.location,oe);break;case 3:i.vertexAttrib3fv(B.location,oe);break;case 4:i.vertexAttrib4fv(B.location,oe);break;default:i.vertexAttrib1fv(B.location,oe)}}}}b()}function L(){N();for(const w in n){const D=n[w];for(const X in D){const z=D[X];for(const G in z)h(z[G].object),delete z[G];delete D[X]}delete n[w]}}function C(w){if(n[w.id]===void 0)return;const D=n[w.id];for(const X in D){const z=D[X];for(const G in z)h(z[G].object),delete z[G];delete D[X]}delete n[w.id]}function P(w){for(const D in n){const X=n[D];if(X[w.id]===void 0)continue;const z=X[w.id];for(const G in z)h(z[G].object),delete z[G];delete X[w.id]}}function N(){A(),o=!0,s!==r&&(s=r,f(s.object))}function A(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:c,reset:N,resetDefaultState:A,dispose:L,releaseStatesOfGeometry:C,releaseStatesOfProgram:P,initAttributes:S,enableAttribute:_,disableUnusedAttributes:b}}function pz(i,e,t){let n;function r(f){n=f}function s(f,h){i.drawArrays(n,f,h),t.update(h,n,1)}function o(f,h,p){p!==0&&(i.drawArraysInstanced(n,f,h,p),t.update(h,n,p))}function c(f,h,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,f,0,h,0,p);let v=0;for(let y=0;y<p;y++)v+=h[y];t.update(v,n,1)}function u(f,h,p,m){if(p===0)return;const v=e.get("WEBGL_multi_draw");if(v===null)for(let y=0;y<f.length;y++)o(f[y],h[y],m[y]);else{v.multiDrawArraysInstancedWEBGL(n,f,0,h,0,m,0,p);let y=0;for(let S=0;S<p;S++)y+=h[S];for(let S=0;S<m.length;S++)t.update(y,n,m[S])}}this.setMode=r,this.render=s,this.renderInstances=o,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function mz(i,e,t,n){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const C=e.get("EXT_texture_filter_anisotropic");r=i.getParameter(C.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(C){return!(C!==ds&&n.convert(C)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_FORMAT))}function c(C){const P=C===Ph&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(C!==ba&&n.convert(C)!==i.getParameter(i.IMPLEMENTATION_COLOR_READ_TYPE)&&C!==xa&&!P)}function u(C){if(C==="highp"){if(i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.HIGH_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.HIGH_FLOAT).precision>0)return"highp";C="mediump"}return C==="mediump"&&i.getShaderPrecisionFormat(i.VERTEX_SHADER,i.MEDIUM_FLOAT).precision>0&&i.getShaderPrecisionFormat(i.FRAGMENT_SHADER,i.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let f=t.precision!==void 0?t.precision:"highp";const h=u(f);h!==f&&(console.warn("THREE.WebGLRenderer:",f,"not supported, using",h,"instead."),f=h);const p=t.logarithmicDepthBuffer===!0,m=i.getParameter(i.MAX_TEXTURE_IMAGE_UNITS),v=i.getParameter(i.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=i.getParameter(i.MAX_TEXTURE_SIZE),S=i.getParameter(i.MAX_CUBE_MAP_TEXTURE_SIZE),_=i.getParameter(i.MAX_VERTEX_ATTRIBS),g=i.getParameter(i.MAX_VERTEX_UNIFORM_VECTORS),b=i.getParameter(i.MAX_VARYING_VECTORS),E=i.getParameter(i.MAX_FRAGMENT_UNIFORM_VECTORS),T=v>0,L=i.getParameter(i.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:u,textureFormatReadable:o,textureTypeReadable:c,precision:f,logarithmicDepthBuffer:p,maxTextures:m,maxVertexTextures:v,maxTextureSize:y,maxCubemapSize:S,maxAttributes:_,maxVertexUniforms:g,maxVaryings:b,maxFragmentUniforms:E,vertexTextures:T,maxSamples:L}}function gz(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new hl,c=new zt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m){const v=p.length!==0||m||n!==0||r;return r=m,n=p.length,v},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(p,m){t=h(p,m,0)},this.setState=function(p,m,v){const y=p.clippingPlanes,S=p.clipIntersection,_=p.clipShadows,g=i.get(p);if(!r||y===null||y.length===0||s&&!_)s?h(null):f();else{const b=s?0:n,E=b*4;let T=g.clippingState||null;u.value=T,T=h(y,m,E,v);for(let L=0;L!==E;++L)T[L]=t[L];g.clippingState=T,this.numIntersection=S?this.numPlanes:0,this.numPlanes+=b}};function f(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function h(p,m,v,y){const S=p!==null?p.length:0;let _=null;if(S!==0){if(_=u.value,y!==!0||_===null){const g=v+S*4,b=m.matrixWorldInverse;c.getNormalMatrix(b),(_===null||_.length<g)&&(_=new Float32Array(g));for(let E=0,T=v;E!==S;++E,T+=4)o.copy(p[E]).applyMatrix4(b,c),o.normal.toArray(_,T),_[T+3]=o.constant}u.value=_,u.needsUpdate=!0}return e.numPlanes=S,e.numIntersection=0,_}}function _z(i){let e=new WeakMap;function t(o,c){return c===H1?o.mapping=Au:c===V1&&(o.mapping=Ru),o}function n(o){if(o&&o.isTexture){const c=o.mapping;if(c===H1||c===V1)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const f=new R7(u.height);return f.fromEquirectangularTexture(i,o),e.set(o,f),o.addEventListener("dispose",r),t(f.texture,o.mapping)}else return null}}return o}function r(o){const c=o.target;c.removeEventListener("dispose",r);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class vz extends lR{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,c=r+t,u=r-t;if(this.view!==null&&this.view.enabled){const f=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=f*this.view.offsetX,o=s+f*this.view.width,c-=h*this.view.offsetY,u=c-h*this.view.height}this.projectionMatrix.makeOrthographic(s,o,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Yc=4,yw=[.125,.215,.35,.446,.526,.582],xl=20,nv=new vz,Sw=new fn;let iv=null,rv=0,sv=0,av=!1;const dl=(1+Math.sqrt(5))/2,Vc=1/dl,Mw=[new me(-dl,Vc,0),new me(dl,Vc,0),new me(-Vc,0,dl),new me(Vc,0,dl),new me(0,dl,-Vc),new me(0,dl,Vc),new me(-1,1,-1),new me(1,1,-1),new me(-1,1,1),new me(1,1,1)];class Ew{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){iv=this._renderer.getRenderTarget(),rv=this._renderer.getActiveCubeFace(),sv=this._renderer.getActiveMipmapLevel(),av=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bw(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=ww(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(iv,rv,sv),this._renderer.xr.enabled=av,e.scissorTest=!1,Dp(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Au||e.mapping===Ru?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),iv=this._renderer.getRenderTarget(),rv=this._renderer.getActiveCubeFace(),sv=this._renderer.getActiveMipmapLevel(),av=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:cs,minFilter:cs,generateMipmaps:!1,type:Ph,format:ds,colorSpace:Uo,depthBuffer:!1},r=Tw(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Tw(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=xz(s)),this._blurMaterial=yz(s,e,t)}return r}_compileMaterial(e){const t=new dt(this._lodPlanes[0],e);this._renderer.compile(t,nv)}_sceneToCubeUV(e,t,n,r){const c=new Xr(90,1,t,n),u=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],h=this._renderer,p=h.autoClear,m=h.toneMapping;h.getClearColor(Sw),h.toneMapping=Ro,h.autoClear=!1;const v=new Nh({name:"PMREM.Background",side:cr,depthWrite:!1,depthTest:!1}),y=new dt(new zn,v);let S=!1;const _=e.background;_?_.isColor&&(v.color.copy(_),e.background=null,S=!0):(v.color.copy(Sw),S=!0);for(let g=0;g<6;g++){const b=g%3;b===0?(c.up.set(0,u[g],0),c.lookAt(f[g],0,0)):b===1?(c.up.set(0,0,u[g]),c.lookAt(0,f[g],0)):(c.up.set(0,u[g],0),c.lookAt(0,0,f[g]));const E=this._cubeSize;Dp(r,b*E,g>2?E:0,E,E),h.setRenderTarget(r),S&&h.render(y,c),h.render(e,c)}y.geometry.dispose(),y.material.dispose(),h.toneMapping=m,h.autoClear=p,e.background=_}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Au||e.mapping===Ru;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=bw()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=ww());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new dt(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Dp(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,nv)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let s=1;s<r;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),c=Mw[(r-s-1)%Mw.length];this._blur(e,s-1,s,o,c)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,c){const u=this._renderer,f=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,p=new dt(this._lodPlanes[r],f),m=f.uniforms,v=this._sizeLods[n]-1,y=isFinite(s)?Math.PI/(2*v):2*Math.PI/(2*xl-1),S=s/y,_=isFinite(s)?1+Math.floor(h*S):xl;_>xl&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${xl}`);const g=[];let b=0;for(let P=0;P<xl;++P){const N=P/S,A=Math.exp(-N*N/2);g.push(A),P===0?b+=A:P<_&&(b+=2*A)}for(let P=0;P<g.length;P++)g[P]=g[P]/b;m.envMap.value=e.texture,m.samples.value=_,m.weights.value=g,m.latitudinal.value=o==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:E}=this;m.dTheta.value=y,m.mipInt.value=E-n;const T=this._sizeLods[r],L=3*T*(r>E-Yc?r-E+Yc:0),C=4*(this._cubeSize-T);Dp(t,L,C,3*T,2*T),u.setRenderTarget(t),u.render(p,nv)}}function xz(i){const e=[],t=[],n=[];let r=i;const s=i-Yc+1+yw.length;for(let o=0;o<s;o++){const c=Math.pow(2,r);t.push(c);let u=1/c;o>i-Yc?u=yw[o-i+Yc-1]:o===0&&(u=0),n.push(u);const f=1/(c-2),h=-f,p=1+f,m=[h,h,p,h,p,p,h,h,p,p,h,p],v=6,y=6,S=3,_=2,g=1,b=new Float32Array(S*y*v),E=new Float32Array(_*y*v),T=new Float32Array(g*y*v);for(let C=0;C<v;C++){const P=C%3*2/3-1,N=C>2?0:-1,A=[P,N,0,P+2/3,N,0,P+2/3,N+1,0,P,N,0,P+2/3,N+1,0,P,N+1,0];b.set(A,S*y*C),E.set(m,_*y*C);const w=[C,C,C,C,C,C];T.set(w,g*y*C)}const L=new qi;L.setAttribute("position",new Fs(b,S)),L.setAttribute("uv",new Fs(E,_)),L.setAttribute("faceIndex",new Fs(T,g)),e.push(L),r>Yc&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Tw(i,e,t){const n=new Fl(i,e,t);return n.texture.mapping=n0,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Dp(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function yz(i,e,t){const n=new Float32Array(xl),r=new me(0,1,0);return new No({name:"SphericalGaussianBlur",defines:{n:xl,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:wy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ao,depthTest:!1,depthWrite:!1})}function ww(){return new No({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:wy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ao,depthTest:!1,depthWrite:!1})}function bw(){return new No({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:wy(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ao,depthTest:!1,depthWrite:!1})}function wy(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Sz(i){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,f=u===H1||u===V1,h=u===Au||u===Ru;if(f||h){let p=e.get(c);const m=p!==void 0?p.texture.pmremVersion:0;if(c.isRenderTargetTexture&&c.pmremVersion!==m)return t===null&&(t=new Ew(i)),p=f?t.fromEquirectangular(c,p):t.fromCubemap(c,p),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),p.texture;if(p!==void 0)return p.texture;{const v=c.image;return f&&v&&v.height>0||h&&v&&r(v)?(t===null&&(t=new Ew(i)),p=f?t.fromEquirectangular(c):t.fromCubemap(c),p.texture.pmremVersion=c.pmremVersion,e.set(c,p),c.addEventListener("dispose",s),p.texture):null}}}return c}function r(c){let u=0;const f=6;for(let h=0;h<f;h++)c[h]!==void 0&&u++;return u===f}function s(c){const u=c.target;u.removeEventListener("dispose",s);const f=e.get(u);f!==void 0&&(e.delete(u),f.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Mz(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(n){const r=t(n);return r===null&&sh("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function Ez(i,e,t,n){const r={},s=new WeakMap;function o(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);for(const y in m.morphAttributes){const S=m.morphAttributes[y];for(let _=0,g=S.length;_<g;_++)e.remove(S[_])}m.removeEventListener("dispose",o),delete r[m.id];const v=s.get(m);v&&(e.remove(v),s.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return r[m.id]===!0||(m.addEventListener("dispose",o),r[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],i.ARRAY_BUFFER);const v=p.morphAttributes;for(const y in v){const S=v[y];for(let _=0,g=S.length;_<g;_++)e.update(S[_],i.ARRAY_BUFFER)}}function f(p){const m=[],v=p.index,y=p.attributes.position;let S=0;if(v!==null){const b=v.array;S=v.version;for(let E=0,T=b.length;E<T;E+=3){const L=b[E+0],C=b[E+1],P=b[E+2];m.push(L,C,C,P,P,L)}}else if(y!==void 0){const b=y.array;S=y.version;for(let E=0,T=b.length/3-1;E<T;E+=3){const L=E+0,C=E+1,P=E+2;m.push(L,C,C,P,P,L)}}else return;const _=new(tR(m)?aR:sR)(m,1);_.version=S;const g=s.get(p);g&&e.remove(g),s.set(p,_)}function h(p){const m=s.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&f(p)}else f(p);return s.get(p)}return{get:c,update:u,getWireframeAttribute:h}}function Tz(i,e,t){let n;function r(m){n=m}let s,o;function c(m){s=m.type,o=m.bytesPerElement}function u(m,v){i.drawElements(n,v,s,m*o),t.update(v,n,1)}function f(m,v,y){y!==0&&(i.drawElementsInstanced(n,v,s,m*o,y),t.update(v,n,y))}function h(m,v,y){if(y===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,v,0,s,m,0,y);let _=0;for(let g=0;g<y;g++)_+=v[g];t.update(_,n,1)}function p(m,v,y,S){if(y===0)return;const _=e.get("WEBGL_multi_draw");if(_===null)for(let g=0;g<m.length;g++)f(m[g]/o,v[g],S[g]);else{_.multiDrawElementsInstancedWEBGL(n,v,0,s,m,0,S,0,y);let g=0;for(let b=0;b<y;b++)g+=v[b];for(let b=0;b<S.length;b++)t.update(g,n,S[b])}}this.setMode=r,this.setIndex=c,this.render=u,this.renderInstances=f,this.renderMultiDraw=h,this.renderMultiDrawInstances=p}function wz(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,c){switch(t.calls++,o){case i.TRIANGLES:t.triangles+=c*(s/3);break;case i.LINES:t.lines+=c*(s/2);break;case i.LINE_STRIP:t.lines+=c*(s-1);break;case i.LINE_LOOP:t.lines+=c*s;break;case i.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function bz(i,e,t){const n=new WeakMap,r=new gi;function s(o,c,u){const f=o.morphTargetInfluences,h=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,p=h!==void 0?h.length:0;let m=n.get(c);if(m===void 0||m.count!==p){let w=function(){N.dispose(),n.delete(c),c.removeEventListener("dispose",w)};var v=w;m!==void 0&&m.texture.dispose();const y=c.morphAttributes.position!==void 0,S=c.morphAttributes.normal!==void 0,_=c.morphAttributes.color!==void 0,g=c.morphAttributes.position||[],b=c.morphAttributes.normal||[],E=c.morphAttributes.color||[];let T=0;y===!0&&(T=1),S===!0&&(T=2),_===!0&&(T=3);let L=c.attributes.position.count*T,C=1;L>e.maxTextureSize&&(C=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const P=new Float32Array(L*C*4*p),N=new iR(P,L,C,p);N.type=xa,N.needsUpdate=!0;const A=T*4;for(let D=0;D<p;D++){const X=g[D],z=b[D],G=E[D],Z=L*C*4*D;for(let q=0;q<X.count;q++){const K=q*A;y===!0&&(r.fromBufferAttribute(X,q),P[Z+K+0]=r.x,P[Z+K+1]=r.y,P[Z+K+2]=r.z,P[Z+K+3]=0),S===!0&&(r.fromBufferAttribute(z,q),P[Z+K+4]=r.x,P[Z+K+5]=r.y,P[Z+K+6]=r.z,P[Z+K+7]=0),_===!0&&(r.fromBufferAttribute(G,q),P[Z+K+8]=r.x,P[Z+K+9]=r.y,P[Z+K+10]=r.z,P[Z+K+11]=G.itemSize===4?r.w:1)}}m={count:p,texture:N,size:new Kt(L,C)},n.set(c,m),c.addEventListener("dispose",w)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)u.getUniforms().setValue(i,"morphTexture",o.morphTexture,t);else{let y=0;for(let _=0;_<f.length;_++)y+=f[_];const S=c.morphTargetsRelative?1:1-y;u.getUniforms().setValue(i,"morphTargetBaseInfluence",S),u.getUniforms().setValue(i,"morphTargetInfluences",f)}u.getUniforms().setValue(i,"morphTargetsTexture",m.texture,t),u.getUniforms().setValue(i,"morphTargetsTextureSize",m.size)}return{update:s}}function Az(i,e,t,n){let r=new WeakMap;function s(u){const f=n.render.frame,h=u.geometry,p=e.get(u,h);if(r.get(p)!==f&&(e.update(p),r.set(p,f)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),r.get(u)!==f&&(t.update(u.instanceMatrix,i.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,i.ARRAY_BUFFER),r.set(u,f))),u.isSkinnedMesh){const m=u.skeleton;r.get(m)!==f&&(m.update(),r.set(m,f))}return p}function o(){r=new WeakMap}function c(u){const f=u.target;f.removeEventListener("dispose",c),t.remove(f.instanceMatrix),f.instanceColor!==null&&t.remove(f.instanceColor)}return{update:s,dispose:o}}class dR extends ur{constructor(e,t,n,r,s,o,c,u,f,h=ru){if(h!==ru&&h!==Pu)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===ru&&(n=Ol),n===void 0&&h===Pu&&(n=Cu),super(null,r,s,o,c,u,h,n,f),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:jr,this.minFilter=u!==void 0?u:jr,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}const pR=new ur,Aw=new dR(1,1),mR=new iR,gR=new h7,_R=new cR,Rw=[],Cw=[],Pw=new Float32Array(16),Lw=new Float32Array(9),Iw=new Float32Array(4);function Bu(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=Rw[r];if(s===void 0&&(s=new Float32Array(r),Rw[r]=s),e!==0){n.toArray(s,0);for(let o=1,c=0;o!==e;++o)c+=t,i[o].toArray(s,c)}return s}function ni(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function ii(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function s0(i,e){let t=Cw[e];t===void 0&&(t=new Int32Array(e),Cw[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function Rz(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function Cz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ni(t,e))return;i.uniform2fv(this.addr,e),ii(t,e)}}function Pz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ni(t,e))return;i.uniform3fv(this.addr,e),ii(t,e)}}function Lz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ni(t,e))return;i.uniform4fv(this.addr,e),ii(t,e)}}function Iz(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(ni(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),ii(t,e)}else{if(ni(t,n))return;Iw.set(n),i.uniformMatrix2fv(this.addr,!1,Iw),ii(t,n)}}function Dz(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(ni(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),ii(t,e)}else{if(ni(t,n))return;Lw.set(n),i.uniformMatrix3fv(this.addr,!1,Lw),ii(t,n)}}function Nz(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(ni(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),ii(t,e)}else{if(ni(t,n))return;Pw.set(n),i.uniformMatrix4fv(this.addr,!1,Pw),ii(t,n)}}function Uz(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function Oz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ni(t,e))return;i.uniform2iv(this.addr,e),ii(t,e)}}function Fz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ni(t,e))return;i.uniform3iv(this.addr,e),ii(t,e)}}function kz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ni(t,e))return;i.uniform4iv(this.addr,e),ii(t,e)}}function Bz(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function zz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ni(t,e))return;i.uniform2uiv(this.addr,e),ii(t,e)}}function Hz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ni(t,e))return;i.uniform3uiv(this.addr,e),ii(t,e)}}function Vz(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ni(t,e))return;i.uniform4uiv(this.addr,e),ii(t,e)}}function Gz(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r);let s;this.type===i.SAMPLER_2D_SHADOW?(Aw.compareFunction=eR,s=Aw):s=pR,t.setTexture2D(e||s,r)}function Wz(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||gR,r)}function Xz(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||_R,r)}function $z(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||mR,r)}function jz(i){switch(i){case 5126:return Rz;case 35664:return Cz;case 35665:return Pz;case 35666:return Lz;case 35674:return Iz;case 35675:return Dz;case 35676:return Nz;case 5124:case 35670:return Uz;case 35667:case 35671:return Oz;case 35668:case 35672:return Fz;case 35669:case 35673:return kz;case 5125:return Bz;case 36294:return zz;case 36295:return Hz;case 36296:return Vz;case 35678:case 36198:case 36298:case 36306:case 35682:return Gz;case 35679:case 36299:case 36307:return Wz;case 35680:case 36300:case 36308:case 36293:return Xz;case 36289:case 36303:case 36311:case 36292:return $z}}function qz(i,e){i.uniform1fv(this.addr,e)}function Yz(i,e){const t=Bu(e,this.size,2);i.uniform2fv(this.addr,t)}function Kz(i,e){const t=Bu(e,this.size,3);i.uniform3fv(this.addr,t)}function Zz(i,e){const t=Bu(e,this.size,4);i.uniform4fv(this.addr,t)}function Qz(i,e){const t=Bu(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function Jz(i,e){const t=Bu(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function eH(i,e){const t=Bu(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function tH(i,e){i.uniform1iv(this.addr,e)}function nH(i,e){i.uniform2iv(this.addr,e)}function iH(i,e){i.uniform3iv(this.addr,e)}function rH(i,e){i.uniform4iv(this.addr,e)}function sH(i,e){i.uniform1uiv(this.addr,e)}function aH(i,e){i.uniform2uiv(this.addr,e)}function oH(i,e){i.uniform3uiv(this.addr,e)}function lH(i,e){i.uniform4uiv(this.addr,e)}function cH(i,e,t){const n=this.cache,r=e.length,s=s0(t,r);ni(n,s)||(i.uniform1iv(this.addr,s),ii(n,s));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||pR,s[o])}function uH(i,e,t){const n=this.cache,r=e.length,s=s0(t,r);ni(n,s)||(i.uniform1iv(this.addr,s),ii(n,s));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||gR,s[o])}function fH(i,e,t){const n=this.cache,r=e.length,s=s0(t,r);ni(n,s)||(i.uniform1iv(this.addr,s),ii(n,s));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||_R,s[o])}function hH(i,e,t){const n=this.cache,r=e.length,s=s0(t,r);ni(n,s)||(i.uniform1iv(this.addr,s),ii(n,s));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||mR,s[o])}function dH(i){switch(i){case 5126:return qz;case 35664:return Yz;case 35665:return Kz;case 35666:return Zz;case 35674:return Qz;case 35675:return Jz;case 35676:return eH;case 5124:case 35670:return tH;case 35667:case 35671:return nH;case 35668:case 35672:return iH;case 35669:case 35673:return rH;case 5125:return sH;case 36294:return aH;case 36295:return oH;case 36296:return lH;case 35678:case 36198:case 36298:case 36306:case 35682:return cH;case 35679:case 36299:case 36307:return uH;case 35680:case 36300:case 36308:case 36293:return fH;case 36289:case 36303:case 36311:case 36292:return hH}}class pH{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.setValue=jz(t.type)}}class mH{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=dH(t.type)}}class gH{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const c=r[s];c.setValue(e,t[c.id],n)}}}const ov=/(\w+)(\])?(\[|\.)?/g;function Dw(i,e){i.seq.push(e),i.map[e.id]=e}function _H(i,e,t){const n=i.name,r=n.length;for(ov.lastIndex=0;;){const s=ov.exec(n),o=ov.lastIndex;let c=s[1];const u=s[2]==="]",f=s[3];if(u&&(c=c|0),f===void 0||f==="["&&o+2===r){Dw(t,f===void 0?new pH(c,i,e):new mH(c,i,e));break}else{let p=t.map[c];p===void 0&&(p=new gH(c),Dw(t,p)),t=p}}}class fm{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);_H(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function Nw(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}const vH=37297;let xH=0;function yH(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const c=o+1;n.push(`${c===e?">":" "} ${c}: ${t[o]}`)}return n.join(`
`)}function SH(i){const e=an.getPrimaries(an.workingColorSpace),t=an.getPrimaries(i);let n;switch(e===t?n="":e===Dm&&t===Im?n="LinearDisplayP3ToLinearSRGB":e===Im&&t===Dm&&(n="LinearSRGBToLinearDisplayP3"),i){case Uo:case i0:return[n,"LinearTransferOETF"];case bs:case Sy:return[n,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",i),[n,"LinearTransferOETF"]}}function Uw(i,e,t){const n=i.getShaderParameter(e,i.COMPILE_STATUS),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+yH(i.getShaderSource(e),o)}else return r}function MH(i,e){const t=SH(e);return`vec4 ${i}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`}function EH(i,e){let t;switch(e){case B9:t="Linear";break;case z9:t="Reinhard";break;case H9:t="Cineon";break;case V9:t="ACESFilmic";break;case W9:t="AgX";break;case X9:t="Neutral";break;case G9:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Np=new me;function TH(){an.getLuminanceCoefficients(Np);const i=Np.x.toFixed(4),e=Np.y.toFixed(4),t=Np.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${i}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function wH(i){return[i.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",i.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(qf).join(`
`)}function bH(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function AH(i,e){const t={},n=i.getProgramParameter(e,i.ACTIVE_ATTRIBUTES);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let c=1;s.type===i.FLOAT_MAT2&&(c=2),s.type===i.FLOAT_MAT3&&(c=3),s.type===i.FLOAT_MAT4&&(c=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:c}}return t}function qf(i){return i!==""}function Ow(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Fw(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const RH=/^[ \t]*#include +<([\w\d./]+)>/gm;function vx(i){return i.replace(RH,PH)}const CH=new Map;function PH(i,e){let t=kt[e];if(t===void 0){const n=CH.get(e);if(n!==void 0)t=kt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,n);else throw new Error("Can not resolve #include <"+e+">")}return vx(t)}const LH=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function kw(i){return i.replace(LH,IH)}function IH(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Bw(i){let e=`precision ${i.precision} float;
	precision ${i.precision} int;
	precision ${i.precision} sampler2D;
	precision ${i.precision} samplerCube;
	precision ${i.precision} sampler3D;
	precision ${i.precision} sampler2DArray;
	precision ${i.precision} sampler2DShadow;
	precision ${i.precision} samplerCubeShadow;
	precision ${i.precision} sampler2DArrayShadow;
	precision ${i.precision} isampler2D;
	precision ${i.precision} isampler3D;
	precision ${i.precision} isamplerCube;
	precision ${i.precision} isampler2DArray;
	precision ${i.precision} usampler2D;
	precision ${i.precision} usampler3D;
	precision ${i.precision} usamplerCube;
	precision ${i.precision} usampler2DArray;
	`;return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function DH(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===HA?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===f9?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===fa&&(e="SHADOWMAP_TYPE_VSM"),e}function NH(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Au:case Ru:e="ENVMAP_TYPE_CUBE";break;case n0:e="ENVMAP_TYPE_CUBE_UV";break}return e}function UH(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Ru:e="ENVMAP_MODE_REFRACTION";break}return e}function OH(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case VA:e="ENVMAP_BLENDING_MULTIPLY";break;case F9:e="ENVMAP_BLENDING_MIX";break;case k9:e="ENVMAP_BLENDING_ADD";break}return e}function FH(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:n,maxMip:t}}function kH(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,c=t.fragmentShader;const u=DH(t),f=NH(t),h=UH(t),p=OH(t),m=FH(t),v=wH(t),y=bH(s),S=r.createProgram();let _,g,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(qf).join(`
`),_.length>0&&(_+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y].filter(qf).join(`
`),g.length>0&&(g+=`
`)):(_=[Bw(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(qf).join(`
`),g=[Bw(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+f:"",t.envMap?"#define "+h:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ro?"#define TONE_MAPPING":"",t.toneMapping!==Ro?kt.tonemapping_pars_fragment:"",t.toneMapping!==Ro?EH("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",kt.colorspace_pars_fragment,MH("linearToOutputTexel",t.outputColorSpace),TH(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(qf).join(`
`)),o=vx(o),o=Ow(o,t),o=Fw(o,t),c=vx(c),c=Ow(c,t),c=Fw(c,t),o=kw(o),c=kw(c),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,_=[v,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,g=["#define varying in",t.glslVersion===ew?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ew?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const E=b+_+o,T=b+g+c,L=Nw(r,r.VERTEX_SHADER,E),C=Nw(r,r.FRAGMENT_SHADER,T);r.attachShader(S,L),r.attachShader(S,C),t.index0AttributeName!==void 0?r.bindAttribLocation(S,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(S,0,"position"),r.linkProgram(S);function P(D){if(i.debug.checkShaderErrors){const X=r.getProgramInfoLog(S).trim(),z=r.getShaderInfoLog(L).trim(),G=r.getShaderInfoLog(C).trim();let Z=!0,q=!0;if(r.getProgramParameter(S,r.LINK_STATUS)===!1)if(Z=!1,typeof i.debug.onShaderError=="function")i.debug.onShaderError(r,S,L,C);else{const K=Uw(r,L,"vertex"),B=Uw(r,C,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(S,r.VALIDATE_STATUS)+`

Material Name: `+D.name+`
Material Type: `+D.type+`

Program Info Log: `+X+`
`+K+`
`+B)}else X!==""?console.warn("THREE.WebGLProgram: Program Info Log:",X):(z===""||G==="")&&(q=!1);q&&(D.diagnostics={runnable:Z,programLog:X,vertexShader:{log:z,prefix:_},fragmentShader:{log:G,prefix:g}})}r.deleteShader(L),r.deleteShader(C),N=new fm(r,S),A=AH(r,S)}let N;this.getUniforms=function(){return N===void 0&&P(this),N};let A;this.getAttributes=function(){return A===void 0&&P(this),A};let w=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return w===!1&&(w=r.getProgramParameter(S,vH)),w},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(S),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=xH++,this.cacheKey=e,this.usedTimes=1,this.program=S,this.vertexShader=L,this.fragmentShader=C,this}let BH=0;class zH{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new HH(e),t.set(e,n)),n}}class HH{constructor(e){this.id=BH++,this.code=e,this.usedTimes=0}}function VH(i,e,t,n,r,s,o){const c=new Ey,u=new zH,f=new Set,h=[],p=r.logarithmicDepthBuffer,m=r.vertexTextures;let v=r.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function S(A){return f.add(A),A===0?"uv":`uv${A}`}function _(A,w,D,X,z){const G=X.fog,Z=z.geometry,q=A.isMeshStandardMaterial?X.environment:null,K=(A.isMeshStandardMaterial?t:e).get(A.envMap||q),B=K&&K.mapping===n0?K.image.height:null,ie=y[A.type];A.precision!==null&&(v=r.getMaxPrecision(A.precision),v!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",v,"instead."));const oe=Z.morphAttributes.position||Z.morphAttributes.normal||Z.morphAttributes.color,V=oe!==void 0?oe.length:0;let de=0;Z.morphAttributes.position!==void 0&&(de=1),Z.morphAttributes.normal!==void 0&&(de=2),Z.morphAttributes.color!==void 0&&(de=3);let Ge,j,fe,Re;if(ie){const St=Ps[ie];Ge=St.vertexShader,j=St.fragmentShader}else Ge=A.vertexShader,j=A.fragmentShader,u.update(A),fe=u.getVertexShaderID(A),Re=u.getFragmentShaderID(A);const Ee=i.getRenderTarget(),Fe=z.isInstancedMesh===!0,He=z.isBatchedMesh===!0,$e=!!A.map,wt=!!A.matcap,ee=!!K,Tt=!!A.aoMap,te=!!A.lightMap,Lt=!!A.bumpMap,st=!!A.normalMap,Pt=!!A.displacementMap,Ve=!!A.emissiveMap,ot=!!A.metalnessMap,W=!!A.roughnessMap,O=A.anisotropy>0,be=A.clearcoat>0,k=A.dispersion>0,I=A.iridescence>0,Y=A.sheen>0,Me=A.transmission>0,ye=O&&!!A.anisotropyMap,ge=be&&!!A.clearcoatMap,qe=be&&!!A.clearcoatNormalMap,Te=be&&!!A.clearcoatRoughnessMap,ze=I&&!!A.iridescenceMap,tt=I&&!!A.iridescenceThicknessMap,Ie=Y&&!!A.sheenColorMap,ke=Y&&!!A.sheenRoughnessMap,Je=!!A.specularMap,nt=!!A.specularColorMap,We=!!A.specularIntensityMap,ne=Me&&!!A.transmissionMap,$=Me&&!!A.thicknessMap,ve=!!A.gradientMap,le=!!A.alphaMap,Pe=A.alphaTest>0,Ue=!!A.alphaHash,Ne=!!A.extensions;let at=Ro;A.toneMapped&&(Ee===null||Ee.isXRRenderTarget===!0)&&(at=i.toneMapping);const mt={shaderID:ie,shaderType:A.type,shaderName:A.name,vertexShader:Ge,fragmentShader:j,defines:A.defines,customVertexShaderID:fe,customFragmentShaderID:Re,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:v,batching:He,batchingColor:He&&z._colorsTexture!==null,instancing:Fe,instancingColor:Fe&&z.instanceColor!==null,instancingMorph:Fe&&z.morphTexture!==null,supportsVertexTextures:m,outputColorSpace:Ee===null?i.outputColorSpace:Ee.isXRRenderTarget===!0?Ee.texture.colorSpace:Uo,alphaToCoverage:!!A.alphaToCoverage,map:$e,matcap:wt,envMap:ee,envMapMode:ee&&K.mapping,envMapCubeUVHeight:B,aoMap:Tt,lightMap:te,bumpMap:Lt,normalMap:st,displacementMap:m&&Pt,emissiveMap:Ve,normalMapObjectSpace:st&&A.normalMapType===K9,normalMapTangentSpace:st&&A.normalMapType===Y9,metalnessMap:ot,roughnessMap:W,anisotropy:O,anisotropyMap:ye,clearcoat:be,clearcoatMap:ge,clearcoatNormalMap:qe,clearcoatRoughnessMap:Te,dispersion:k,iridescence:I,iridescenceMap:ze,iridescenceThicknessMap:tt,sheen:Y,sheenColorMap:Ie,sheenRoughnessMap:ke,specularMap:Je,specularColorMap:nt,specularIntensityMap:We,transmission:Me,transmissionMap:ne,thicknessMap:$,gradientMap:ve,opaque:A.transparent===!1&&A.blending===iu&&A.alphaToCoverage===!1,alphaMap:le,alphaTest:Pe,alphaHash:Ue,combine:A.combine,mapUv:$e&&S(A.map.channel),aoMapUv:Tt&&S(A.aoMap.channel),lightMapUv:te&&S(A.lightMap.channel),bumpMapUv:Lt&&S(A.bumpMap.channel),normalMapUv:st&&S(A.normalMap.channel),displacementMapUv:Pt&&S(A.displacementMap.channel),emissiveMapUv:Ve&&S(A.emissiveMap.channel),metalnessMapUv:ot&&S(A.metalnessMap.channel),roughnessMapUv:W&&S(A.roughnessMap.channel),anisotropyMapUv:ye&&S(A.anisotropyMap.channel),clearcoatMapUv:ge&&S(A.clearcoatMap.channel),clearcoatNormalMapUv:qe&&S(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Te&&S(A.clearcoatRoughnessMap.channel),iridescenceMapUv:ze&&S(A.iridescenceMap.channel),iridescenceThicknessMapUv:tt&&S(A.iridescenceThicknessMap.channel),sheenColorMapUv:Ie&&S(A.sheenColorMap.channel),sheenRoughnessMapUv:ke&&S(A.sheenRoughnessMap.channel),specularMapUv:Je&&S(A.specularMap.channel),specularColorMapUv:nt&&S(A.specularColorMap.channel),specularIntensityMapUv:We&&S(A.specularIntensityMap.channel),transmissionMapUv:ne&&S(A.transmissionMap.channel),thicknessMapUv:$&&S(A.thicknessMap.channel),alphaMapUv:le&&S(A.alphaMap.channel),vertexTangents:!!Z.attributes.tangent&&(st||O),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!Z.attributes.color&&Z.attributes.color.itemSize===4,pointsUvs:z.isPoints===!0&&!!Z.attributes.uv&&($e||le),fog:!!G,useFog:A.fog===!0,fogExp2:!!G&&G.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:z.isSkinnedMesh===!0,morphTargets:Z.morphAttributes.position!==void 0,morphNormals:Z.morphAttributes.normal!==void 0,morphColors:Z.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:de,numDirLights:w.directional.length,numPointLights:w.point.length,numSpotLights:w.spot.length,numSpotLightMaps:w.spotLightMap.length,numRectAreaLights:w.rectArea.length,numHemiLights:w.hemi.length,numDirLightShadows:w.directionalShadowMap.length,numPointLightShadows:w.pointShadowMap.length,numSpotLightShadows:w.spotShadowMap.length,numSpotLightShadowsWithMaps:w.numSpotLightShadowsWithMaps,numLightProbes:w.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:A.dithering,shadowMapEnabled:i.shadowMap.enabled&&D.length>0,shadowMapType:i.shadowMap.type,toneMapping:at,decodeVideoTexture:$e&&A.map.isVideoTexture===!0&&an.getTransfer(A.map.colorSpace)===Mn,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Is,flipSided:A.side===cr,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionClipCullDistance:Ne&&A.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ne&&A.extensions.multiDraw===!0||He)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:A.customProgramCacheKey()};return mt.vertexUv1s=f.has(1),mt.vertexUv2s=f.has(2),mt.vertexUv3s=f.has(3),f.clear(),mt}function g(A){const w=[];if(A.shaderID?w.push(A.shaderID):(w.push(A.customVertexShaderID),w.push(A.customFragmentShaderID)),A.defines!==void 0)for(const D in A.defines)w.push(D),w.push(A.defines[D]);return A.isRawShaderMaterial===!1&&(b(w,A),E(w,A),w.push(i.outputColorSpace)),w.push(A.customProgramCacheKey),w.join()}function b(A,w){A.push(w.precision),A.push(w.outputColorSpace),A.push(w.envMapMode),A.push(w.envMapCubeUVHeight),A.push(w.mapUv),A.push(w.alphaMapUv),A.push(w.lightMapUv),A.push(w.aoMapUv),A.push(w.bumpMapUv),A.push(w.normalMapUv),A.push(w.displacementMapUv),A.push(w.emissiveMapUv),A.push(w.metalnessMapUv),A.push(w.roughnessMapUv),A.push(w.anisotropyMapUv),A.push(w.clearcoatMapUv),A.push(w.clearcoatNormalMapUv),A.push(w.clearcoatRoughnessMapUv),A.push(w.iridescenceMapUv),A.push(w.iridescenceThicknessMapUv),A.push(w.sheenColorMapUv),A.push(w.sheenRoughnessMapUv),A.push(w.specularMapUv),A.push(w.specularColorMapUv),A.push(w.specularIntensityMapUv),A.push(w.transmissionMapUv),A.push(w.thicknessMapUv),A.push(w.combine),A.push(w.fogExp2),A.push(w.sizeAttenuation),A.push(w.morphTargetsCount),A.push(w.morphAttributeCount),A.push(w.numDirLights),A.push(w.numPointLights),A.push(w.numSpotLights),A.push(w.numSpotLightMaps),A.push(w.numHemiLights),A.push(w.numRectAreaLights),A.push(w.numDirLightShadows),A.push(w.numPointLightShadows),A.push(w.numSpotLightShadows),A.push(w.numSpotLightShadowsWithMaps),A.push(w.numLightProbes),A.push(w.shadowMapType),A.push(w.toneMapping),A.push(w.numClippingPlanes),A.push(w.numClipIntersection),A.push(w.depthPacking)}function E(A,w){c.disableAll(),w.supportsVertexTextures&&c.enable(0),w.instancing&&c.enable(1),w.instancingColor&&c.enable(2),w.instancingMorph&&c.enable(3),w.matcap&&c.enable(4),w.envMap&&c.enable(5),w.normalMapObjectSpace&&c.enable(6),w.normalMapTangentSpace&&c.enable(7),w.clearcoat&&c.enable(8),w.iridescence&&c.enable(9),w.alphaTest&&c.enable(10),w.vertexColors&&c.enable(11),w.vertexAlphas&&c.enable(12),w.vertexUv1s&&c.enable(13),w.vertexUv2s&&c.enable(14),w.vertexUv3s&&c.enable(15),w.vertexTangents&&c.enable(16),w.anisotropy&&c.enable(17),w.alphaHash&&c.enable(18),w.batching&&c.enable(19),w.dispersion&&c.enable(20),w.batchingColor&&c.enable(21),A.push(c.mask),c.disableAll(),w.fog&&c.enable(0),w.useFog&&c.enable(1),w.flatShading&&c.enable(2),w.logarithmicDepthBuffer&&c.enable(3),w.skinning&&c.enable(4),w.morphTargets&&c.enable(5),w.morphNormals&&c.enable(6),w.morphColors&&c.enable(7),w.premultipliedAlpha&&c.enable(8),w.shadowMapEnabled&&c.enable(9),w.doubleSided&&c.enable(10),w.flipSided&&c.enable(11),w.useDepthPacking&&c.enable(12),w.dithering&&c.enable(13),w.transmission&&c.enable(14),w.sheen&&c.enable(15),w.opaque&&c.enable(16),w.pointsUvs&&c.enable(17),w.decodeVideoTexture&&c.enable(18),w.alphaToCoverage&&c.enable(19),A.push(c.mask)}function T(A){const w=y[A.type];let D;if(w){const X=Ps[w];D=T7.clone(X.uniforms)}else D=A.uniforms;return D}function L(A,w){let D;for(let X=0,z=h.length;X<z;X++){const G=h[X];if(G.cacheKey===w){D=G,++D.usedTimes;break}}return D===void 0&&(D=new kH(i,w,A,s),h.push(D)),D}function C(A){if(--A.usedTimes===0){const w=h.indexOf(A);h[w]=h[h.length-1],h.pop(),A.destroy()}}function P(A){u.remove(A)}function N(){u.dispose()}return{getParameters:_,getProgramCacheKey:g,getUniforms:T,acquireProgram:L,releaseProgram:C,releaseShaderCache:P,programs:h,dispose:N}}function GH(){let i=new WeakMap;function e(o){return i.has(o)}function t(o){let c=i.get(o);return c===void 0&&(c={},i.set(o,c)),c}function n(o){i.delete(o)}function r(o,c,u){i.get(o)[c]=u}function s(){i=new WeakMap}return{has:e,get:t,remove:n,update:r,dispose:s}}function WH(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function zw(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Hw(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(p,m,v,y,S,_){let g=i[e];return g===void 0?(g={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:S,group:_},i[e]=g):(g.id=p.id,g.object=p,g.geometry=m,g.material=v,g.groupOrder=y,g.renderOrder=p.renderOrder,g.z=S,g.group=_),e++,g}function c(p,m,v,y,S,_){const g=o(p,m,v,y,S,_);v.transmission>0?n.push(g):v.transparent===!0?r.push(g):t.push(g)}function u(p,m,v,y,S,_){const g=o(p,m,v,y,S,_);v.transmission>0?n.unshift(g):v.transparent===!0?r.unshift(g):t.unshift(g)}function f(p,m){t.length>1&&t.sort(p||WH),n.length>1&&n.sort(m||zw),r.length>1&&r.sort(m||zw)}function h(){for(let p=e,m=i.length;p<m;p++){const v=i[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:c,unshift:u,finish:h,sort:f}}function XH(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new Hw,i.set(n,[o])):r>=s.length?(o=new Hw,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function $H(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new me,color:new fn};break;case"SpotLight":t={position:new me,direction:new me,color:new fn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new me,color:new fn,distance:0,decay:0};break;case"HemisphereLight":t={direction:new me,skyColor:new fn,groundColor:new fn};break;case"RectAreaLight":t={color:new fn,position:new me,halfWidth:new me,halfHeight:new me};break}return i[e.id]=t,t}}}function jH(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kt};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kt};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Kt,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let qH=0;function YH(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function KH(i){const e=new $H,t=jH(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let f=0;f<9;f++)n.probe.push(new me);const r=new me,s=new In,o=new In;function c(f){let h=0,p=0,m=0;for(let A=0;A<9;A++)n.probe[A].set(0,0,0);let v=0,y=0,S=0,_=0,g=0,b=0,E=0,T=0,L=0,C=0,P=0;f.sort(YH);for(let A=0,w=f.length;A<w;A++){const D=f[A],X=D.color,z=D.intensity,G=D.distance,Z=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)h+=X.r*z,p+=X.g*z,m+=X.b*z;else if(D.isLightProbe){for(let q=0;q<9;q++)n.probe[q].addScaledVector(D.sh.coefficients[q],z);P++}else if(D.isDirectionalLight){const q=e.get(D);if(q.color.copy(D.color).multiplyScalar(D.intensity),D.castShadow){const K=D.shadow,B=t.get(D);B.shadowIntensity=K.intensity,B.shadowBias=K.bias,B.shadowNormalBias=K.normalBias,B.shadowRadius=K.radius,B.shadowMapSize=K.mapSize,n.directionalShadow[v]=B,n.directionalShadowMap[v]=Z,n.directionalShadowMatrix[v]=D.shadow.matrix,b++}n.directional[v]=q,v++}else if(D.isSpotLight){const q=e.get(D);q.position.setFromMatrixPosition(D.matrixWorld),q.color.copy(X).multiplyScalar(z),q.distance=G,q.coneCos=Math.cos(D.angle),q.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),q.decay=D.decay,n.spot[S]=q;const K=D.shadow;if(D.map&&(n.spotLightMap[L]=D.map,L++,K.updateMatrices(D),D.castShadow&&C++),n.spotLightMatrix[S]=K.matrix,D.castShadow){const B=t.get(D);B.shadowIntensity=K.intensity,B.shadowBias=K.bias,B.shadowNormalBias=K.normalBias,B.shadowRadius=K.radius,B.shadowMapSize=K.mapSize,n.spotShadow[S]=B,n.spotShadowMap[S]=Z,T++}S++}else if(D.isRectAreaLight){const q=e.get(D);q.color.copy(X).multiplyScalar(z),q.halfWidth.set(D.width*.5,0,0),q.halfHeight.set(0,D.height*.5,0),n.rectArea[_]=q,_++}else if(D.isPointLight){const q=e.get(D);if(q.color.copy(D.color).multiplyScalar(D.intensity),q.distance=D.distance,q.decay=D.decay,D.castShadow){const K=D.shadow,B=t.get(D);B.shadowIntensity=K.intensity,B.shadowBias=K.bias,B.shadowNormalBias=K.normalBias,B.shadowRadius=K.radius,B.shadowMapSize=K.mapSize,B.shadowCameraNear=K.camera.near,B.shadowCameraFar=K.camera.far,n.pointShadow[y]=B,n.pointShadowMap[y]=Z,n.pointShadowMatrix[y]=D.shadow.matrix,E++}n.point[y]=q,y++}else if(D.isHemisphereLight){const q=e.get(D);q.skyColor.copy(D.color).multiplyScalar(z),q.groundColor.copy(D.groundColor).multiplyScalar(z),n.hemi[g]=q,g++}}_>0&&(i.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=ct.LTC_FLOAT_1,n.rectAreaLTC2=ct.LTC_FLOAT_2):(n.rectAreaLTC1=ct.LTC_HALF_1,n.rectAreaLTC2=ct.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=p,n.ambient[2]=m;const N=n.hash;(N.directionalLength!==v||N.pointLength!==y||N.spotLength!==S||N.rectAreaLength!==_||N.hemiLength!==g||N.numDirectionalShadows!==b||N.numPointShadows!==E||N.numSpotShadows!==T||N.numSpotMaps!==L||N.numLightProbes!==P)&&(n.directional.length=v,n.spot.length=S,n.rectArea.length=_,n.point.length=y,n.hemi.length=g,n.directionalShadow.length=b,n.directionalShadowMap.length=b,n.pointShadow.length=E,n.pointShadowMap.length=E,n.spotShadow.length=T,n.spotShadowMap.length=T,n.directionalShadowMatrix.length=b,n.pointShadowMatrix.length=E,n.spotLightMatrix.length=T+L-C,n.spotLightMap.length=L,n.numSpotLightShadowsWithMaps=C,n.numLightProbes=P,N.directionalLength=v,N.pointLength=y,N.spotLength=S,N.rectAreaLength=_,N.hemiLength=g,N.numDirectionalShadows=b,N.numPointShadows=E,N.numSpotShadows=T,N.numSpotMaps=L,N.numLightProbes=P,n.version=qH++)}function u(f,h){let p=0,m=0,v=0,y=0,S=0;const _=h.matrixWorldInverse;for(let g=0,b=f.length;g<b;g++){const E=f[g];if(E.isDirectionalLight){const T=n.directional[p];T.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(_),p++}else if(E.isSpotLight){const T=n.spot[v];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(_),T.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(_),v++}else if(E.isRectAreaLight){const T=n.rectArea[y];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(_),o.identity(),s.copy(E.matrixWorld),s.premultiply(_),o.extractRotation(s),T.halfWidth.set(E.width*.5,0,0),T.halfHeight.set(0,E.height*.5,0),T.halfWidth.applyMatrix4(o),T.halfHeight.applyMatrix4(o),y++}else if(E.isPointLight){const T=n.point[m];T.position.setFromMatrixPosition(E.matrixWorld),T.position.applyMatrix4(_),m++}else if(E.isHemisphereLight){const T=n.hemi[S];T.direction.setFromMatrixPosition(E.matrixWorld),T.direction.transformDirection(_),S++}}}return{setup:c,setupView:u,state:n}}function Vw(i){const e=new KH(i),t=[],n=[];function r(h){f.camera=h,t.length=0,n.length=0}function s(h){t.push(h)}function o(h){n.push(h)}function c(){e.setup(t)}function u(h){e.setupView(t,h)}const f={lightsArray:t,shadowsArray:n,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:f,setupLights:c,setupLightsView:u,pushLight:s,pushShadow:o}}function ZH(i){let e=new WeakMap;function t(r,s=0){const o=e.get(r);let c;return o===void 0?(c=new Vw(i),e.set(r,[c])):s>=o.length?(c=new Vw(i),o.push(c)):c=o[s],c}function n(){e=new WeakMap}return{get:t,dispose:n}}class QH extends Dh{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=j9,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class JH extends Dh{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const eV=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,tV=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function nV(i,e,t){let n=new uR;const r=new Kt,s=new Kt,o=new gi,c=new QH({depthPacking:q9}),u=new JH,f={},h=t.maxTextureSize,p={[wa]:cr,[cr]:wa,[Is]:Is},m=new No({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Kt},radius:{value:4}},vertexShader:eV,fragmentShader:tV}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new qi;y.setAttribute("position",new Fs(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const S=new dt(y,m),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=HA;let g=this.type;this.render=function(C,P,N){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||C.length===0)return;const A=i.getRenderTarget(),w=i.getActiveCubeFace(),D=i.getActiveMipmapLevel(),X=i.state;X.setBlending(Ao),X.buffers.color.setClear(1,1,1,1),X.buffers.depth.setTest(!0),X.setScissorTest(!1);const z=g!==fa&&this.type===fa,G=g===fa&&this.type!==fa;for(let Z=0,q=C.length;Z<q;Z++){const K=C[Z],B=K.shadow;if(B===void 0){console.warn("THREE.WebGLShadowMap:",K,"has no shadow.");continue}if(B.autoUpdate===!1&&B.needsUpdate===!1)continue;r.copy(B.mapSize);const ie=B.getFrameExtents();if(r.multiply(ie),s.copy(B.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(s.x=Math.floor(h/ie.x),r.x=s.x*ie.x,B.mapSize.x=s.x),r.y>h&&(s.y=Math.floor(h/ie.y),r.y=s.y*ie.y,B.mapSize.y=s.y)),B.map===null||z===!0||G===!0){const V=this.type!==fa?{minFilter:jr,magFilter:jr}:{};B.map!==null&&B.map.dispose(),B.map=new Fl(r.x,r.y,V),B.map.texture.name=K.name+".shadowMap",B.camera.updateProjectionMatrix()}i.setRenderTarget(B.map),i.clear();const oe=B.getViewportCount();for(let V=0;V<oe;V++){const de=B.getViewport(V);o.set(s.x*de.x,s.y*de.y,s.x*de.z,s.y*de.w),X.viewport(o),B.updateMatrices(K,V),n=B.getFrustum(),T(P,N,B.camera,K,this.type)}B.isPointLightShadow!==!0&&this.type===fa&&b(B,N),B.needsUpdate=!1}g=this.type,_.needsUpdate=!1,i.setRenderTarget(A,w,D)};function b(C,P){const N=e.update(S);m.defines.VSM_SAMPLES!==C.blurSamples&&(m.defines.VSM_SAMPLES=C.blurSamples,v.defines.VSM_SAMPLES=C.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),C.mapPass===null&&(C.mapPass=new Fl(r.x,r.y)),m.uniforms.shadow_pass.value=C.map.texture,m.uniforms.resolution.value=C.mapSize,m.uniforms.radius.value=C.radius,i.setRenderTarget(C.mapPass),i.clear(),i.renderBufferDirect(P,null,N,m,S,null),v.uniforms.shadow_pass.value=C.mapPass.texture,v.uniforms.resolution.value=C.mapSize,v.uniforms.radius.value=C.radius,i.setRenderTarget(C.map),i.clear(),i.renderBufferDirect(P,null,N,v,S,null)}function E(C,P,N,A){let w=null;const D=N.isPointLight===!0?C.customDistanceMaterial:C.customDepthMaterial;if(D!==void 0)w=D;else if(w=N.isPointLight===!0?u:c,i.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const X=w.uuid,z=P.uuid;let G=f[X];G===void 0&&(G={},f[X]=G);let Z=G[z];Z===void 0&&(Z=w.clone(),G[z]=Z,P.addEventListener("dispose",L)),w=Z}if(w.visible=P.visible,w.wireframe=P.wireframe,A===fa?w.side=P.shadowSide!==null?P.shadowSide:P.side:w.side=P.shadowSide!==null?P.shadowSide:p[P.side],w.alphaMap=P.alphaMap,w.alphaTest=P.alphaTest,w.map=P.map,w.clipShadows=P.clipShadows,w.clippingPlanes=P.clippingPlanes,w.clipIntersection=P.clipIntersection,w.displacementMap=P.displacementMap,w.displacementScale=P.displacementScale,w.displacementBias=P.displacementBias,w.wireframeLinewidth=P.wireframeLinewidth,w.linewidth=P.linewidth,N.isPointLight===!0&&w.isMeshDistanceMaterial===!0){const X=i.properties.get(w);X.light=N}return w}function T(C,P,N,A,w){if(C.visible===!1)return;if(C.layers.test(P.layers)&&(C.isMesh||C.isLine||C.isPoints)&&(C.castShadow||C.receiveShadow&&w===fa)&&(!C.frustumCulled||n.intersectsObject(C))){C.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,C.matrixWorld);const z=e.update(C),G=C.material;if(Array.isArray(G)){const Z=z.groups;for(let q=0,K=Z.length;q<K;q++){const B=Z[q],ie=G[B.materialIndex];if(ie&&ie.visible){const oe=E(C,ie,A,w);C.onBeforeShadow(i,C,P,N,z,oe,B),i.renderBufferDirect(N,null,z,oe,C,B),C.onAfterShadow(i,C,P,N,z,oe,B)}}}else if(G.visible){const Z=E(C,G,A,w);C.onBeforeShadow(i,C,P,N,z,Z,null),i.renderBufferDirect(N,null,z,Z,C,null),C.onAfterShadow(i,C,P,N,z,Z,null)}}const X=C.children;for(let z=0,G=X.length;z<G;z++)T(X[z],P,N,A,w)}function L(C){C.target.removeEventListener("dispose",L);for(const N in f){const A=f[N],w=C.target.uuid;w in A&&(A[w].dispose(),delete A[w])}}}function iV(i){function e(){let ne=!1;const $=new gi;let ve=null;const le=new gi(0,0,0,0);return{setMask:function(Pe){ve!==Pe&&!ne&&(i.colorMask(Pe,Pe,Pe,Pe),ve=Pe)},setLocked:function(Pe){ne=Pe},setClear:function(Pe,Ue,Ne,at,mt){mt===!0&&(Pe*=at,Ue*=at,Ne*=at),$.set(Pe,Ue,Ne,at),le.equals($)===!1&&(i.clearColor(Pe,Ue,Ne,at),le.copy($))},reset:function(){ne=!1,ve=null,le.set(-1,0,0,0)}}}function t(){let ne=!1,$=null,ve=null,le=null;return{setTest:function(Pe){Pe?Re(i.DEPTH_TEST):Ee(i.DEPTH_TEST)},setMask:function(Pe){$!==Pe&&!ne&&(i.depthMask(Pe),$=Pe)},setFunc:function(Pe){if(ve!==Pe){switch(Pe){case P9:i.depthFunc(i.NEVER);break;case L9:i.depthFunc(i.ALWAYS);break;case I9:i.depthFunc(i.LESS);break;case Pm:i.depthFunc(i.LEQUAL);break;case D9:i.depthFunc(i.EQUAL);break;case N9:i.depthFunc(i.GEQUAL);break;case U9:i.depthFunc(i.GREATER);break;case O9:i.depthFunc(i.NOTEQUAL);break;default:i.depthFunc(i.LEQUAL)}ve=Pe}},setLocked:function(Pe){ne=Pe},setClear:function(Pe){le!==Pe&&(i.clearDepth(Pe),le=Pe)},reset:function(){ne=!1,$=null,ve=null,le=null}}}function n(){let ne=!1,$=null,ve=null,le=null,Pe=null,Ue=null,Ne=null,at=null,mt=null;return{setTest:function(St){ne||(St?Re(i.STENCIL_TEST):Ee(i.STENCIL_TEST))},setMask:function(St){$!==St&&!ne&&(i.stencilMask(St),$=St)},setFunc:function(St,Ot,vn){(ve!==St||le!==Ot||Pe!==vn)&&(i.stencilFunc(St,Ot,vn),ve=St,le=Ot,Pe=vn)},setOp:function(St,Ot,vn){(Ue!==St||Ne!==Ot||at!==vn)&&(i.stencilOp(St,Ot,vn),Ue=St,Ne=Ot,at=vn)},setLocked:function(St){ne=St},setClear:function(St){mt!==St&&(i.clearStencil(St),mt=St)},reset:function(){ne=!1,$=null,ve=null,le=null,Pe=null,Ue=null,Ne=null,at=null,mt=null}}}const r=new e,s=new t,o=new n,c=new WeakMap,u=new WeakMap;let f={},h={},p=new WeakMap,m=[],v=null,y=!1,S=null,_=null,g=null,b=null,E=null,T=null,L=null,C=new fn(0,0,0),P=0,N=!1,A=null,w=null,D=null,X=null,z=null;const G=i.getParameter(i.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Z=!1,q=0;const K=i.getParameter(i.VERSION);K.indexOf("WebGL")!==-1?(q=parseFloat(/^WebGL (\d)/.exec(K)[1]),Z=q>=1):K.indexOf("OpenGL ES")!==-1&&(q=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),Z=q>=2);let B=null,ie={};const oe=i.getParameter(i.SCISSOR_BOX),V=i.getParameter(i.VIEWPORT),de=new gi().fromArray(oe),Ge=new gi().fromArray(V);function j(ne,$,ve,le){const Pe=new Uint8Array(4),Ue=i.createTexture();i.bindTexture(ne,Ue),i.texParameteri(ne,i.TEXTURE_MIN_FILTER,i.NEAREST),i.texParameteri(ne,i.TEXTURE_MAG_FILTER,i.NEAREST);for(let Ne=0;Ne<ve;Ne++)ne===i.TEXTURE_3D||ne===i.TEXTURE_2D_ARRAY?i.texImage3D($,0,i.RGBA,1,1,le,0,i.RGBA,i.UNSIGNED_BYTE,Pe):i.texImage2D($+Ne,0,i.RGBA,1,1,0,i.RGBA,i.UNSIGNED_BYTE,Pe);return Ue}const fe={};fe[i.TEXTURE_2D]=j(i.TEXTURE_2D,i.TEXTURE_2D,1),fe[i.TEXTURE_CUBE_MAP]=j(i.TEXTURE_CUBE_MAP,i.TEXTURE_CUBE_MAP_POSITIVE_X,6),fe[i.TEXTURE_2D_ARRAY]=j(i.TEXTURE_2D_ARRAY,i.TEXTURE_2D_ARRAY,1,1),fe[i.TEXTURE_3D]=j(i.TEXTURE_3D,i.TEXTURE_3D,1,1),r.setClear(0,0,0,1),s.setClear(1),o.setClear(0),Re(i.DEPTH_TEST),s.setFunc(Pm),Lt(!1),st(qT),Re(i.CULL_FACE),Tt(Ao);function Re(ne){f[ne]!==!0&&(i.enable(ne),f[ne]=!0)}function Ee(ne){f[ne]!==!1&&(i.disable(ne),f[ne]=!1)}function Fe(ne,$){return h[ne]!==$?(i.bindFramebuffer(ne,$),h[ne]=$,ne===i.DRAW_FRAMEBUFFER&&(h[i.FRAMEBUFFER]=$),ne===i.FRAMEBUFFER&&(h[i.DRAW_FRAMEBUFFER]=$),!0):!1}function He(ne,$){let ve=m,le=!1;if(ne){ve=p.get($),ve===void 0&&(ve=[],p.set($,ve));const Pe=ne.textures;if(ve.length!==Pe.length||ve[0]!==i.COLOR_ATTACHMENT0){for(let Ue=0,Ne=Pe.length;Ue<Ne;Ue++)ve[Ue]=i.COLOR_ATTACHMENT0+Ue;ve.length=Pe.length,le=!0}}else ve[0]!==i.BACK&&(ve[0]=i.BACK,le=!0);le&&i.drawBuffers(ve)}function $e(ne){return v!==ne?(i.useProgram(ne),v=ne,!0):!1}const wt={[vl]:i.FUNC_ADD,[d9]:i.FUNC_SUBTRACT,[p9]:i.FUNC_REVERSE_SUBTRACT};wt[m9]=i.MIN,wt[g9]=i.MAX;const ee={[_9]:i.ZERO,[v9]:i.ONE,[x9]:i.SRC_COLOR,[B1]:i.SRC_ALPHA,[w9]:i.SRC_ALPHA_SATURATE,[E9]:i.DST_COLOR,[S9]:i.DST_ALPHA,[y9]:i.ONE_MINUS_SRC_COLOR,[z1]:i.ONE_MINUS_SRC_ALPHA,[T9]:i.ONE_MINUS_DST_COLOR,[M9]:i.ONE_MINUS_DST_ALPHA,[b9]:i.CONSTANT_COLOR,[A9]:i.ONE_MINUS_CONSTANT_COLOR,[R9]:i.CONSTANT_ALPHA,[C9]:i.ONE_MINUS_CONSTANT_ALPHA};function Tt(ne,$,ve,le,Pe,Ue,Ne,at,mt,St){if(ne===Ao){y===!0&&(Ee(i.BLEND),y=!1);return}if(y===!1&&(Re(i.BLEND),y=!0),ne!==h9){if(ne!==S||St!==N){if((_!==vl||E!==vl)&&(i.blendEquation(i.FUNC_ADD),_=vl,E=vl),St)switch(ne){case iu:i.blendFuncSeparate(i.ONE,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case YT:i.blendFunc(i.ONE,i.ONE);break;case KT:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case ZT:i.blendFuncSeparate(i.ZERO,i.SRC_COLOR,i.ZERO,i.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",ne);break}else switch(ne){case iu:i.blendFuncSeparate(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA,i.ONE,i.ONE_MINUS_SRC_ALPHA);break;case YT:i.blendFunc(i.SRC_ALPHA,i.ONE);break;case KT:i.blendFuncSeparate(i.ZERO,i.ONE_MINUS_SRC_COLOR,i.ZERO,i.ONE);break;case ZT:i.blendFunc(i.ZERO,i.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",ne);break}g=null,b=null,T=null,L=null,C.set(0,0,0),P=0,S=ne,N=St}return}Pe=Pe||$,Ue=Ue||ve,Ne=Ne||le,($!==_||Pe!==E)&&(i.blendEquationSeparate(wt[$],wt[Pe]),_=$,E=Pe),(ve!==g||le!==b||Ue!==T||Ne!==L)&&(i.blendFuncSeparate(ee[ve],ee[le],ee[Ue],ee[Ne]),g=ve,b=le,T=Ue,L=Ne),(at.equals(C)===!1||mt!==P)&&(i.blendColor(at.r,at.g,at.b,mt),C.copy(at),P=mt),S=ne,N=!1}function te(ne,$){ne.side===Is?Ee(i.CULL_FACE):Re(i.CULL_FACE);let ve=ne.side===cr;$&&(ve=!ve),Lt(ve),ne.blending===iu&&ne.transparent===!1?Tt(Ao):Tt(ne.blending,ne.blendEquation,ne.blendSrc,ne.blendDst,ne.blendEquationAlpha,ne.blendSrcAlpha,ne.blendDstAlpha,ne.blendColor,ne.blendAlpha,ne.premultipliedAlpha),s.setFunc(ne.depthFunc),s.setTest(ne.depthTest),s.setMask(ne.depthWrite),r.setMask(ne.colorWrite);const le=ne.stencilWrite;o.setTest(le),le&&(o.setMask(ne.stencilWriteMask),o.setFunc(ne.stencilFunc,ne.stencilRef,ne.stencilFuncMask),o.setOp(ne.stencilFail,ne.stencilZFail,ne.stencilZPass)),Ve(ne.polygonOffset,ne.polygonOffsetFactor,ne.polygonOffsetUnits),ne.alphaToCoverage===!0?Re(i.SAMPLE_ALPHA_TO_COVERAGE):Ee(i.SAMPLE_ALPHA_TO_COVERAGE)}function Lt(ne){A!==ne&&(ne?i.frontFace(i.CW):i.frontFace(i.CCW),A=ne)}function st(ne){ne!==c9?(Re(i.CULL_FACE),ne!==w&&(ne===qT?i.cullFace(i.BACK):ne===u9?i.cullFace(i.FRONT):i.cullFace(i.FRONT_AND_BACK))):Ee(i.CULL_FACE),w=ne}function Pt(ne){ne!==D&&(Z&&i.lineWidth(ne),D=ne)}function Ve(ne,$,ve){ne?(Re(i.POLYGON_OFFSET_FILL),(X!==$||z!==ve)&&(i.polygonOffset($,ve),X=$,z=ve)):Ee(i.POLYGON_OFFSET_FILL)}function ot(ne){ne?Re(i.SCISSOR_TEST):Ee(i.SCISSOR_TEST)}function W(ne){ne===void 0&&(ne=i.TEXTURE0+G-1),B!==ne&&(i.activeTexture(ne),B=ne)}function O(ne,$,ve){ve===void 0&&(B===null?ve=i.TEXTURE0+G-1:ve=B);let le=ie[ve];le===void 0&&(le={type:void 0,texture:void 0},ie[ve]=le),(le.type!==ne||le.texture!==$)&&(B!==ve&&(i.activeTexture(ve),B=ve),i.bindTexture(ne,$||fe[ne]),le.type=ne,le.texture=$)}function be(){const ne=ie[B];ne!==void 0&&ne.type!==void 0&&(i.bindTexture(ne.type,null),ne.type=void 0,ne.texture=void 0)}function k(){try{i.compressedTexImage2D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function I(){try{i.compressedTexImage3D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Y(){try{i.texSubImage2D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Me(){try{i.texSubImage3D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function ye(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function ge(){try{i.compressedTexSubImage3D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function qe(){try{i.texStorage2D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Te(){try{i.texStorage3D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function ze(){try{i.texImage2D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function tt(){try{i.texImage3D.apply(i,arguments)}catch(ne){console.error("THREE.WebGLState:",ne)}}function Ie(ne){de.equals(ne)===!1&&(i.scissor(ne.x,ne.y,ne.z,ne.w),de.copy(ne))}function ke(ne){Ge.equals(ne)===!1&&(i.viewport(ne.x,ne.y,ne.z,ne.w),Ge.copy(ne))}function Je(ne,$){let ve=u.get($);ve===void 0&&(ve=new WeakMap,u.set($,ve));let le=ve.get(ne);le===void 0&&(le=i.getUniformBlockIndex($,ne.name),ve.set(ne,le))}function nt(ne,$){const le=u.get($).get(ne);c.get($)!==le&&(i.uniformBlockBinding($,le,ne.__bindingPointIndex),c.set($,le))}function We(){i.disable(i.BLEND),i.disable(i.CULL_FACE),i.disable(i.DEPTH_TEST),i.disable(i.POLYGON_OFFSET_FILL),i.disable(i.SCISSOR_TEST),i.disable(i.STENCIL_TEST),i.disable(i.SAMPLE_ALPHA_TO_COVERAGE),i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ZERO),i.blendFuncSeparate(i.ONE,i.ZERO,i.ONE,i.ZERO),i.blendColor(0,0,0,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(i.LESS),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(i.ALWAYS,0,4294967295),i.stencilOp(i.KEEP,i.KEEP,i.KEEP),i.clearStencil(0),i.cullFace(i.BACK),i.frontFace(i.CCW),i.polygonOffset(0,0),i.activeTexture(i.TEXTURE0),i.bindFramebuffer(i.FRAMEBUFFER,null),i.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),i.bindFramebuffer(i.READ_FRAMEBUFFER,null),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),f={},B=null,ie={},h={},p=new WeakMap,m=[],v=null,y=!1,S=null,_=null,g=null,b=null,E=null,T=null,L=null,C=new fn(0,0,0),P=0,N=!1,A=null,w=null,D=null,X=null,z=null,de.set(0,0,i.canvas.width,i.canvas.height),Ge.set(0,0,i.canvas.width,i.canvas.height),r.reset(),s.reset(),o.reset()}return{buffers:{color:r,depth:s,stencil:o},enable:Re,disable:Ee,bindFramebuffer:Fe,drawBuffers:He,useProgram:$e,setBlending:Tt,setMaterial:te,setFlipSided:Lt,setCullFace:st,setLineWidth:Pt,setPolygonOffset:Ve,setScissorTest:ot,activeTexture:W,bindTexture:O,unbindTexture:be,compressedTexImage2D:k,compressedTexImage3D:I,texImage2D:ze,texImage3D:tt,updateUBOMapping:Je,uniformBlockBinding:nt,texStorage2D:qe,texStorage3D:Te,texSubImage2D:Y,texSubImage3D:Me,compressedTexSubImage2D:ye,compressedTexSubImage3D:ge,scissor:Ie,viewport:ke,reset:We}}function Gw(i,e,t,n){const r=rV(n);switch(t){case jA:return i*e;case YA:return i*e;case KA:return i*e*2;case ZA:return i*e/r.components*r.byteLength;case vy:return i*e/r.components*r.byteLength;case QA:return i*e*2/r.components*r.byteLength;case xy:return i*e*2/r.components*r.byteLength;case qA:return i*e*3/r.components*r.byteLength;case ds:return i*e*4/r.components*r.byteLength;case yy:return i*e*4/r.components*r.byteLength;case am:case om:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case lm:case cm:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case $1:case q1:return Math.max(i,16)*Math.max(e,8)/4;case X1:case j1:return Math.max(i,8)*Math.max(e,8)/2;case Y1:case K1:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*8;case Z1:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case Q1:return Math.floor((i+3)/4)*Math.floor((e+3)/4)*16;case J1:return Math.floor((i+4)/5)*Math.floor((e+3)/4)*16;case ex:return Math.floor((i+4)/5)*Math.floor((e+4)/5)*16;case tx:return Math.floor((i+5)/6)*Math.floor((e+4)/5)*16;case nx:return Math.floor((i+5)/6)*Math.floor((e+5)/6)*16;case ix:return Math.floor((i+7)/8)*Math.floor((e+4)/5)*16;case rx:return Math.floor((i+7)/8)*Math.floor((e+5)/6)*16;case sx:return Math.floor((i+7)/8)*Math.floor((e+7)/8)*16;case ax:return Math.floor((i+9)/10)*Math.floor((e+4)/5)*16;case ox:return Math.floor((i+9)/10)*Math.floor((e+5)/6)*16;case lx:return Math.floor((i+9)/10)*Math.floor((e+7)/8)*16;case cx:return Math.floor((i+9)/10)*Math.floor((e+9)/10)*16;case ux:return Math.floor((i+11)/12)*Math.floor((e+9)/10)*16;case fx:return Math.floor((i+11)/12)*Math.floor((e+11)/12)*16;case um:case hx:case dx:return Math.ceil(i/4)*Math.ceil(e/4)*16;case JA:case px:return Math.ceil(i/4)*Math.ceil(e/4)*8;case mx:case gx:return Math.ceil(i/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function rV(i){switch(i){case ba:case WA:return{byteLength:1,components:1};case Mh:case XA:case Ph:return{byteLength:2,components:1};case gy:case _y:return{byteLength:2,components:4};case Ol:case my:case xa:return{byteLength:4,components:1};case $A:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${i}.`)}function sV(i,e,t,n,r,s,o){const c=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,u=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),f=new Kt,h=new WeakMap;let p;const m=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function y(W,O){return v?new OffscreenCanvas(W,O):Um("canvas")}function S(W,O,be){let k=1;const I=ot(W);if((I.width>be||I.height>be)&&(k=be/Math.max(I.width,I.height)),k<1)if(typeof HTMLImageElement<"u"&&W instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&W instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&W instanceof ImageBitmap||typeof VideoFrame<"u"&&W instanceof VideoFrame){const Y=Math.floor(k*I.width),Me=Math.floor(k*I.height);p===void 0&&(p=y(Y,Me));const ye=O?y(Y,Me):p;return ye.width=Y,ye.height=Me,ye.getContext("2d").drawImage(W,0,0,Y,Me),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+I.width+"x"+I.height+") to ("+Y+"x"+Me+")."),ye}else return"data"in W&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+I.width+"x"+I.height+")."),W;return W}function _(W){return W.generateMipmaps&&W.minFilter!==jr&&W.minFilter!==cs}function g(W){i.generateMipmap(W)}function b(W,O,be,k,I=!1){if(W!==null){if(i[W]!==void 0)return i[W];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+W+"'")}let Y=O;if(O===i.RED&&(be===i.FLOAT&&(Y=i.R32F),be===i.HALF_FLOAT&&(Y=i.R16F),be===i.UNSIGNED_BYTE&&(Y=i.R8)),O===i.RED_INTEGER&&(be===i.UNSIGNED_BYTE&&(Y=i.R8UI),be===i.UNSIGNED_SHORT&&(Y=i.R16UI),be===i.UNSIGNED_INT&&(Y=i.R32UI),be===i.BYTE&&(Y=i.R8I),be===i.SHORT&&(Y=i.R16I),be===i.INT&&(Y=i.R32I)),O===i.RG&&(be===i.FLOAT&&(Y=i.RG32F),be===i.HALF_FLOAT&&(Y=i.RG16F),be===i.UNSIGNED_BYTE&&(Y=i.RG8)),O===i.RG_INTEGER&&(be===i.UNSIGNED_BYTE&&(Y=i.RG8UI),be===i.UNSIGNED_SHORT&&(Y=i.RG16UI),be===i.UNSIGNED_INT&&(Y=i.RG32UI),be===i.BYTE&&(Y=i.RG8I),be===i.SHORT&&(Y=i.RG16I),be===i.INT&&(Y=i.RG32I)),O===i.RGB&&be===i.UNSIGNED_INT_5_9_9_9_REV&&(Y=i.RGB9_E5),O===i.RGBA){const Me=I?Lm:an.getTransfer(k);be===i.FLOAT&&(Y=i.RGBA32F),be===i.HALF_FLOAT&&(Y=i.RGBA16F),be===i.UNSIGNED_BYTE&&(Y=Me===Mn?i.SRGB8_ALPHA8:i.RGBA8),be===i.UNSIGNED_SHORT_4_4_4_4&&(Y=i.RGBA4),be===i.UNSIGNED_SHORT_5_5_5_1&&(Y=i.RGB5_A1)}return(Y===i.R16F||Y===i.R32F||Y===i.RG16F||Y===i.RG32F||Y===i.RGBA16F||Y===i.RGBA32F)&&e.get("EXT_color_buffer_float"),Y}function E(W,O){let be;return W?O===null||O===Ol||O===Cu?be=i.DEPTH24_STENCIL8:O===xa?be=i.DEPTH32F_STENCIL8:O===Mh&&(be=i.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):O===null||O===Ol||O===Cu?be=i.DEPTH_COMPONENT24:O===xa?be=i.DEPTH_COMPONENT32F:O===Mh&&(be=i.DEPTH_COMPONENT16),be}function T(W,O){return _(W)===!0||W.isFramebufferTexture&&W.minFilter!==jr&&W.minFilter!==cs?Math.log2(Math.max(O.width,O.height))+1:W.mipmaps!==void 0&&W.mipmaps.length>0?W.mipmaps.length:W.isCompressedTexture&&Array.isArray(W.image)?O.mipmaps.length:1}function L(W){const O=W.target;O.removeEventListener("dispose",L),P(O),O.isVideoTexture&&h.delete(O)}function C(W){const O=W.target;O.removeEventListener("dispose",C),A(O)}function P(W){const O=n.get(W);if(O.__webglInit===void 0)return;const be=W.source,k=m.get(be);if(k){const I=k[O.__cacheKey];I.usedTimes--,I.usedTimes===0&&N(W),Object.keys(k).length===0&&m.delete(be)}n.remove(W)}function N(W){const O=n.get(W);i.deleteTexture(O.__webglTexture);const be=W.source,k=m.get(be);delete k[O.__cacheKey],o.memory.textures--}function A(W){const O=n.get(W);if(W.depthTexture&&W.depthTexture.dispose(),W.isWebGLCubeRenderTarget)for(let k=0;k<6;k++){if(Array.isArray(O.__webglFramebuffer[k]))for(let I=0;I<O.__webglFramebuffer[k].length;I++)i.deleteFramebuffer(O.__webglFramebuffer[k][I]);else i.deleteFramebuffer(O.__webglFramebuffer[k]);O.__webglDepthbuffer&&i.deleteRenderbuffer(O.__webglDepthbuffer[k])}else{if(Array.isArray(O.__webglFramebuffer))for(let k=0;k<O.__webglFramebuffer.length;k++)i.deleteFramebuffer(O.__webglFramebuffer[k]);else i.deleteFramebuffer(O.__webglFramebuffer);if(O.__webglDepthbuffer&&i.deleteRenderbuffer(O.__webglDepthbuffer),O.__webglMultisampledFramebuffer&&i.deleteFramebuffer(O.__webglMultisampledFramebuffer),O.__webglColorRenderbuffer)for(let k=0;k<O.__webglColorRenderbuffer.length;k++)O.__webglColorRenderbuffer[k]&&i.deleteRenderbuffer(O.__webglColorRenderbuffer[k]);O.__webglDepthRenderbuffer&&i.deleteRenderbuffer(O.__webglDepthRenderbuffer)}const be=W.textures;for(let k=0,I=be.length;k<I;k++){const Y=n.get(be[k]);Y.__webglTexture&&(i.deleteTexture(Y.__webglTexture),o.memory.textures--),n.remove(be[k])}n.remove(W)}let w=0;function D(){w=0}function X(){const W=w;return W>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+W+" texture units while this GPU supports only "+r.maxTextures),w+=1,W}function z(W){const O=[];return O.push(W.wrapS),O.push(W.wrapT),O.push(W.wrapR||0),O.push(W.magFilter),O.push(W.minFilter),O.push(W.anisotropy),O.push(W.internalFormat),O.push(W.format),O.push(W.type),O.push(W.generateMipmaps),O.push(W.premultiplyAlpha),O.push(W.flipY),O.push(W.unpackAlignment),O.push(W.colorSpace),O.join()}function G(W,O){const be=n.get(W);if(W.isVideoTexture&&Pt(W),W.isRenderTargetTexture===!1&&W.version>0&&be.__version!==W.version){const k=W.image;if(k===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(k.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ge(be,W,O);return}}t.bindTexture(i.TEXTURE_2D,be.__webglTexture,i.TEXTURE0+O)}function Z(W,O){const be=n.get(W);if(W.version>0&&be.__version!==W.version){Ge(be,W,O);return}t.bindTexture(i.TEXTURE_2D_ARRAY,be.__webglTexture,i.TEXTURE0+O)}function q(W,O){const be=n.get(W);if(W.version>0&&be.__version!==W.version){Ge(be,W,O);return}t.bindTexture(i.TEXTURE_3D,be.__webglTexture,i.TEXTURE0+O)}function K(W,O){const be=n.get(W);if(W.version>0&&be.__version!==W.version){j(be,W,O);return}t.bindTexture(i.TEXTURE_CUBE_MAP,be.__webglTexture,i.TEXTURE0+O)}const B={[G1]:i.REPEAT,[Ml]:i.CLAMP_TO_EDGE,[W1]:i.MIRRORED_REPEAT},ie={[jr]:i.NEAREST,[$9]:i.NEAREST_MIPMAP_NEAREST,[dp]:i.NEAREST_MIPMAP_LINEAR,[cs]:i.LINEAR,[U_]:i.LINEAR_MIPMAP_NEAREST,[El]:i.LINEAR_MIPMAP_LINEAR},oe={[Z9]:i.NEVER,[i7]:i.ALWAYS,[Q9]:i.LESS,[eR]:i.LEQUAL,[J9]:i.EQUAL,[n7]:i.GEQUAL,[e7]:i.GREATER,[t7]:i.NOTEQUAL};function V(W,O){if(O.type===xa&&e.has("OES_texture_float_linear")===!1&&(O.magFilter===cs||O.magFilter===U_||O.magFilter===dp||O.magFilter===El||O.minFilter===cs||O.minFilter===U_||O.minFilter===dp||O.minFilter===El)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),i.texParameteri(W,i.TEXTURE_WRAP_S,B[O.wrapS]),i.texParameteri(W,i.TEXTURE_WRAP_T,B[O.wrapT]),(W===i.TEXTURE_3D||W===i.TEXTURE_2D_ARRAY)&&i.texParameteri(W,i.TEXTURE_WRAP_R,B[O.wrapR]),i.texParameteri(W,i.TEXTURE_MAG_FILTER,ie[O.magFilter]),i.texParameteri(W,i.TEXTURE_MIN_FILTER,ie[O.minFilter]),O.compareFunction&&(i.texParameteri(W,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(W,i.TEXTURE_COMPARE_FUNC,oe[O.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(O.magFilter===jr||O.minFilter!==dp&&O.minFilter!==El||O.type===xa&&e.has("OES_texture_float_linear")===!1)return;if(O.anisotropy>1||n.get(O).__currentAnisotropy){const be=e.get("EXT_texture_filter_anisotropic");i.texParameterf(W,be.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(O.anisotropy,r.getMaxAnisotropy())),n.get(O).__currentAnisotropy=O.anisotropy}}}function de(W,O){let be=!1;W.__webglInit===void 0&&(W.__webglInit=!0,O.addEventListener("dispose",L));const k=O.source;let I=m.get(k);I===void 0&&(I={},m.set(k,I));const Y=z(O);if(Y!==W.__cacheKey){I[Y]===void 0&&(I[Y]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,be=!0),I[Y].usedTimes++;const Me=I[W.__cacheKey];Me!==void 0&&(I[W.__cacheKey].usedTimes--,Me.usedTimes===0&&N(O)),W.__cacheKey=Y,W.__webglTexture=I[Y].texture}return be}function Ge(W,O,be){let k=i.TEXTURE_2D;(O.isDataArrayTexture||O.isCompressedArrayTexture)&&(k=i.TEXTURE_2D_ARRAY),O.isData3DTexture&&(k=i.TEXTURE_3D);const I=de(W,O),Y=O.source;t.bindTexture(k,W.__webglTexture,i.TEXTURE0+be);const Me=n.get(Y);if(Y.version!==Me.__version||I===!0){t.activeTexture(i.TEXTURE0+be);const ye=an.getPrimaries(an.workingColorSpace),ge=O.colorSpace===So?null:an.getPrimaries(O.colorSpace),qe=O.colorSpace===So||ye===ge?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,O.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,O.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,qe);let Te=S(O.image,!1,r.maxTextureSize);Te=Ve(O,Te);const ze=s.convert(O.format,O.colorSpace),tt=s.convert(O.type);let Ie=b(O.internalFormat,ze,tt,O.colorSpace,O.isVideoTexture);V(k,O);let ke;const Je=O.mipmaps,nt=O.isVideoTexture!==!0,We=Me.__version===void 0||I===!0,ne=Y.dataReady,$=T(O,Te);if(O.isDepthTexture)Ie=E(O.format===Pu,O.type),We&&(nt?t.texStorage2D(i.TEXTURE_2D,1,Ie,Te.width,Te.height):t.texImage2D(i.TEXTURE_2D,0,Ie,Te.width,Te.height,0,ze,tt,null));else if(O.isDataTexture)if(Je.length>0){nt&&We&&t.texStorage2D(i.TEXTURE_2D,$,Ie,Je[0].width,Je[0].height);for(let ve=0,le=Je.length;ve<le;ve++)ke=Je[ve],nt?ne&&t.texSubImage2D(i.TEXTURE_2D,ve,0,0,ke.width,ke.height,ze,tt,ke.data):t.texImage2D(i.TEXTURE_2D,ve,Ie,ke.width,ke.height,0,ze,tt,ke.data);O.generateMipmaps=!1}else nt?(We&&t.texStorage2D(i.TEXTURE_2D,$,Ie,Te.width,Te.height),ne&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,Te.width,Te.height,ze,tt,Te.data)):t.texImage2D(i.TEXTURE_2D,0,Ie,Te.width,Te.height,0,ze,tt,Te.data);else if(O.isCompressedTexture)if(O.isCompressedArrayTexture){nt&&We&&t.texStorage3D(i.TEXTURE_2D_ARRAY,$,Ie,Je[0].width,Je[0].height,Te.depth);for(let ve=0,le=Je.length;ve<le;ve++)if(ke=Je[ve],O.format!==ds)if(ze!==null)if(nt){if(ne)if(O.layerUpdates.size>0){const Pe=Gw(ke.width,ke.height,O.format,O.type);for(const Ue of O.layerUpdates){const Ne=ke.data.subarray(Ue*Pe/ke.data.BYTES_PER_ELEMENT,(Ue+1)*Pe/ke.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,ve,0,0,Ue,ke.width,ke.height,1,ze,Ne,0,0)}O.clearLayerUpdates()}else t.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,ve,0,0,0,ke.width,ke.height,Te.depth,ze,ke.data,0,0)}else t.compressedTexImage3D(i.TEXTURE_2D_ARRAY,ve,Ie,ke.width,ke.height,Te.depth,0,ke.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else nt?ne&&t.texSubImage3D(i.TEXTURE_2D_ARRAY,ve,0,0,0,ke.width,ke.height,Te.depth,ze,tt,ke.data):t.texImage3D(i.TEXTURE_2D_ARRAY,ve,Ie,ke.width,ke.height,Te.depth,0,ze,tt,ke.data)}else{nt&&We&&t.texStorage2D(i.TEXTURE_2D,$,Ie,Je[0].width,Je[0].height);for(let ve=0,le=Je.length;ve<le;ve++)ke=Je[ve],O.format!==ds?ze!==null?nt?ne&&t.compressedTexSubImage2D(i.TEXTURE_2D,ve,0,0,ke.width,ke.height,ze,ke.data):t.compressedTexImage2D(i.TEXTURE_2D,ve,Ie,ke.width,ke.height,0,ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?ne&&t.texSubImage2D(i.TEXTURE_2D,ve,0,0,ke.width,ke.height,ze,tt,ke.data):t.texImage2D(i.TEXTURE_2D,ve,Ie,ke.width,ke.height,0,ze,tt,ke.data)}else if(O.isDataArrayTexture)if(nt){if(We&&t.texStorage3D(i.TEXTURE_2D_ARRAY,$,Ie,Te.width,Te.height,Te.depth),ne)if(O.layerUpdates.size>0){const ve=Gw(Te.width,Te.height,O.format,O.type);for(const le of O.layerUpdates){const Pe=Te.data.subarray(le*ve/Te.data.BYTES_PER_ELEMENT,(le+1)*ve/Te.data.BYTES_PER_ELEMENT);t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,le,Te.width,Te.height,1,ze,tt,Pe)}O.clearLayerUpdates()}else t.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,Te.width,Te.height,Te.depth,ze,tt,Te.data)}else t.texImage3D(i.TEXTURE_2D_ARRAY,0,Ie,Te.width,Te.height,Te.depth,0,ze,tt,Te.data);else if(O.isData3DTexture)nt?(We&&t.texStorage3D(i.TEXTURE_3D,$,Ie,Te.width,Te.height,Te.depth),ne&&t.texSubImage3D(i.TEXTURE_3D,0,0,0,0,Te.width,Te.height,Te.depth,ze,tt,Te.data)):t.texImage3D(i.TEXTURE_3D,0,Ie,Te.width,Te.height,Te.depth,0,ze,tt,Te.data);else if(O.isFramebufferTexture){if(We)if(nt)t.texStorage2D(i.TEXTURE_2D,$,Ie,Te.width,Te.height);else{let ve=Te.width,le=Te.height;for(let Pe=0;Pe<$;Pe++)t.texImage2D(i.TEXTURE_2D,Pe,Ie,ve,le,0,ze,tt,null),ve>>=1,le>>=1}}else if(Je.length>0){if(nt&&We){const ve=ot(Je[0]);t.texStorage2D(i.TEXTURE_2D,$,Ie,ve.width,ve.height)}for(let ve=0,le=Je.length;ve<le;ve++)ke=Je[ve],nt?ne&&t.texSubImage2D(i.TEXTURE_2D,ve,0,0,ze,tt,ke):t.texImage2D(i.TEXTURE_2D,ve,Ie,ze,tt,ke);O.generateMipmaps=!1}else if(nt){if(We){const ve=ot(Te);t.texStorage2D(i.TEXTURE_2D,$,Ie,ve.width,ve.height)}ne&&t.texSubImage2D(i.TEXTURE_2D,0,0,0,ze,tt,Te)}else t.texImage2D(i.TEXTURE_2D,0,Ie,ze,tt,Te);_(O)&&g(k),Me.__version=Y.version,O.onUpdate&&O.onUpdate(O)}W.__version=O.version}function j(W,O,be){if(O.image.length!==6)return;const k=de(W,O),I=O.source;t.bindTexture(i.TEXTURE_CUBE_MAP,W.__webglTexture,i.TEXTURE0+be);const Y=n.get(I);if(I.version!==Y.__version||k===!0){t.activeTexture(i.TEXTURE0+be);const Me=an.getPrimaries(an.workingColorSpace),ye=O.colorSpace===So?null:an.getPrimaries(O.colorSpace),ge=O.colorSpace===So||Me===ye?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,O.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,O.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,O.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,ge);const qe=O.isCompressedTexture||O.image[0].isCompressedTexture,Te=O.image[0]&&O.image[0].isDataTexture,ze=[];for(let le=0;le<6;le++)!qe&&!Te?ze[le]=S(O.image[le],!0,r.maxCubemapSize):ze[le]=Te?O.image[le].image:O.image[le],ze[le]=Ve(O,ze[le]);const tt=ze[0],Ie=s.convert(O.format,O.colorSpace),ke=s.convert(O.type),Je=b(O.internalFormat,Ie,ke,O.colorSpace),nt=O.isVideoTexture!==!0,We=Y.__version===void 0||k===!0,ne=I.dataReady;let $=T(O,tt);V(i.TEXTURE_CUBE_MAP,O);let ve;if(qe){nt&&We&&t.texStorage2D(i.TEXTURE_CUBE_MAP,$,Je,tt.width,tt.height);for(let le=0;le<6;le++){ve=ze[le].mipmaps;for(let Pe=0;Pe<ve.length;Pe++){const Ue=ve[Pe];O.format!==ds?Ie!==null?nt?ne&&t.compressedTexSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe,0,0,Ue.width,Ue.height,Ie,Ue.data):t.compressedTexImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe,Je,Ue.width,Ue.height,0,Ue.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):nt?ne&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe,0,0,Ue.width,Ue.height,Ie,ke,Ue.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe,Je,Ue.width,Ue.height,0,Ie,ke,Ue.data)}}}else{if(ve=O.mipmaps,nt&&We){ve.length>0&&$++;const le=ot(ze[0]);t.texStorage2D(i.TEXTURE_CUBE_MAP,$,Je,le.width,le.height)}for(let le=0;le<6;le++)if(Te){nt?ne&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,0,0,ze[le].width,ze[le].height,Ie,ke,ze[le].data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,Je,ze[le].width,ze[le].height,0,Ie,ke,ze[le].data);for(let Pe=0;Pe<ve.length;Pe++){const Ne=ve[Pe].image[le].image;nt?ne&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe+1,0,0,Ne.width,Ne.height,Ie,ke,Ne.data):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe+1,Je,Ne.width,Ne.height,0,Ie,ke,Ne.data)}}else{nt?ne&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,0,0,Ie,ke,ze[le]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,0,Je,Ie,ke,ze[le]);for(let Pe=0;Pe<ve.length;Pe++){const Ue=ve[Pe];nt?ne&&t.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe+1,0,0,Ie,ke,Ue.image[le]):t.texImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+le,Pe+1,Je,Ie,ke,Ue.image[le])}}}_(O)&&g(i.TEXTURE_CUBE_MAP),Y.__version=I.version,O.onUpdate&&O.onUpdate(O)}W.__version=O.version}function fe(W,O,be,k,I,Y){const Me=s.convert(be.format,be.colorSpace),ye=s.convert(be.type),ge=b(be.internalFormat,Me,ye,be.colorSpace);if(!n.get(O).__hasExternalTextures){const Te=Math.max(1,O.width>>Y),ze=Math.max(1,O.height>>Y);I===i.TEXTURE_3D||I===i.TEXTURE_2D_ARRAY?t.texImage3D(I,Y,ge,Te,ze,O.depth,0,Me,ye,null):t.texImage2D(I,Y,ge,Te,ze,0,Me,ye,null)}t.bindFramebuffer(i.FRAMEBUFFER,W),st(O)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,k,I,n.get(be).__webglTexture,0,Lt(O)):(I===i.TEXTURE_2D||I>=i.TEXTURE_CUBE_MAP_POSITIVE_X&&I<=i.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&i.framebufferTexture2D(i.FRAMEBUFFER,k,I,n.get(be).__webglTexture,Y),t.bindFramebuffer(i.FRAMEBUFFER,null)}function Re(W,O,be){if(i.bindRenderbuffer(i.RENDERBUFFER,W),O.depthBuffer){const k=O.depthTexture,I=k&&k.isDepthTexture?k.type:null,Y=E(O.stencilBuffer,I),Me=O.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,ye=Lt(O);st(O)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,ye,Y,O.width,O.height):be?i.renderbufferStorageMultisample(i.RENDERBUFFER,ye,Y,O.width,O.height):i.renderbufferStorage(i.RENDERBUFFER,Y,O.width,O.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,Me,i.RENDERBUFFER,W)}else{const k=O.textures;for(let I=0;I<k.length;I++){const Y=k[I],Me=s.convert(Y.format,Y.colorSpace),ye=s.convert(Y.type),ge=b(Y.internalFormat,Me,ye,Y.colorSpace),qe=Lt(O);be&&st(O)===!1?i.renderbufferStorageMultisample(i.RENDERBUFFER,qe,ge,O.width,O.height):st(O)?c.renderbufferStorageMultisampleEXT(i.RENDERBUFFER,qe,ge,O.width,O.height):i.renderbufferStorage(i.RENDERBUFFER,ge,O.width,O.height)}}i.bindRenderbuffer(i.RENDERBUFFER,null)}function Ee(W,O){if(O&&O.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(i.FRAMEBUFFER,W),!(O.depthTexture&&O.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(O.depthTexture).__webglTexture||O.depthTexture.image.width!==O.width||O.depthTexture.image.height!==O.height)&&(O.depthTexture.image.width=O.width,O.depthTexture.image.height=O.height,O.depthTexture.needsUpdate=!0),G(O.depthTexture,0);const k=n.get(O.depthTexture).__webglTexture,I=Lt(O);if(O.depthTexture.format===ru)st(O)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,k,0,I):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_ATTACHMENT,i.TEXTURE_2D,k,0);else if(O.depthTexture.format===Pu)st(O)?c.framebufferTexture2DMultisampleEXT(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,k,0,I):i.framebufferTexture2D(i.FRAMEBUFFER,i.DEPTH_STENCIL_ATTACHMENT,i.TEXTURE_2D,k,0);else throw new Error("Unknown depthTexture format")}function Fe(W){const O=n.get(W),be=W.isWebGLCubeRenderTarget===!0;if(O.__boundDepthTexture!==W.depthTexture){const k=W.depthTexture;if(O.__depthDisposeCallback&&O.__depthDisposeCallback(),k){const I=()=>{delete O.__boundDepthTexture,delete O.__depthDisposeCallback,k.removeEventListener("dispose",I)};k.addEventListener("dispose",I),O.__depthDisposeCallback=I}O.__boundDepthTexture=k}if(W.depthTexture&&!O.__autoAllocateDepthBuffer){if(be)throw new Error("target.depthTexture not supported in Cube render targets");Ee(O.__webglFramebuffer,W)}else if(be){O.__webglDepthbuffer=[];for(let k=0;k<6;k++)if(t.bindFramebuffer(i.FRAMEBUFFER,O.__webglFramebuffer[k]),O.__webglDepthbuffer[k]===void 0)O.__webglDepthbuffer[k]=i.createRenderbuffer(),Re(O.__webglDepthbuffer[k],W,!1);else{const I=W.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Y=O.__webglDepthbuffer[k];i.bindRenderbuffer(i.RENDERBUFFER,Y),i.framebufferRenderbuffer(i.FRAMEBUFFER,I,i.RENDERBUFFER,Y)}}else if(t.bindFramebuffer(i.FRAMEBUFFER,O.__webglFramebuffer),O.__webglDepthbuffer===void 0)O.__webglDepthbuffer=i.createRenderbuffer(),Re(O.__webglDepthbuffer,W,!1);else{const k=W.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,I=O.__webglDepthbuffer;i.bindRenderbuffer(i.RENDERBUFFER,I),i.framebufferRenderbuffer(i.FRAMEBUFFER,k,i.RENDERBUFFER,I)}t.bindFramebuffer(i.FRAMEBUFFER,null)}function He(W,O,be){const k=n.get(W);O!==void 0&&fe(k.__webglFramebuffer,W,W.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,0),be!==void 0&&Fe(W)}function $e(W){const O=W.texture,be=n.get(W),k=n.get(O);W.addEventListener("dispose",C);const I=W.textures,Y=W.isWebGLCubeRenderTarget===!0,Me=I.length>1;if(Me||(k.__webglTexture===void 0&&(k.__webglTexture=i.createTexture()),k.__version=O.version,o.memory.textures++),Y){be.__webglFramebuffer=[];for(let ye=0;ye<6;ye++)if(O.mipmaps&&O.mipmaps.length>0){be.__webglFramebuffer[ye]=[];for(let ge=0;ge<O.mipmaps.length;ge++)be.__webglFramebuffer[ye][ge]=i.createFramebuffer()}else be.__webglFramebuffer[ye]=i.createFramebuffer()}else{if(O.mipmaps&&O.mipmaps.length>0){be.__webglFramebuffer=[];for(let ye=0;ye<O.mipmaps.length;ye++)be.__webglFramebuffer[ye]=i.createFramebuffer()}else be.__webglFramebuffer=i.createFramebuffer();if(Me)for(let ye=0,ge=I.length;ye<ge;ye++){const qe=n.get(I[ye]);qe.__webglTexture===void 0&&(qe.__webglTexture=i.createTexture(),o.memory.textures++)}if(W.samples>0&&st(W)===!1){be.__webglMultisampledFramebuffer=i.createFramebuffer(),be.__webglColorRenderbuffer=[],t.bindFramebuffer(i.FRAMEBUFFER,be.__webglMultisampledFramebuffer);for(let ye=0;ye<I.length;ye++){const ge=I[ye];be.__webglColorRenderbuffer[ye]=i.createRenderbuffer(),i.bindRenderbuffer(i.RENDERBUFFER,be.__webglColorRenderbuffer[ye]);const qe=s.convert(ge.format,ge.colorSpace),Te=s.convert(ge.type),ze=b(ge.internalFormat,qe,Te,ge.colorSpace,W.isXRRenderTarget===!0),tt=Lt(W);i.renderbufferStorageMultisample(i.RENDERBUFFER,tt,ze,W.width,W.height),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ye,i.RENDERBUFFER,be.__webglColorRenderbuffer[ye])}i.bindRenderbuffer(i.RENDERBUFFER,null),W.depthBuffer&&(be.__webglDepthRenderbuffer=i.createRenderbuffer(),Re(be.__webglDepthRenderbuffer,W,!0)),t.bindFramebuffer(i.FRAMEBUFFER,null)}}if(Y){t.bindTexture(i.TEXTURE_CUBE_MAP,k.__webglTexture),V(i.TEXTURE_CUBE_MAP,O);for(let ye=0;ye<6;ye++)if(O.mipmaps&&O.mipmaps.length>0)for(let ge=0;ge<O.mipmaps.length;ge++)fe(be.__webglFramebuffer[ye][ge],W,O,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+ye,ge);else fe(be.__webglFramebuffer[ye],W,O,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+ye,0);_(O)&&g(i.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Me){for(let ye=0,ge=I.length;ye<ge;ye++){const qe=I[ye],Te=n.get(qe);t.bindTexture(i.TEXTURE_2D,Te.__webglTexture),V(i.TEXTURE_2D,qe),fe(be.__webglFramebuffer,W,qe,i.COLOR_ATTACHMENT0+ye,i.TEXTURE_2D,0),_(qe)&&g(i.TEXTURE_2D)}t.unbindTexture()}else{let ye=i.TEXTURE_2D;if((W.isWebGL3DRenderTarget||W.isWebGLArrayRenderTarget)&&(ye=W.isWebGL3DRenderTarget?i.TEXTURE_3D:i.TEXTURE_2D_ARRAY),t.bindTexture(ye,k.__webglTexture),V(ye,O),O.mipmaps&&O.mipmaps.length>0)for(let ge=0;ge<O.mipmaps.length;ge++)fe(be.__webglFramebuffer[ge],W,O,i.COLOR_ATTACHMENT0,ye,ge);else fe(be.__webglFramebuffer,W,O,i.COLOR_ATTACHMENT0,ye,0);_(O)&&g(ye),t.unbindTexture()}W.depthBuffer&&Fe(W)}function wt(W){const O=W.textures;for(let be=0,k=O.length;be<k;be++){const I=O[be];if(_(I)){const Y=W.isWebGLCubeRenderTarget?i.TEXTURE_CUBE_MAP:i.TEXTURE_2D,Me=n.get(I).__webglTexture;t.bindTexture(Y,Me),g(Y),t.unbindTexture()}}}const ee=[],Tt=[];function te(W){if(W.samples>0){if(st(W)===!1){const O=W.textures,be=W.width,k=W.height;let I=i.COLOR_BUFFER_BIT;const Y=W.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT,Me=n.get(W),ye=O.length>1;if(ye)for(let ge=0;ge<O.length;ge++)t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.RENDERBUFFER,null),t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.TEXTURE_2D,null,0);t.bindFramebuffer(i.READ_FRAMEBUFFER,Me.__webglMultisampledFramebuffer),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Me.__webglFramebuffer);for(let ge=0;ge<O.length;ge++){if(W.resolveDepthBuffer&&(W.depthBuffer&&(I|=i.DEPTH_BUFFER_BIT),W.stencilBuffer&&W.resolveStencilBuffer&&(I|=i.STENCIL_BUFFER_BIT)),ye){i.framebufferRenderbuffer(i.READ_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,Me.__webglColorRenderbuffer[ge]);const qe=n.get(O[ge]).__webglTexture;i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,qe,0)}i.blitFramebuffer(0,0,be,k,0,0,be,k,I,i.NEAREST),u===!0&&(ee.length=0,Tt.length=0,ee.push(i.COLOR_ATTACHMENT0+ge),W.depthBuffer&&W.resolveDepthBuffer===!1&&(ee.push(Y),Tt.push(Y),i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,Tt)),i.invalidateFramebuffer(i.READ_FRAMEBUFFER,ee))}if(t.bindFramebuffer(i.READ_FRAMEBUFFER,null),t.bindFramebuffer(i.DRAW_FRAMEBUFFER,null),ye)for(let ge=0;ge<O.length;ge++){t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.RENDERBUFFER,Me.__webglColorRenderbuffer[ge]);const qe=n.get(O[ge]).__webglTexture;t.bindFramebuffer(i.FRAMEBUFFER,Me.__webglFramebuffer),i.framebufferTexture2D(i.DRAW_FRAMEBUFFER,i.COLOR_ATTACHMENT0+ge,i.TEXTURE_2D,qe,0)}t.bindFramebuffer(i.DRAW_FRAMEBUFFER,Me.__webglMultisampledFramebuffer)}else if(W.depthBuffer&&W.resolveDepthBuffer===!1&&u){const O=W.stencilBuffer?i.DEPTH_STENCIL_ATTACHMENT:i.DEPTH_ATTACHMENT;i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,[O])}}}function Lt(W){return Math.min(r.maxSamples,W.samples)}function st(W){const O=n.get(W);return W.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&O.__useRenderToTexture!==!1}function Pt(W){const O=o.render.frame;h.get(W)!==O&&(h.set(W,O),W.update())}function Ve(W,O){const be=W.colorSpace,k=W.format,I=W.type;return W.isCompressedTexture===!0||W.isVideoTexture===!0||be!==Uo&&be!==So&&(an.getTransfer(be)===Mn?(k!==ds||I!==ba)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",be)),O}function ot(W){return typeof HTMLImageElement<"u"&&W instanceof HTMLImageElement?(f.width=W.naturalWidth||W.width,f.height=W.naturalHeight||W.height):typeof VideoFrame<"u"&&W instanceof VideoFrame?(f.width=W.displayWidth,f.height=W.displayHeight):(f.width=W.width,f.height=W.height),f}this.allocateTextureUnit=X,this.resetTextureUnits=D,this.setTexture2D=G,this.setTexture2DArray=Z,this.setTexture3D=q,this.setTextureCube=K,this.rebindTextures=He,this.setupRenderTarget=$e,this.updateRenderTargetMipmap=wt,this.updateMultisampleRenderTarget=te,this.setupDepthRenderbuffer=Fe,this.setupFrameBufferTexture=fe,this.useMultisampledRTT=st}function aV(i,e){function t(n,r=So){let s;const o=an.getTransfer(r);if(n===ba)return i.UNSIGNED_BYTE;if(n===gy)return i.UNSIGNED_SHORT_4_4_4_4;if(n===_y)return i.UNSIGNED_SHORT_5_5_5_1;if(n===$A)return i.UNSIGNED_INT_5_9_9_9_REV;if(n===WA)return i.BYTE;if(n===XA)return i.SHORT;if(n===Mh)return i.UNSIGNED_SHORT;if(n===my)return i.INT;if(n===Ol)return i.UNSIGNED_INT;if(n===xa)return i.FLOAT;if(n===Ph)return i.HALF_FLOAT;if(n===jA)return i.ALPHA;if(n===qA)return i.RGB;if(n===ds)return i.RGBA;if(n===YA)return i.LUMINANCE;if(n===KA)return i.LUMINANCE_ALPHA;if(n===ru)return i.DEPTH_COMPONENT;if(n===Pu)return i.DEPTH_STENCIL;if(n===ZA)return i.RED;if(n===vy)return i.RED_INTEGER;if(n===QA)return i.RG;if(n===xy)return i.RG_INTEGER;if(n===yy)return i.RGBA_INTEGER;if(n===am||n===om||n===lm||n===cm)if(o===Mn)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===am)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===om)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===lm)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===cm)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===am)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===om)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===lm)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===cm)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===X1||n===$1||n===j1||n===q1)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===X1)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===$1)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===j1)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===q1)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===Y1||n===K1||n===Z1)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(n===Y1||n===K1)return o===Mn?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===Z1)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===Q1||n===J1||n===ex||n===tx||n===nx||n===ix||n===rx||n===sx||n===ax||n===ox||n===lx||n===cx||n===ux||n===fx)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(n===Q1)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===J1)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===ex)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===tx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===nx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===ix)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===rx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===sx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===ax)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===ox)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===lx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===cx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===ux)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===fx)return o===Mn?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===um||n===hx||n===dx)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(n===um)return o===Mn?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===hx)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===dx)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===JA||n===px||n===mx||n===gx)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(n===um)return s.COMPRESSED_RED_RGTC1_EXT;if(n===px)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===mx)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===gx)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===Cu?i.UNSIGNED_INT_24_8:i[n]!==void 0?i[n]:null}return{convert:t}}class oV extends Xr{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Kc extends Ei{constructor(){super(),this.isGroup=!0,this.type="Group"}}const lV={type:"move"};class lv{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Kc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Kc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new me,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new me),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Kc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new me,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new me),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const c=this._targetRay,u=this._grip,f=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(f&&e.hand){o=!0;for(const S of e.hand.values()){const _=t.getJointPose(S,n),g=this._getHandJoint(f,S);_!==null&&(g.matrix.fromArray(_.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=_.radius),g.visible=_!==null}const h=f.joints["index-finger-tip"],p=f.joints["thumb-tip"],m=h.position.distanceTo(p.position),v=.02,y=.005;f.inputState.pinching&&m>v+y?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!f.inputState.pinching&&m<=v-y&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(c.matrix.fromArray(r.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,r.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(r.linearVelocity)):c.hasLinearVelocity=!1,r.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(r.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(lV)))}return c!==null&&(c.visible=r!==null),u!==null&&(u.visible=s!==null),f!==null&&(f.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Kc;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}const cV=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,uV=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class fV{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t,n){if(this.texture===null){const r=new ur,s=e.properties.get(r);s.__webglTexture=t.texture,(t.depthNear!=n.depthNear||t.depthFar!=n.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=r}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,n=new No({vertexShader:cV,fragmentShader:uV,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new dt(new Ty(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class hV extends ku{constructor(e,t){super();const n=this;let r=null,s=1,o=null,c="local-floor",u=1,f=null,h=null,p=null,m=null,v=null,y=null;const S=new fV,_=t.getContextAttributes();let g=null,b=null;const E=[],T=[],L=new Kt;let C=null;const P=new Xr;P.layers.enable(1),P.viewport=new gi;const N=new Xr;N.layers.enable(2),N.viewport=new gi;const A=[P,N],w=new oV;w.layers.enable(1),w.layers.enable(2);let D=null,X=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let fe=E[j];return fe===void 0&&(fe=new lv,E[j]=fe),fe.getTargetRaySpace()},this.getControllerGrip=function(j){let fe=E[j];return fe===void 0&&(fe=new lv,E[j]=fe),fe.getGripSpace()},this.getHand=function(j){let fe=E[j];return fe===void 0&&(fe=new lv,E[j]=fe),fe.getHandSpace()};function z(j){const fe=T.indexOf(j.inputSource);if(fe===-1)return;const Re=E[fe];Re!==void 0&&(Re.update(j.inputSource,j.frame,f||o),Re.dispatchEvent({type:j.type,data:j.inputSource}))}function G(){r.removeEventListener("select",z),r.removeEventListener("selectstart",z),r.removeEventListener("selectend",z),r.removeEventListener("squeeze",z),r.removeEventListener("squeezestart",z),r.removeEventListener("squeezeend",z),r.removeEventListener("end",G),r.removeEventListener("inputsourceschange",Z);for(let j=0;j<E.length;j++){const fe=T[j];fe!==null&&(T[j]=null,E[j].disconnect(fe))}D=null,X=null,S.reset(),e.setRenderTarget(g),v=null,m=null,p=null,r=null,b=null,Ge.stop(),n.isPresenting=!1,e.setPixelRatio(C),e.setSize(L.width,L.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){c=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return f||o},this.setReferenceSpace=function(j){f=j},this.getBaseLayer=function(){return m!==null?m:v},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){if(g=e.getRenderTarget(),r.addEventListener("select",z),r.addEventListener("selectstart",z),r.addEventListener("selectend",z),r.addEventListener("squeeze",z),r.addEventListener("squeezestart",z),r.addEventListener("squeezeend",z),r.addEventListener("end",G),r.addEventListener("inputsourceschange",Z),_.xrCompatible!==!0&&await t.makeXRCompatible(),C=e.getPixelRatio(),e.getSize(L),r.renderState.layers===void 0){const fe={antialias:_.antialias,alpha:!0,depth:_.depth,stencil:_.stencil,framebufferScaleFactor:s};v=new XRWebGLLayer(r,t,fe),r.updateRenderState({baseLayer:v}),e.setPixelRatio(1),e.setSize(v.framebufferWidth,v.framebufferHeight,!1),b=new Fl(v.framebufferWidth,v.framebufferHeight,{format:ds,type:ba,colorSpace:e.outputColorSpace,stencilBuffer:_.stencil})}else{let fe=null,Re=null,Ee=null;_.depth&&(Ee=_.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,fe=_.stencil?Pu:ru,Re=_.stencil?Cu:Ol);const Fe={colorFormat:t.RGBA8,depthFormat:Ee,scaleFactor:s};p=new XRWebGLBinding(r,t),m=p.createProjectionLayer(Fe),r.updateRenderState({layers:[m]}),e.setPixelRatio(1),e.setSize(m.textureWidth,m.textureHeight,!1),b=new Fl(m.textureWidth,m.textureHeight,{format:ds,type:ba,depthTexture:new dR(m.textureWidth,m.textureHeight,Re,void 0,void 0,void 0,void 0,void 0,void 0,fe),stencilBuffer:_.stencil,colorSpace:e.outputColorSpace,samples:_.antialias?4:0,resolveDepthBuffer:m.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(u),f=null,o=await r.requestReferenceSpace(c),Ge.setContext(r),Ge.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return S.getDepthTexture()};function Z(j){for(let fe=0;fe<j.removed.length;fe++){const Re=j.removed[fe],Ee=T.indexOf(Re);Ee>=0&&(T[Ee]=null,E[Ee].disconnect(Re))}for(let fe=0;fe<j.added.length;fe++){const Re=j.added[fe];let Ee=T.indexOf(Re);if(Ee===-1){for(let He=0;He<E.length;He++)if(He>=T.length){T.push(Re),Ee=He;break}else if(T[He]===null){T[He]=Re,Ee=He;break}if(Ee===-1)break}const Fe=E[Ee];Fe&&Fe.connect(Re)}}const q=new me,K=new me;function B(j,fe,Re){q.setFromMatrixPosition(fe.matrixWorld),K.setFromMatrixPosition(Re.matrixWorld);const Ee=q.distanceTo(K),Fe=fe.projectionMatrix.elements,He=Re.projectionMatrix.elements,$e=Fe[14]/(Fe[10]-1),wt=Fe[14]/(Fe[10]+1),ee=(Fe[9]+1)/Fe[5],Tt=(Fe[9]-1)/Fe[5],te=(Fe[8]-1)/Fe[0],Lt=(He[8]+1)/He[0],st=$e*te,Pt=$e*Lt,Ve=Ee/(-te+Lt),ot=Ve*-te;if(fe.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(ot),j.translateZ(Ve),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert(),Fe[10]===-1)j.projectionMatrix.copy(fe.projectionMatrix),j.projectionMatrixInverse.copy(fe.projectionMatrixInverse);else{const W=$e+Ve,O=wt+Ve,be=st-ot,k=Pt+(Ee-ot),I=ee*wt/O*W,Y=Tt*wt/O*W;j.projectionMatrix.makePerspective(be,k,I,Y,W,O),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}}function ie(j,fe){fe===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(fe.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;let fe=j.near,Re=j.far;S.texture!==null&&(S.depthNear>0&&(fe=S.depthNear),S.depthFar>0&&(Re=S.depthFar)),w.near=N.near=P.near=fe,w.far=N.far=P.far=Re,(D!==w.near||X!==w.far)&&(r.updateRenderState({depthNear:w.near,depthFar:w.far}),D=w.near,X=w.far);const Ee=j.parent,Fe=w.cameras;ie(w,Ee);for(let He=0;He<Fe.length;He++)ie(Fe[He],Ee);Fe.length===2?B(w,P,N):w.projectionMatrix.copy(P.projectionMatrix),oe(j,w,Ee)};function oe(j,fe,Re){Re===null?j.matrix.copy(fe.matrixWorld):(j.matrix.copy(Re.matrixWorld),j.matrix.invert(),j.matrix.multiply(fe.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(fe.projectionMatrix),j.projectionMatrixInverse.copy(fe.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=_x*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return w},this.getFoveation=function(){if(!(m===null&&v===null))return u},this.setFoveation=function(j){u=j,m!==null&&(m.fixedFoveation=j),v!==null&&v.fixedFoveation!==void 0&&(v.fixedFoveation=j)},this.hasDepthSensing=function(){return S.texture!==null},this.getDepthSensingMesh=function(){return S.getMesh(w)};let V=null;function de(j,fe){if(h=fe.getViewerPose(f||o),y=fe,h!==null){const Re=h.views;v!==null&&(e.setRenderTargetFramebuffer(b,v.framebuffer),e.setRenderTarget(b));let Ee=!1;Re.length!==w.cameras.length&&(w.cameras.length=0,Ee=!0);for(let He=0;He<Re.length;He++){const $e=Re[He];let wt=null;if(v!==null)wt=v.getViewport($e);else{const Tt=p.getViewSubImage(m,$e);wt=Tt.viewport,He===0&&(e.setRenderTargetTextures(b,Tt.colorTexture,m.ignoreDepthValues?void 0:Tt.depthStencilTexture),e.setRenderTarget(b))}let ee=A[He];ee===void 0&&(ee=new Xr,ee.layers.enable(He),ee.viewport=new gi,A[He]=ee),ee.matrix.fromArray($e.transform.matrix),ee.matrix.decompose(ee.position,ee.quaternion,ee.scale),ee.projectionMatrix.fromArray($e.projectionMatrix),ee.projectionMatrixInverse.copy(ee.projectionMatrix).invert(),ee.viewport.set(wt.x,wt.y,wt.width,wt.height),He===0&&(w.matrix.copy(ee.matrix),w.matrix.decompose(w.position,w.quaternion,w.scale)),Ee===!0&&w.cameras.push(ee)}const Fe=r.enabledFeatures;if(Fe&&Fe.includes("depth-sensing")){const He=p.getDepthInformation(Re[0]);He&&He.isValid&&He.texture&&S.init(e,He,r.renderState)}}for(let Re=0;Re<E.length;Re++){const Ee=T[Re],Fe=E[Re];Ee!==null&&Fe!==void 0&&Fe.update(Ee,fe,f||o)}V&&V(j,fe),fe.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:fe}),y=null}const Ge=new fR;Ge.setAnimationLoop(de),this.setAnimationLoop=function(j){V=j},this.dispose=function(){}}}const ol=new Hs,dV=new In;function pV(i,e){function t(_,g){_.matrixAutoUpdate===!0&&_.updateMatrix(),g.value.copy(_.matrix)}function n(_,g){g.color.getRGB(_.fogColor.value,oR(i)),g.isFog?(_.fogNear.value=g.near,_.fogFar.value=g.far):g.isFogExp2&&(_.fogDensity.value=g.density)}function r(_,g,b,E,T){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(_,g):g.isMeshToonMaterial?(s(_,g),p(_,g)):g.isMeshPhongMaterial?(s(_,g),h(_,g)):g.isMeshStandardMaterial?(s(_,g),m(_,g),g.isMeshPhysicalMaterial&&v(_,g,T)):g.isMeshMatcapMaterial?(s(_,g),y(_,g)):g.isMeshDepthMaterial?s(_,g):g.isMeshDistanceMaterial?(s(_,g),S(_,g)):g.isMeshNormalMaterial?s(_,g):g.isLineBasicMaterial?(o(_,g),g.isLineDashedMaterial&&c(_,g)):g.isPointsMaterial?u(_,g,b,E):g.isSpriteMaterial?f(_,g):g.isShadowMaterial?(_.color.value.copy(g.color),_.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(_,g){_.opacity.value=g.opacity,g.color&&_.diffuse.value.copy(g.color),g.emissive&&_.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.bumpMap&&(_.bumpMap.value=g.bumpMap,t(g.bumpMap,_.bumpMapTransform),_.bumpScale.value=g.bumpScale,g.side===cr&&(_.bumpScale.value*=-1)),g.normalMap&&(_.normalMap.value=g.normalMap,t(g.normalMap,_.normalMapTransform),_.normalScale.value.copy(g.normalScale),g.side===cr&&_.normalScale.value.negate()),g.displacementMap&&(_.displacementMap.value=g.displacementMap,t(g.displacementMap,_.displacementMapTransform),_.displacementScale.value=g.displacementScale,_.displacementBias.value=g.displacementBias),g.emissiveMap&&(_.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,_.emissiveMapTransform)),g.specularMap&&(_.specularMap.value=g.specularMap,t(g.specularMap,_.specularMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest);const b=e.get(g),E=b.envMap,T=b.envMapRotation;E&&(_.envMap.value=E,ol.copy(T),ol.x*=-1,ol.y*=-1,ol.z*=-1,E.isCubeTexture&&E.isRenderTargetTexture===!1&&(ol.y*=-1,ol.z*=-1),_.envMapRotation.value.setFromMatrix4(dV.makeRotationFromEuler(ol)),_.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=g.reflectivity,_.ior.value=g.ior,_.refractionRatio.value=g.refractionRatio),g.lightMap&&(_.lightMap.value=g.lightMap,_.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,_.lightMapTransform)),g.aoMap&&(_.aoMap.value=g.aoMap,_.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,_.aoMapTransform))}function o(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform))}function c(_,g){_.dashSize.value=g.dashSize,_.totalSize.value=g.dashSize+g.gapSize,_.scale.value=g.scale}function u(_,g,b,E){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.size.value=g.size*b,_.scale.value=E*.5,g.map&&(_.map.value=g.map,t(g.map,_.uvTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function f(_,g){_.diffuse.value.copy(g.color),_.opacity.value=g.opacity,_.rotation.value=g.rotation,g.map&&(_.map.value=g.map,t(g.map,_.mapTransform)),g.alphaMap&&(_.alphaMap.value=g.alphaMap,t(g.alphaMap,_.alphaMapTransform)),g.alphaTest>0&&(_.alphaTest.value=g.alphaTest)}function h(_,g){_.specular.value.copy(g.specular),_.shininess.value=Math.max(g.shininess,1e-4)}function p(_,g){g.gradientMap&&(_.gradientMap.value=g.gradientMap)}function m(_,g){_.metalness.value=g.metalness,g.metalnessMap&&(_.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,_.metalnessMapTransform)),_.roughness.value=g.roughness,g.roughnessMap&&(_.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,_.roughnessMapTransform)),g.envMap&&(_.envMapIntensity.value=g.envMapIntensity)}function v(_,g,b){_.ior.value=g.ior,g.sheen>0&&(_.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),_.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(_.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,_.sheenColorMapTransform)),g.sheenRoughnessMap&&(_.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,_.sheenRoughnessMapTransform))),g.clearcoat>0&&(_.clearcoat.value=g.clearcoat,_.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(_.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,_.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(_.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===cr&&_.clearcoatNormalScale.value.negate())),g.dispersion>0&&(_.dispersion.value=g.dispersion),g.iridescence>0&&(_.iridescence.value=g.iridescence,_.iridescenceIOR.value=g.iridescenceIOR,_.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(_.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,_.iridescenceMapTransform)),g.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),g.transmission>0&&(_.transmission.value=g.transmission,_.transmissionSamplerMap.value=b.texture,_.transmissionSamplerSize.value.set(b.width,b.height),g.transmissionMap&&(_.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,_.transmissionMapTransform)),_.thickness.value=g.thickness,g.thicknessMap&&(_.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=g.attenuationDistance,_.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(_.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(_.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=g.specularIntensity,_.specularColor.value.copy(g.specularColor),g.specularColorMap&&(_.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,_.specularColorMapTransform)),g.specularIntensityMap&&(_.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,_.specularIntensityMapTransform))}function y(_,g){g.matcap&&(_.matcap.value=g.matcap)}function S(_,g){const b=e.get(g).light;_.referencePosition.value.setFromMatrixPosition(b.matrixWorld),_.nearDistance.value=b.shadow.camera.near,_.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:r}}function mV(i,e,t,n){let r={},s={},o=[];const c=i.getParameter(i.MAX_UNIFORM_BUFFER_BINDINGS);function u(b,E){const T=E.program;n.uniformBlockBinding(b,T)}function f(b,E){let T=r[b.id];T===void 0&&(y(b),T=h(b),r[b.id]=T,b.addEventListener("dispose",_));const L=E.program;n.updateUBOMapping(b,L);const C=e.render.frame;s[b.id]!==C&&(m(b),s[b.id]=C)}function h(b){const E=p();b.__bindingPointIndex=E;const T=i.createBuffer(),L=b.__size,C=b.usage;return i.bindBuffer(i.UNIFORM_BUFFER,T),i.bufferData(i.UNIFORM_BUFFER,L,C),i.bindBuffer(i.UNIFORM_BUFFER,null),i.bindBufferBase(i.UNIFORM_BUFFER,E,T),T}function p(){for(let b=0;b<c;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(b){const E=r[b.id],T=b.uniforms,L=b.__cache;i.bindBuffer(i.UNIFORM_BUFFER,E);for(let C=0,P=T.length;C<P;C++){const N=Array.isArray(T[C])?T[C]:[T[C]];for(let A=0,w=N.length;A<w;A++){const D=N[A];if(v(D,C,A,L)===!0){const X=D.__offset,z=Array.isArray(D.value)?D.value:[D.value];let G=0;for(let Z=0;Z<z.length;Z++){const q=z[Z],K=S(q);typeof q=="number"||typeof q=="boolean"?(D.__data[0]=q,i.bufferSubData(i.UNIFORM_BUFFER,X+G,D.__data)):q.isMatrix3?(D.__data[0]=q.elements[0],D.__data[1]=q.elements[1],D.__data[2]=q.elements[2],D.__data[3]=0,D.__data[4]=q.elements[3],D.__data[5]=q.elements[4],D.__data[6]=q.elements[5],D.__data[7]=0,D.__data[8]=q.elements[6],D.__data[9]=q.elements[7],D.__data[10]=q.elements[8],D.__data[11]=0):(q.toArray(D.__data,G),G+=K.storage/Float32Array.BYTES_PER_ELEMENT)}i.bufferSubData(i.UNIFORM_BUFFER,X,D.__data)}}}i.bindBuffer(i.UNIFORM_BUFFER,null)}function v(b,E,T,L){const C=b.value,P=E+"_"+T;if(L[P]===void 0)return typeof C=="number"||typeof C=="boolean"?L[P]=C:L[P]=C.clone(),!0;{const N=L[P];if(typeof C=="number"||typeof C=="boolean"){if(N!==C)return L[P]=C,!0}else if(N.equals(C)===!1)return N.copy(C),!0}return!1}function y(b){const E=b.uniforms;let T=0;const L=16;for(let P=0,N=E.length;P<N;P++){const A=Array.isArray(E[P])?E[P]:[E[P]];for(let w=0,D=A.length;w<D;w++){const X=A[w],z=Array.isArray(X.value)?X.value:[X.value];for(let G=0,Z=z.length;G<Z;G++){const q=z[G],K=S(q),B=T%L,ie=B%K.boundary,oe=B+ie;T+=ie,oe!==0&&L-oe<K.storage&&(T+=L-oe),X.__data=new Float32Array(K.storage/Float32Array.BYTES_PER_ELEMENT),X.__offset=T,T+=K.storage}}}const C=T%L;return C>0&&(T+=L-C),b.__size=T,b.__cache={},this}function S(b){const E={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(E.boundary=4,E.storage=4):b.isVector2?(E.boundary=8,E.storage=8):b.isVector3||b.isColor?(E.boundary=16,E.storage=12):b.isVector4?(E.boundary=16,E.storage=16):b.isMatrix3?(E.boundary=48,E.storage=48):b.isMatrix4?(E.boundary=64,E.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),E}function _(b){const E=b.target;E.removeEventListener("dispose",_);const T=o.indexOf(E.__bindingPointIndex);o.splice(T,1),i.deleteBuffer(r[E.id]),delete r[E.id],delete s[E.id]}function g(){for(const b in r)i.deleteBuffer(r[b]);o=[],r={},s={}}return{bind:u,update:f,dispose:g}}class gV{constructor(e={}){const{canvas:t=s7(),context:n=null,depth:r=!0,stencil:s=!1,alpha:o=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:f=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:p=!1}=e;this.isWebGLRenderer=!0;let m;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");m=n.getContextAttributes().alpha}else m=o;const v=new Uint32Array(4),y=new Int32Array(4);let S=null,_=null;const g=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=bs,this.toneMapping=Ro,this.toneMappingExposure=1;const E=this;let T=!1,L=0,C=0,P=null,N=-1,A=null;const w=new gi,D=new gi;let X=null;const z=new fn(0);let G=0,Z=t.width,q=t.height,K=1,B=null,ie=null;const oe=new gi(0,0,Z,q),V=new gi(0,0,Z,q);let de=!1;const Ge=new uR;let j=!1,fe=!1;const Re=new In,Ee=new me,Fe=new gi,He={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let $e=!1;function wt(){return P===null?K:1}let ee=n;function Tt(H,xe){return t.getContext(H,xe)}try{const H={alpha:!0,depth:r,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:f,powerPreference:h,failIfMajorPerformanceCaveat:p};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${py}`),t.addEventListener("webglcontextlost",ve,!1),t.addEventListener("webglcontextrestored",le,!1),t.addEventListener("webglcontextcreationerror",Pe,!1),ee===null){const xe="webgl2";if(ee=Tt(xe,H),ee===null)throw Tt(xe)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(H){throw console.error("THREE.WebGLRenderer: "+H.message),H}let te,Lt,st,Pt,Ve,ot,W,O,be,k,I,Y,Me,ye,ge,qe,Te,ze,tt,Ie,ke,Je,nt,We;function ne(){te=new Mz(ee),te.init(),Je=new aV(ee,te),Lt=new mz(ee,te,e,Je),st=new iV(ee),Pt=new wz(ee),Ve=new GH,ot=new sV(ee,te,st,Ve,Lt,Je,Pt),W=new _z(E),O=new Sz(E),be=new L7(ee),nt=new dz(ee,be),k=new Ez(ee,be,Pt,nt),I=new Az(ee,k,be,Pt),tt=new bz(ee,Lt,ot),qe=new gz(Ve),Y=new VH(E,W,O,te,Lt,nt,qe),Me=new pV(E,Ve),ye=new XH,ge=new ZH(te),ze=new hz(E,W,O,st,I,m,u),Te=new nV(E,I,Lt),We=new mV(ee,Pt,Lt,st),Ie=new pz(ee,te,Pt),ke=new Tz(ee,te,Pt),Pt.programs=Y.programs,E.capabilities=Lt,E.extensions=te,E.properties=Ve,E.renderLists=ye,E.shadowMap=Te,E.state=st,E.info=Pt}ne();const $=new hV(E,ee);this.xr=$,this.getContext=function(){return ee},this.getContextAttributes=function(){return ee.getContextAttributes()},this.forceContextLoss=function(){const H=te.get("WEBGL_lose_context");H&&H.loseContext()},this.forceContextRestore=function(){const H=te.get("WEBGL_lose_context");H&&H.restoreContext()},this.getPixelRatio=function(){return K},this.setPixelRatio=function(H){H!==void 0&&(K=H,this.setSize(Z,q,!1))},this.getSize=function(H){return H.set(Z,q)},this.setSize=function(H,xe,Ce=!0){if($.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Z=H,q=xe,t.width=Math.floor(H*K),t.height=Math.floor(xe*K),Ce===!0&&(t.style.width=H+"px",t.style.height=xe+"px"),this.setViewport(0,0,H,xe)},this.getDrawingBufferSize=function(H){return H.set(Z*K,q*K).floor()},this.setDrawingBufferSize=function(H,xe,Ce){Z=H,q=xe,K=Ce,t.width=Math.floor(H*Ce),t.height=Math.floor(xe*Ce),this.setViewport(0,0,H,xe)},this.getCurrentViewport=function(H){return H.copy(w)},this.getViewport=function(H){return H.copy(oe)},this.setViewport=function(H,xe,Ce,Le){H.isVector4?oe.set(H.x,H.y,H.z,H.w):oe.set(H,xe,Ce,Le),st.viewport(w.copy(oe).multiplyScalar(K).round())},this.getScissor=function(H){return H.copy(V)},this.setScissor=function(H,xe,Ce,Le){H.isVector4?V.set(H.x,H.y,H.z,H.w):V.set(H,xe,Ce,Le),st.scissor(D.copy(V).multiplyScalar(K).round())},this.getScissorTest=function(){return de},this.setScissorTest=function(H){st.setScissorTest(de=H)},this.setOpaqueSort=function(H){B=H},this.setTransparentSort=function(H){ie=H},this.getClearColor=function(H){return H.copy(ze.getClearColor())},this.setClearColor=function(){ze.setClearColor.apply(ze,arguments)},this.getClearAlpha=function(){return ze.getClearAlpha()},this.setClearAlpha=function(){ze.setClearAlpha.apply(ze,arguments)},this.clear=function(H=!0,xe=!0,Ce=!0){let Le=0;if(H){let Se=!1;if(P!==null){const U=P.texture.format;Se=U===yy||U===xy||U===vy}if(Se){const U=P.texture.type,J=U===ba||U===Ol||U===Mh||U===Cu||U===gy||U===_y,ue=ze.getClearColor(),re=ze.getClearAlpha(),se=ue.r,Oe=ue.g,Be=ue.b;J?(v[0]=se,v[1]=Oe,v[2]=Be,v[3]=re,ee.clearBufferuiv(ee.COLOR,0,v)):(y[0]=se,y[1]=Oe,y[2]=Be,y[3]=re,ee.clearBufferiv(ee.COLOR,0,y))}else Le|=ee.COLOR_BUFFER_BIT}xe&&(Le|=ee.DEPTH_BUFFER_BIT),Ce&&(Le|=ee.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),ee.clear(Le)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ve,!1),t.removeEventListener("webglcontextrestored",le,!1),t.removeEventListener("webglcontextcreationerror",Pe,!1),ye.dispose(),ge.dispose(),Ve.dispose(),W.dispose(),O.dispose(),I.dispose(),nt.dispose(),We.dispose(),Y.dispose(),$.dispose(),$.removeEventListener("sessionstart",vn),$.removeEventListener("sessionend",ri),Yi.stop()};function ve(H){H.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function le(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const H=Pt.autoReset,xe=Te.enabled,Ce=Te.autoUpdate,Le=Te.needsUpdate,Se=Te.type;ne(),Pt.autoReset=H,Te.enabled=xe,Te.autoUpdate=Ce,Te.needsUpdate=Le,Te.type=Se}function Pe(H){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",H.statusMessage)}function Ue(H){const xe=H.target;xe.removeEventListener("dispose",Ue),Ne(xe)}function Ne(H){at(H),Ve.remove(H)}function at(H){const xe=Ve.get(H).programs;xe!==void 0&&(xe.forEach(function(Ce){Y.releaseProgram(Ce)}),H.isShaderMaterial&&Y.releaseShaderCache(H))}this.renderBufferDirect=function(H,xe,Ce,Le,Se,U){xe===null&&(xe=He);const J=Se.isMesh&&Se.matrixWorld.determinant()<0,ue=Bl(H,xe,Ce,Le,Se);st.setMaterial(Le,J);let re=Ce.index,se=1;if(Le.wireframe===!0){if(re=k.getWireframeAttribute(Ce),re===void 0)return;se=2}const Oe=Ce.drawRange,Be=Ce.attributes.position;let Ke=Oe.start*se,it=(Oe.start+Oe.count)*se;U!==null&&(Ke=Math.max(Ke,U.start*se),it=Math.min(it,(U.start+U.count)*se)),re!==null?(Ke=Math.max(Ke,0),it=Math.min(it,re.count)):Be!=null&&(Ke=Math.max(Ke,0),it=Math.min(it,Be.count));const ut=it-Ke;if(ut<0||ut===1/0)return;nt.setup(Se,Le,ue,Ce,re);let gt,Qe=Ie;if(re!==null&&(gt=be.get(re),Qe=ke,Qe.setIndex(gt)),Se.isMesh)Le.wireframe===!0?(st.setLineWidth(Le.wireframeLinewidth*wt()),Qe.setMode(ee.LINES)):Qe.setMode(ee.TRIANGLES);else if(Se.isLine){let et=Le.linewidth;et===void 0&&(et=1),st.setLineWidth(et*wt()),Se.isLineSegments?Qe.setMode(ee.LINES):Se.isLineLoop?Qe.setMode(ee.LINE_LOOP):Qe.setMode(ee.LINE_STRIP)}else Se.isPoints?Qe.setMode(ee.POINTS):Se.isSprite&&Qe.setMode(ee.TRIANGLES);if(Se.isBatchedMesh)if(Se._multiDrawInstances!==null)Qe.renderMultiDrawInstances(Se._multiDrawStarts,Se._multiDrawCounts,Se._multiDrawCount,Se._multiDrawInstances);else if(te.get("WEBGL_multi_draw"))Qe.renderMultiDraw(Se._multiDrawStarts,Se._multiDrawCounts,Se._multiDrawCount);else{const et=Se._multiDrawStarts,Et=Se._multiDrawCounts,At=Se._multiDrawCount,Ht=re?be.get(re).bytesPerElement:1,Yt=Ve.get(Le).currentProgram.getUniforms();for(let ft=0;ft<At;ft++)Yt.setValue(ee,"_gl_DrawID",ft),Qe.render(et[ft]/Ht,Et[ft])}else if(Se.isInstancedMesh)Qe.renderInstances(Ke,ut,Se.count);else if(Ce.isInstancedBufferGeometry){const et=Ce._maxInstanceCount!==void 0?Ce._maxInstanceCount:1/0,Et=Math.min(Ce.instanceCount,et);Qe.renderInstances(Ke,ut,Et)}else Qe.render(Ke,ut)};function mt(H,xe,Ce){H.transparent===!0&&H.side===Is&&H.forceSinglePass===!1?(H.side=cr,H.needsUpdate=!0,hr(H,xe,Ce),H.side=wa,H.needsUpdate=!0,hr(H,xe,Ce),H.side=Is):hr(H,xe,Ce)}this.compile=function(H,xe,Ce=null){Ce===null&&(Ce=H),_=ge.get(Ce),_.init(xe),b.push(_),Ce.traverseVisible(function(Se){Se.isLight&&Se.layers.test(xe.layers)&&(_.pushLight(Se),Se.castShadow&&_.pushShadow(Se))}),H!==Ce&&H.traverseVisible(function(Se){Se.isLight&&Se.layers.test(xe.layers)&&(_.pushLight(Se),Se.castShadow&&_.pushShadow(Se))}),_.setupLights();const Le=new Set;return H.traverse(function(Se){const U=Se.material;if(U)if(Array.isArray(U))for(let J=0;J<U.length;J++){const ue=U[J];mt(ue,Ce,Se),Le.add(ue)}else mt(U,Ce,Se),Le.add(U)}),b.pop(),_=null,Le},this.compileAsync=function(H,xe,Ce=null){const Le=this.compile(H,xe,Ce);return new Promise(Se=>{function U(){if(Le.forEach(function(J){Ve.get(J).currentProgram.isReady()&&Le.delete(J)}),Le.size===0){Se(H);return}setTimeout(U,10)}te.get("KHR_parallel_shader_compile")!==null?U():setTimeout(U,10)})};let St=null;function Ot(H){St&&St(H)}function vn(){Yi.stop()}function ri(){Yi.start()}const Yi=new fR;Yi.setAnimationLoop(Ot),typeof self<"u"&&Yi.setContext(self),this.setAnimationLoop=function(H){St=H,$.setAnimationLoop(H),H===null?Yi.stop():Yi.start()},$.addEventListener("sessionstart",vn),$.addEventListener("sessionend",ri),this.render=function(H,xe){if(xe!==void 0&&xe.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;if(H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),xe.parent===null&&xe.matrixWorldAutoUpdate===!0&&xe.updateMatrixWorld(),$.enabled===!0&&$.isPresenting===!0&&($.cameraAutoUpdate===!0&&$.updateCamera(xe),xe=$.getCamera()),H.isScene===!0&&H.onBeforeRender(E,H,xe,P),_=ge.get(H,b.length),_.init(xe),b.push(_),Re.multiplyMatrices(xe.projectionMatrix,xe.matrixWorldInverse),Ge.setFromProjectionMatrix(Re),fe=this.localClippingEnabled,j=qe.init(this.clippingPlanes,fe),S=ye.get(H,g.length),S.init(),g.push(S),$.enabled===!0&&$.isPresenting===!0){const U=E.xr.getDepthSensingMesh();U!==null&&Cr(U,xe,-1/0,E.sortObjects)}Cr(H,xe,0,E.sortObjects),S.finish(),E.sortObjects===!0&&S.sort(B,ie),$e=$.enabled===!1||$.isPresenting===!1||$.hasDepthSensing()===!1,$e&&ze.addToRenderList(S,H),this.info.render.frame++,j===!0&&qe.beginShadows();const Ce=_.state.shadowsArray;Te.render(Ce,H,xe),j===!0&&qe.endShadows(),this.info.autoReset===!0&&this.info.reset();const Le=S.opaque,Se=S.transmissive;if(_.setupLights(),xe.isArrayCamera){const U=xe.cameras;if(Se.length>0)for(let J=0,ue=U.length;J<ue;J++){const re=U[J];Lr(Le,Se,H,re)}$e&&ze.render(H);for(let J=0,ue=U.length;J<ue;J++){const re=U[J];Pr(S,H,re,re.viewport)}}else Se.length>0&&Lr(Le,Se,H,xe),$e&&ze.render(H),Pr(S,H,xe);P!==null&&(ot.updateMultisampleRenderTarget(P),ot.updateRenderTargetMipmap(P)),H.isScene===!0&&H.onAfterRender(E,H,xe),nt.resetDefaultState(),N=-1,A=null,b.pop(),b.length>0?(_=b[b.length-1],j===!0&&qe.setGlobalState(E.clippingPlanes,_.state.camera)):_=null,g.pop(),g.length>0?S=g[g.length-1]:S=null};function Cr(H,xe,Ce,Le){if(H.visible===!1)return;if(H.layers.test(xe.layers)){if(H.isGroup)Ce=H.renderOrder;else if(H.isLOD)H.autoUpdate===!0&&H.update(xe);else if(H.isLight)_.pushLight(H),H.castShadow&&_.pushShadow(H);else if(H.isSprite){if(!H.frustumCulled||Ge.intersectsSprite(H)){Le&&Fe.setFromMatrixPosition(H.matrixWorld).applyMatrix4(Re);const J=I.update(H),ue=H.material;ue.visible&&S.push(H,J,ue,Ce,Fe.z,null)}}else if((H.isMesh||H.isLine||H.isPoints)&&(!H.frustumCulled||Ge.intersectsObject(H))){const J=I.update(H),ue=H.material;if(Le&&(H.boundingSphere!==void 0?(H.boundingSphere===null&&H.computeBoundingSphere(),Fe.copy(H.boundingSphere.center)):(J.boundingSphere===null&&J.computeBoundingSphere(),Fe.copy(J.boundingSphere.center)),Fe.applyMatrix4(H.matrixWorld).applyMatrix4(Re)),Array.isArray(ue)){const re=J.groups;for(let se=0,Oe=re.length;se<Oe;se++){const Be=re[se],Ke=ue[Be.materialIndex];Ke&&Ke.visible&&S.push(H,J,Ke,Ce,Fe.z,Be)}}else ue.visible&&S.push(H,J,ue,Ce,Fe.z,null)}}const U=H.children;for(let J=0,ue=U.length;J<ue;J++)Cr(U[J],xe,Ce,Le)}function Pr(H,xe,Ce,Le){const Se=H.opaque,U=H.transmissive,J=H.transparent;_.setupLightsView(Ce),j===!0&&qe.setGlobalState(E.clippingPlanes,Ce),Le&&st.viewport(w.copy(Le)),Se.length>0&&Ir(Se,xe,Ce),U.length>0&&Ir(U,xe,Ce),J.length>0&&Ir(J,xe,Ce),st.buffers.depth.setTest(!0),st.buffers.depth.setMask(!0),st.buffers.color.setMask(!0),st.setPolygonOffset(!1)}function Lr(H,xe,Ce,Le){if((Ce.isScene===!0?Ce.overrideMaterial:null)!==null)return;_.state.transmissionRenderTarget[Le.id]===void 0&&(_.state.transmissionRenderTarget[Le.id]=new Fl(1,1,{generateMipmaps:!0,type:te.has("EXT_color_buffer_half_float")||te.has("EXT_color_buffer_float")?Ph:ba,minFilter:El,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:an.workingColorSpace}));const U=_.state.transmissionRenderTarget[Le.id],J=Le.viewport||w;U.setSize(J.z,J.w);const ue=E.getRenderTarget();E.setRenderTarget(U),E.getClearColor(z),G=E.getClearAlpha(),G<1&&E.setClearColor(16777215,.5),E.clear(),$e&&ze.render(Ce);const re=E.toneMapping;E.toneMapping=Ro;const se=Le.viewport;if(Le.viewport!==void 0&&(Le.viewport=void 0),_.setupLightsView(Le),j===!0&&qe.setGlobalState(E.clippingPlanes,Le),Ir(H,Ce,Le),ot.updateMultisampleRenderTarget(U),ot.updateRenderTargetMipmap(U),te.has("WEBGL_multisampled_render_to_texture")===!1){let Oe=!1;for(let Be=0,Ke=xe.length;Be<Ke;Be++){const it=xe[Be],ut=it.object,gt=it.geometry,Qe=it.material,et=it.group;if(Qe.side===Is&&ut.layers.test(Le.layers)){const Et=Qe.side;Qe.side=cr,Qe.needsUpdate=!0,xs(ut,Ce,Le,gt,Qe,et),Qe.side=Et,Qe.needsUpdate=!0,Oe=!0}}Oe===!0&&(ot.updateMultisampleRenderTarget(U),ot.updateRenderTargetMipmap(U))}E.setRenderTarget(ue),E.setClearColor(z,G),se!==void 0&&(Le.viewport=se),E.toneMapping=re}function Ir(H,xe,Ce){const Le=xe.isScene===!0?xe.overrideMaterial:null;for(let Se=0,U=H.length;Se<U;Se++){const J=H[Se],ue=J.object,re=J.geometry,se=Le===null?J.material:Le,Oe=J.group;ue.layers.test(Ce.layers)&&xs(ue,xe,Ce,re,se,Oe)}}function xs(H,xe,Ce,Le,Se,U){H.onBeforeRender(E,xe,Ce,Le,Se,U),H.modelViewMatrix.multiplyMatrices(Ce.matrixWorldInverse,H.matrixWorld),H.normalMatrix.getNormalMatrix(H.modelViewMatrix),Se.onBeforeRender(E,xe,Ce,Le,H,U),Se.transparent===!0&&Se.side===Is&&Se.forceSinglePass===!1?(Se.side=cr,Se.needsUpdate=!0,E.renderBufferDirect(Ce,xe,Le,Se,H,U),Se.side=wa,Se.needsUpdate=!0,E.renderBufferDirect(Ce,xe,Le,Se,H,U),Se.side=Is):E.renderBufferDirect(Ce,xe,Le,Se,H,U),H.onAfterRender(E,xe,Ce,Le,Se,U)}function hr(H,xe,Ce){xe.isScene!==!0&&(xe=He);const Le=Ve.get(H),Se=_.state.lights,U=_.state.shadowsArray,J=Se.state.version,ue=Y.getParameters(H,Se.state,U,xe,Ce),re=Y.getProgramCacheKey(ue);let se=Le.programs;Le.environment=H.isMeshStandardMaterial?xe.environment:null,Le.fog=xe.fog,Le.envMap=(H.isMeshStandardMaterial?O:W).get(H.envMap||Le.environment),Le.envMapRotation=Le.environment!==null&&H.envMap===null?xe.environmentRotation:H.envMapRotation,se===void 0&&(H.addEventListener("dispose",Ue),se=new Map,Le.programs=se);let Oe=se.get(re);if(Oe!==void 0){if(Le.currentProgram===Oe&&Le.lightsStateVersion===J)return Ws(H,ue),Oe}else ue.uniforms=Y.getUniforms(H),H.onBeforeCompile(ue,E),Oe=Y.acquireProgram(ue,re),se.set(re,Oe),Le.uniforms=ue.uniforms;const Be=Le.uniforms;return(!H.isShaderMaterial&&!H.isRawShaderMaterial||H.clipping===!0)&&(Be.clippingPlanes=qe.uniform),Ws(H,ue),Le.needsLights=zl(H),Le.lightsStateVersion=J,Le.needsLights&&(Be.ambientLightColor.value=Se.state.ambient,Be.lightProbe.value=Se.state.probe,Be.directionalLights.value=Se.state.directional,Be.directionalLightShadows.value=Se.state.directionalShadow,Be.spotLights.value=Se.state.spot,Be.spotLightShadows.value=Se.state.spotShadow,Be.rectAreaLights.value=Se.state.rectArea,Be.ltc_1.value=Se.state.rectAreaLTC1,Be.ltc_2.value=Se.state.rectAreaLTC2,Be.pointLights.value=Se.state.point,Be.pointLightShadows.value=Se.state.pointShadow,Be.hemisphereLights.value=Se.state.hemi,Be.directionalShadowMap.value=Se.state.directionalShadowMap,Be.directionalShadowMatrix.value=Se.state.directionalShadowMatrix,Be.spotShadowMap.value=Se.state.spotShadowMap,Be.spotLightMatrix.value=Se.state.spotLightMatrix,Be.spotLightMap.value=Se.state.spotLightMap,Be.pointShadowMap.value=Se.state.pointShadowMap,Be.pointShadowMatrix.value=Se.state.pointShadowMatrix),Le.currentProgram=Oe,Le.uniformsList=null,Oe}function Oo(H){if(H.uniformsList===null){const xe=H.currentProgram.getUniforms();H.uniformsList=fm.seqWithValue(xe.seq,H.uniforms)}return H.uniformsList}function Ws(H,xe){const Ce=Ve.get(H);Ce.outputColorSpace=xe.outputColorSpace,Ce.batching=xe.batching,Ce.batchingColor=xe.batchingColor,Ce.instancing=xe.instancing,Ce.instancingColor=xe.instancingColor,Ce.instancingMorph=xe.instancingMorph,Ce.skinning=xe.skinning,Ce.morphTargets=xe.morphTargets,Ce.morphNormals=xe.morphNormals,Ce.morphColors=xe.morphColors,Ce.morphTargetsCount=xe.morphTargetsCount,Ce.numClippingPlanes=xe.numClippingPlanes,Ce.numIntersection=xe.numClipIntersection,Ce.vertexAlphas=xe.vertexAlphas,Ce.vertexTangents=xe.vertexTangents,Ce.toneMapping=xe.toneMapping}function Bl(H,xe,Ce,Le,Se){xe.isScene!==!0&&(xe=He),ot.resetTextureUnits();const U=xe.fog,J=Le.isMeshStandardMaterial?xe.environment:null,ue=P===null?E.outputColorSpace:P.isXRRenderTarget===!0?P.texture.colorSpace:Uo,re=(Le.isMeshStandardMaterial?O:W).get(Le.envMap||J),se=Le.vertexColors===!0&&!!Ce.attributes.color&&Ce.attributes.color.itemSize===4,Oe=!!Ce.attributes.tangent&&(!!Le.normalMap||Le.anisotropy>0),Be=!!Ce.morphAttributes.position,Ke=!!Ce.morphAttributes.normal,it=!!Ce.morphAttributes.color;let ut=Ro;Le.toneMapped&&(P===null||P.isXRRenderTarget===!0)&&(ut=E.toneMapping);const gt=Ce.morphAttributes.position||Ce.morphAttributes.normal||Ce.morphAttributes.color,Qe=gt!==void 0?gt.length:0,et=Ve.get(Le),Et=_.state.lights;if(j===!0&&(fe===!0||H!==A)){const hn=H===A&&Le.id===N;qe.setState(Le,H,hn)}let At=!1;Le.version===et.__version?(et.needsLights&&et.lightsStateVersion!==Et.state.version||et.outputColorSpace!==ue||Se.isBatchedMesh&&et.batching===!1||!Se.isBatchedMesh&&et.batching===!0||Se.isBatchedMesh&&et.batchingColor===!0&&Se.colorTexture===null||Se.isBatchedMesh&&et.batchingColor===!1&&Se.colorTexture!==null||Se.isInstancedMesh&&et.instancing===!1||!Se.isInstancedMesh&&et.instancing===!0||Se.isSkinnedMesh&&et.skinning===!1||!Se.isSkinnedMesh&&et.skinning===!0||Se.isInstancedMesh&&et.instancingColor===!0&&Se.instanceColor===null||Se.isInstancedMesh&&et.instancingColor===!1&&Se.instanceColor!==null||Se.isInstancedMesh&&et.instancingMorph===!0&&Se.morphTexture===null||Se.isInstancedMesh&&et.instancingMorph===!1&&Se.morphTexture!==null||et.envMap!==re||Le.fog===!0&&et.fog!==U||et.numClippingPlanes!==void 0&&(et.numClippingPlanes!==qe.numPlanes||et.numIntersection!==qe.numIntersection)||et.vertexAlphas!==se||et.vertexTangents!==Oe||et.morphTargets!==Be||et.morphNormals!==Ke||et.morphColors!==it||et.toneMapping!==ut||et.morphTargetsCount!==Qe)&&(At=!0):(At=!0,et.__version=Le.version);let Ht=et.currentProgram;At===!0&&(Ht=hr(Le,xe,Se));let Yt=!1,ft=!1,tn=!1;const Mt=Ht.getUniforms(),mn=et.uniforms;if(st.useProgram(Ht.program)&&(Yt=!0,ft=!0,tn=!0),Le.id!==N&&(N=Le.id,ft=!0),Yt||A!==H){Mt.setValue(ee,"projectionMatrix",H.projectionMatrix),Mt.setValue(ee,"viewMatrix",H.matrixWorldInverse);const hn=Mt.map.cameraPosition;hn!==void 0&&hn.setValue(ee,Ee.setFromMatrixPosition(H.matrixWorld)),Lt.logarithmicDepthBuffer&&Mt.setValue(ee,"logDepthBufFC",2/(Math.log(H.far+1)/Math.LN2)),(Le.isMeshPhongMaterial||Le.isMeshToonMaterial||Le.isMeshLambertMaterial||Le.isMeshBasicMaterial||Le.isMeshStandardMaterial||Le.isShaderMaterial)&&Mt.setValue(ee,"isOrthographic",H.isOrthographicCamera===!0),A!==H&&(A=H,ft=!0,tn=!0)}if(Se.isSkinnedMesh){Mt.setOptional(ee,Se,"bindMatrix"),Mt.setOptional(ee,Se,"bindMatrixInverse");const hn=Se.skeleton;hn&&(hn.boneTexture===null&&hn.computeBoneTexture(),Mt.setValue(ee,"boneTexture",hn.boneTexture,ot))}Se.isBatchedMesh&&(Mt.setOptional(ee,Se,"batchingTexture"),Mt.setValue(ee,"batchingTexture",Se._matricesTexture,ot),Mt.setOptional(ee,Se,"batchingIdTexture"),Mt.setValue(ee,"batchingIdTexture",Se._indirectTexture,ot),Mt.setOptional(ee,Se,"batchingColorTexture"),Se._colorsTexture!==null&&Mt.setValue(ee,"batchingColorTexture",Se._colorsTexture,ot));const Nr=Ce.morphAttributes;if((Nr.position!==void 0||Nr.normal!==void 0||Nr.color!==void 0)&&tt.update(Se,Ce,Ht),(ft||et.receiveShadow!==Se.receiveShadow)&&(et.receiveShadow=Se.receiveShadow,Mt.setValue(ee,"receiveShadow",Se.receiveShadow)),Le.isMeshGouraudMaterial&&Le.envMap!==null&&(mn.envMap.value=re,mn.flipEnvMap.value=re.isCubeTexture&&re.isRenderTargetTexture===!1?-1:1),Le.isMeshStandardMaterial&&Le.envMap===null&&xe.environment!==null&&(mn.envMapIntensity.value=xe.environmentIntensity),ft&&(Mt.setValue(ee,"toneMappingExposure",E.toneMappingExposure),et.needsLights&&Dr(mn,tn),U&&Le.fog===!0&&Me.refreshFogUniforms(mn,U),Me.refreshMaterialUniforms(mn,Le,K,q,_.state.transmissionRenderTarget[H.id]),fm.upload(ee,Oo(et),mn,ot)),Le.isShaderMaterial&&Le.uniformsNeedUpdate===!0&&(fm.upload(ee,Oo(et),mn,ot),Le.uniformsNeedUpdate=!1),Le.isSpriteMaterial&&Mt.setValue(ee,"center",Se.center),Mt.setValue(ee,"modelViewMatrix",Se.modelViewMatrix),Mt.setValue(ee,"normalMatrix",Se.normalMatrix),Mt.setValue(ee,"modelMatrix",Se.matrixWorld),Le.isShaderMaterial||Le.isRawShaderMaterial){const hn=Le.uniformsGroups;for(let dr=0,on=hn.length;dr<on;dr++){const Yn=hn[dr];We.update(Yn,Ht),We.bind(Yn,Ht)}}return Ht}function Dr(H,xe){H.ambientLightColor.needsUpdate=xe,H.lightProbe.needsUpdate=xe,H.directionalLights.needsUpdate=xe,H.directionalLightShadows.needsUpdate=xe,H.pointLights.needsUpdate=xe,H.pointLightShadows.needsUpdate=xe,H.spotLights.needsUpdate=xe,H.spotLightShadows.needsUpdate=xe,H.rectAreaLights.needsUpdate=xe,H.hemisphereLights.needsUpdate=xe}function zl(H){return H.isMeshLambertMaterial||H.isMeshToonMaterial||H.isMeshPhongMaterial||H.isMeshStandardMaterial||H.isShadowMaterial||H.isShaderMaterial&&H.lights===!0}this.getActiveCubeFace=function(){return L},this.getActiveMipmapLevel=function(){return C},this.getRenderTarget=function(){return P},this.setRenderTargetTextures=function(H,xe,Ce){Ve.get(H.texture).__webglTexture=xe,Ve.get(H.depthTexture).__webglTexture=Ce;const Le=Ve.get(H);Le.__hasExternalTextures=!0,Le.__autoAllocateDepthBuffer=Ce===void 0,Le.__autoAllocateDepthBuffer||te.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Le.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(H,xe){const Ce=Ve.get(H);Ce.__webglFramebuffer=xe,Ce.__useDefaultFramebuffer=xe===void 0},this.setRenderTarget=function(H,xe=0,Ce=0){P=H,L=xe,C=Ce;let Le=!0,Se=null,U=!1,J=!1;if(H){const re=Ve.get(H);if(re.__useDefaultFramebuffer!==void 0)st.bindFramebuffer(ee.FRAMEBUFFER,null),Le=!1;else if(re.__webglFramebuffer===void 0)ot.setupRenderTarget(H);else if(re.__hasExternalTextures)ot.rebindTextures(H,Ve.get(H.texture).__webglTexture,Ve.get(H.depthTexture).__webglTexture);else if(H.depthBuffer){const Be=H.depthTexture;if(re.__boundDepthTexture!==Be){if(Be!==null&&Ve.has(Be)&&(H.width!==Be.image.width||H.height!==Be.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ot.setupDepthRenderbuffer(H)}}const se=H.texture;(se.isData3DTexture||se.isDataArrayTexture||se.isCompressedArrayTexture)&&(J=!0);const Oe=Ve.get(H).__webglFramebuffer;H.isWebGLCubeRenderTarget?(Array.isArray(Oe[xe])?Se=Oe[xe][Ce]:Se=Oe[xe],U=!0):H.samples>0&&ot.useMultisampledRTT(H)===!1?Se=Ve.get(H).__webglMultisampledFramebuffer:Array.isArray(Oe)?Se=Oe[Ce]:Se=Oe,w.copy(H.viewport),D.copy(H.scissor),X=H.scissorTest}else w.copy(oe).multiplyScalar(K).floor(),D.copy(V).multiplyScalar(K).floor(),X=de;if(st.bindFramebuffer(ee.FRAMEBUFFER,Se)&&Le&&st.drawBuffers(H,Se),st.viewport(w),st.scissor(D),st.setScissorTest(X),U){const re=Ve.get(H.texture);ee.framebufferTexture2D(ee.FRAMEBUFFER,ee.COLOR_ATTACHMENT0,ee.TEXTURE_CUBE_MAP_POSITIVE_X+xe,re.__webglTexture,Ce)}else if(J){const re=Ve.get(H.texture),se=xe||0;ee.framebufferTextureLayer(ee.FRAMEBUFFER,ee.COLOR_ATTACHMENT0,re.__webglTexture,Ce||0,se)}N=-1},this.readRenderTargetPixels=function(H,xe,Ce,Le,Se,U,J){if(!(H&&H.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ue=Ve.get(H).__webglFramebuffer;if(H.isWebGLCubeRenderTarget&&J!==void 0&&(ue=ue[J]),ue){st.bindFramebuffer(ee.FRAMEBUFFER,ue);try{const re=H.texture,se=re.format,Oe=re.type;if(!Lt.textureFormatReadable(se)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!Lt.textureTypeReadable(Oe)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}xe>=0&&xe<=H.width-Le&&Ce>=0&&Ce<=H.height-Se&&ee.readPixels(xe,Ce,Le,Se,Je.convert(se),Je.convert(Oe),U)}finally{const re=P!==null?Ve.get(P).__webglFramebuffer:null;st.bindFramebuffer(ee.FRAMEBUFFER,re)}}},this.readRenderTargetPixelsAsync=async function(H,xe,Ce,Le,Se,U,J){if(!(H&&H.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let ue=Ve.get(H).__webglFramebuffer;if(H.isWebGLCubeRenderTarget&&J!==void 0&&(ue=ue[J]),ue){st.bindFramebuffer(ee.FRAMEBUFFER,ue);try{const re=H.texture,se=re.format,Oe=re.type;if(!Lt.textureFormatReadable(se))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!Lt.textureTypeReadable(Oe))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(xe>=0&&xe<=H.width-Le&&Ce>=0&&Ce<=H.height-Se){const Be=ee.createBuffer();ee.bindBuffer(ee.PIXEL_PACK_BUFFER,Be),ee.bufferData(ee.PIXEL_PACK_BUFFER,U.byteLength,ee.STREAM_READ),ee.readPixels(xe,Ce,Le,Se,Je.convert(se),Je.convert(Oe),0),ee.flush();const Ke=ee.fenceSync(ee.SYNC_GPU_COMMANDS_COMPLETE,0);await a7(ee,Ke,4);try{ee.bindBuffer(ee.PIXEL_PACK_BUFFER,Be),ee.getBufferSubData(ee.PIXEL_PACK_BUFFER,0,U)}finally{ee.deleteBuffer(Be),ee.deleteSync(Ke)}return U}}finally{const re=P!==null?Ve.get(P).__webglFramebuffer:null;st.bindFramebuffer(ee.FRAMEBUFFER,re)}}},this.copyFramebufferToTexture=function(H,xe=null,Ce=0){H.isTexture!==!0&&(sh("WebGLRenderer: copyFramebufferToTexture function signature has changed."),xe=arguments[0]||null,H=arguments[1]);const Le=Math.pow(2,-Ce),Se=Math.floor(H.image.width*Le),U=Math.floor(H.image.height*Le),J=xe!==null?xe.x:0,ue=xe!==null?xe.y:0;ot.setTexture2D(H,0),ee.copyTexSubImage2D(ee.TEXTURE_2D,Ce,0,0,J,ue,Se,U),st.unbindTexture()},this.copyTextureToTexture=function(H,xe,Ce=null,Le=null,Se=0){H.isTexture!==!0&&(sh("WebGLRenderer: copyTextureToTexture function signature has changed."),Le=arguments[0]||null,H=arguments[1],xe=arguments[2],Se=arguments[3]||0,Ce=null);let U,J,ue,re,se,Oe;Ce!==null?(U=Ce.max.x-Ce.min.x,J=Ce.max.y-Ce.min.y,ue=Ce.min.x,re=Ce.min.y):(U=H.image.width,J=H.image.height,ue=0,re=0),Le!==null?(se=Le.x,Oe=Le.y):(se=0,Oe=0);const Be=Je.convert(xe.format),Ke=Je.convert(xe.type);ot.setTexture2D(xe,0),ee.pixelStorei(ee.UNPACK_FLIP_Y_WEBGL,xe.flipY),ee.pixelStorei(ee.UNPACK_PREMULTIPLY_ALPHA_WEBGL,xe.premultiplyAlpha),ee.pixelStorei(ee.UNPACK_ALIGNMENT,xe.unpackAlignment);const it=ee.getParameter(ee.UNPACK_ROW_LENGTH),ut=ee.getParameter(ee.UNPACK_IMAGE_HEIGHT),gt=ee.getParameter(ee.UNPACK_SKIP_PIXELS),Qe=ee.getParameter(ee.UNPACK_SKIP_ROWS),et=ee.getParameter(ee.UNPACK_SKIP_IMAGES),Et=H.isCompressedTexture?H.mipmaps[Se]:H.image;ee.pixelStorei(ee.UNPACK_ROW_LENGTH,Et.width),ee.pixelStorei(ee.UNPACK_IMAGE_HEIGHT,Et.height),ee.pixelStorei(ee.UNPACK_SKIP_PIXELS,ue),ee.pixelStorei(ee.UNPACK_SKIP_ROWS,re),H.isDataTexture?ee.texSubImage2D(ee.TEXTURE_2D,Se,se,Oe,U,J,Be,Ke,Et.data):H.isCompressedTexture?ee.compressedTexSubImage2D(ee.TEXTURE_2D,Se,se,Oe,Et.width,Et.height,Be,Et.data):ee.texSubImage2D(ee.TEXTURE_2D,Se,se,Oe,U,J,Be,Ke,Et),ee.pixelStorei(ee.UNPACK_ROW_LENGTH,it),ee.pixelStorei(ee.UNPACK_IMAGE_HEIGHT,ut),ee.pixelStorei(ee.UNPACK_SKIP_PIXELS,gt),ee.pixelStorei(ee.UNPACK_SKIP_ROWS,Qe),ee.pixelStorei(ee.UNPACK_SKIP_IMAGES,et),Se===0&&xe.generateMipmaps&&ee.generateMipmap(ee.TEXTURE_2D),st.unbindTexture()},this.copyTextureToTexture3D=function(H,xe,Ce=null,Le=null,Se=0){H.isTexture!==!0&&(sh("WebGLRenderer: copyTextureToTexture3D function signature has changed."),Ce=arguments[0]||null,Le=arguments[1]||null,H=arguments[2],xe=arguments[3],Se=arguments[4]||0);let U,J,ue,re,se,Oe,Be,Ke,it;const ut=H.isCompressedTexture?H.mipmaps[Se]:H.image;Ce!==null?(U=Ce.max.x-Ce.min.x,J=Ce.max.y-Ce.min.y,ue=Ce.max.z-Ce.min.z,re=Ce.min.x,se=Ce.min.y,Oe=Ce.min.z):(U=ut.width,J=ut.height,ue=ut.depth,re=0,se=0,Oe=0),Le!==null?(Be=Le.x,Ke=Le.y,it=Le.z):(Be=0,Ke=0,it=0);const gt=Je.convert(xe.format),Qe=Je.convert(xe.type);let et;if(xe.isData3DTexture)ot.setTexture3D(xe,0),et=ee.TEXTURE_3D;else if(xe.isDataArrayTexture||xe.isCompressedArrayTexture)ot.setTexture2DArray(xe,0),et=ee.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ee.pixelStorei(ee.UNPACK_FLIP_Y_WEBGL,xe.flipY),ee.pixelStorei(ee.UNPACK_PREMULTIPLY_ALPHA_WEBGL,xe.premultiplyAlpha),ee.pixelStorei(ee.UNPACK_ALIGNMENT,xe.unpackAlignment);const Et=ee.getParameter(ee.UNPACK_ROW_LENGTH),At=ee.getParameter(ee.UNPACK_IMAGE_HEIGHT),Ht=ee.getParameter(ee.UNPACK_SKIP_PIXELS),Yt=ee.getParameter(ee.UNPACK_SKIP_ROWS),ft=ee.getParameter(ee.UNPACK_SKIP_IMAGES);ee.pixelStorei(ee.UNPACK_ROW_LENGTH,ut.width),ee.pixelStorei(ee.UNPACK_IMAGE_HEIGHT,ut.height),ee.pixelStorei(ee.UNPACK_SKIP_PIXELS,re),ee.pixelStorei(ee.UNPACK_SKIP_ROWS,se),ee.pixelStorei(ee.UNPACK_SKIP_IMAGES,Oe),H.isDataTexture||H.isData3DTexture?ee.texSubImage3D(et,Se,Be,Ke,it,U,J,ue,gt,Qe,ut.data):xe.isCompressedArrayTexture?ee.compressedTexSubImage3D(et,Se,Be,Ke,it,U,J,ue,gt,ut.data):ee.texSubImage3D(et,Se,Be,Ke,it,U,J,ue,gt,Qe,ut),ee.pixelStorei(ee.UNPACK_ROW_LENGTH,Et),ee.pixelStorei(ee.UNPACK_IMAGE_HEIGHT,At),ee.pixelStorei(ee.UNPACK_SKIP_PIXELS,Ht),ee.pixelStorei(ee.UNPACK_SKIP_ROWS,Yt),ee.pixelStorei(ee.UNPACK_SKIP_IMAGES,ft),Se===0&&xe.generateMipmaps&&ee.generateMipmap(et),st.unbindTexture()},this.initRenderTarget=function(H){Ve.get(H).__webglFramebuffer===void 0&&ot.setupRenderTarget(H)},this.initTexture=function(H){H.isCubeTexture?ot.setTextureCube(H,0):H.isData3DTexture?ot.setTexture3D(H,0):H.isDataArrayTexture||H.isCompressedArrayTexture?ot.setTexture2DArray(H,0):ot.setTexture2D(H,0),st.unbindTexture()},this.resetState=function(){L=0,C=0,P=null,st.reset(),nt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ya}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=e===Sy?"display-p3":"srgb",t.unpackColorSpace=an.workingColorSpace===i0?"display-p3":"srgb"}}class _V extends Ei{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Hs,this.environmentIntensity=1,this.environmentRotation=new Hs,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class vR extends Dh{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new fn(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Om=new me,Fm=new me,Ww=new In,kf=new My,Up=new r0,cv=new me,Xw=new me;class uo extends Ei{constructor(e=new qi,t=new vR){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)Om.fromBufferAttribute(t,r-1),Fm.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=Om.distanceTo(Fm);e.setAttribute("lineDistance",new wn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Up.copy(n.boundingSphere),Up.applyMatrix4(r),Up.radius+=s,e.ray.intersectsSphere(Up)===!1)return;Ww.copy(r).invert(),kf.copy(e.ray).applyMatrix4(Ww);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,f=this.isLineSegments?2:1,h=n.index,m=n.attributes.position;if(h!==null){const v=Math.max(0,o.start),y=Math.min(h.count,o.start+o.count);for(let S=v,_=y-1;S<_;S+=f){const g=h.getX(S),b=h.getX(S+1),E=Op(this,e,kf,u,g,b);E&&t.push(E)}if(this.isLineLoop){const S=h.getX(y-1),_=h.getX(v),g=Op(this,e,kf,u,S,_);g&&t.push(g)}}else{const v=Math.max(0,o.start),y=Math.min(m.count,o.start+o.count);for(let S=v,_=y-1;S<_;S+=f){const g=Op(this,e,kf,u,S,S+1);g&&t.push(g)}if(this.isLineLoop){const S=Op(this,e,kf,u,y-1,v);S&&t.push(S)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const c=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function Op(i,e,t,n,r,s){const o=i.geometry.attributes.position;if(Om.fromBufferAttribute(o,r),Fm.fromBufferAttribute(o,s),t.distanceSqToSegment(Om,Fm,cv,Xw)>n)return;cv.applyMatrix4(i.matrixWorld);const u=e.ray.origin.distanceTo(cv);if(!(u<e.near||u>e.far))return{distance:u,point:Xw.clone().applyMatrix4(i.matrixWorld),index:r,face:null,faceIndex:null,object:i}}class Ni extends qi{constructor(e=1,t=1,n=1,r=32,s=1,o=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:c,thetaLength:u};const f=this;r=Math.floor(r),s=Math.floor(s);const h=[],p=[],m=[],v=[];let y=0;const S=[],_=n/2;let g=0;b(),o===!1&&(e>0&&E(!0),t>0&&E(!1)),this.setIndex(h),this.setAttribute("position",new wn(p,3)),this.setAttribute("normal",new wn(m,3)),this.setAttribute("uv",new wn(v,2));function b(){const T=new me,L=new me;let C=0;const P=(t-e)/n;for(let N=0;N<=s;N++){const A=[],w=N/s,D=w*(t-e)+e;for(let X=0;X<=r;X++){const z=X/r,G=z*u+c,Z=Math.sin(G),q=Math.cos(G);L.x=D*Z,L.y=-w*n+_,L.z=D*q,p.push(L.x,L.y,L.z),T.set(Z,P,q).normalize(),m.push(T.x,T.y,T.z),v.push(z,1-w),A.push(y++)}S.push(A)}for(let N=0;N<r;N++)for(let A=0;A<s;A++){const w=S[A][N],D=S[A+1][N],X=S[A+1][N+1],z=S[A][N+1];h.push(w,D,z),h.push(D,X,z),C+=6}f.addGroup(g,C,0),g+=C}function E(T){const L=y,C=new Kt,P=new me;let N=0;const A=T===!0?e:t,w=T===!0?1:-1;for(let X=1;X<=r;X++)p.push(0,_*w,0),m.push(0,w,0),v.push(.5,.5),y++;const D=y;for(let X=0;X<=r;X++){const G=X/r*u+c,Z=Math.cos(G),q=Math.sin(G);P.x=A*q,P.y=_*w,P.z=A*Z,p.push(P.x,P.y,P.z),m.push(0,w,0),C.x=Z*.5+.5,C.y=q*.5*w+.5,v.push(C.x,C.y),y++}for(let X=0;X<r;X++){const z=L+X,G=D+X;T===!0?h.push(G,G+1,z):h.push(G+1,G,z),N+=3}f.addGroup(g,N,T===!0?1:2),g+=N}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ni(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class by extends qi{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];c(r),f(n),h(),this.setAttribute("position",new wn(s,3)),this.setAttribute("normal",new wn(s.slice(),3)),this.setAttribute("uv",new wn(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function c(b){const E=new me,T=new me,L=new me;for(let C=0;C<t.length;C+=3)v(t[C+0],E),v(t[C+1],T),v(t[C+2],L),u(E,T,L,b)}function u(b,E,T,L){const C=L+1,P=[];for(let N=0;N<=C;N++){P[N]=[];const A=b.clone().lerp(T,N/C),w=E.clone().lerp(T,N/C),D=C-N;for(let X=0;X<=D;X++)X===0&&N===C?P[N][X]=A:P[N][X]=A.clone().lerp(w,X/D)}for(let N=0;N<C;N++)for(let A=0;A<2*(C-N)-1;A++){const w=Math.floor(A/2);A%2===0?(m(P[N][w+1]),m(P[N+1][w]),m(P[N][w])):(m(P[N][w+1]),m(P[N+1][w+1]),m(P[N+1][w]))}}function f(b){const E=new me;for(let T=0;T<s.length;T+=3)E.x=s[T+0],E.y=s[T+1],E.z=s[T+2],E.normalize().multiplyScalar(b),s[T+0]=E.x,s[T+1]=E.y,s[T+2]=E.z}function h(){const b=new me;for(let E=0;E<s.length;E+=3){b.x=s[E+0],b.y=s[E+1],b.z=s[E+2];const T=_(b)/2/Math.PI+.5,L=g(b)/Math.PI+.5;o.push(T,1-L)}y(),p()}function p(){for(let b=0;b<o.length;b+=6){const E=o[b+0],T=o[b+2],L=o[b+4],C=Math.max(E,T,L),P=Math.min(E,T,L);C>.9&&P<.1&&(E<.2&&(o[b+0]+=1),T<.2&&(o[b+2]+=1),L<.2&&(o[b+4]+=1))}}function m(b){s.push(b.x,b.y,b.z)}function v(b,E){const T=b*3;E.x=e[T+0],E.y=e[T+1],E.z=e[T+2]}function y(){const b=new me,E=new me,T=new me,L=new me,C=new Kt,P=new Kt,N=new Kt;for(let A=0,w=0;A<s.length;A+=9,w+=6){b.set(s[A+0],s[A+1],s[A+2]),E.set(s[A+3],s[A+4],s[A+5]),T.set(s[A+6],s[A+7],s[A+8]),C.set(o[w+0],o[w+1]),P.set(o[w+2],o[w+3]),N.set(o[w+4],o[w+5]),L.copy(b).add(E).add(T).divideScalar(3);const D=_(L);S(C,w+0,b,D),S(P,w+2,E,D),S(N,w+4,T,D)}}function S(b,E,T,L){L<0&&b.x===1&&(o[E]=b.x-1),T.x===0&&T.z===0&&(o[E]=L/2/Math.PI+.5)}function _(b){return Math.atan2(b.z,-b.x)}function g(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new by(e.vertices,e.indices,e.radius,e.details)}}class Zc extends by{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Zc(e.radius,e.detail)}}class Ay extends qi{constructor(e=.5,t=1,n=32,r=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:s,thetaLength:o},n=Math.max(3,n),r=Math.max(1,r);const c=[],u=[],f=[],h=[];let p=e;const m=(t-e)/r,v=new me,y=new Kt;for(let S=0;S<=r;S++){for(let _=0;_<=n;_++){const g=s+_/n*o;v.x=p*Math.cos(g),v.y=p*Math.sin(g),u.push(v.x,v.y,v.z),f.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,h.push(y.x,y.y)}p+=m}for(let S=0;S<r;S++){const _=S*(n+1);for(let g=0;g<n;g++){const b=g+_,E=b,T=b+n+1,L=b+n+2,C=b+1;c.push(E,T,C),c.push(T,L,C)}}this.setIndex(c),this.setAttribute("position",new wn(u,3)),this.setAttribute("normal",new wn(f,3)),this.setAttribute("uv",new wn(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ay(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Ry extends qi{constructor(e=1,t=32,n=16,r=0,s=Math.PI*2,o=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:s,thetaStart:o,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+c,Math.PI);let f=0;const h=[],p=new me,m=new me,v=[],y=[],S=[],_=[];for(let g=0;g<=n;g++){const b=[],E=g/n;let T=0;g===0&&o===0?T=.5/t:g===n&&u===Math.PI&&(T=-.5/t);for(let L=0;L<=t;L++){const C=L/t;p.x=-e*Math.cos(r+C*s)*Math.sin(o+E*c),p.y=e*Math.cos(o+E*c),p.z=e*Math.sin(r+C*s)*Math.sin(o+E*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),S.push(m.x,m.y,m.z),_.push(C+T,1-E),b.push(f++)}h.push(b)}for(let g=0;g<n;g++)for(let b=0;b<t;b++){const E=h[g][b+1],T=h[g][b],L=h[g+1][b],C=h[g+1][b+1];(g!==0||o>0)&&v.push(E,T,C),(g!==n-1||u<Math.PI)&&v.push(T,L,C)}this.setIndex(v),this.setAttribute("position",new wn(y,3)),this.setAttribute("normal",new wn(S,3)),this.setAttribute("uv",new wn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class yl extends qi{constructor(e=1,t=.4,n=12,r=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:s},n=Math.floor(n),r=Math.floor(r);const o=[],c=[],u=[],f=[],h=new me,p=new me,m=new me;for(let v=0;v<=n;v++)for(let y=0;y<=r;y++){const S=y/r*s,_=v/n*Math.PI*2;p.x=(e+t*Math.cos(_))*Math.cos(S),p.y=(e+t*Math.cos(_))*Math.sin(S),p.z=t*Math.sin(_),c.push(p.x,p.y,p.z),h.x=e*Math.cos(S),h.y=e*Math.sin(S),m.subVectors(p,h).normalize(),u.push(m.x,m.y,m.z),f.push(y/r),f.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=r;y++){const S=(r+1)*v+y-1,_=(r+1)*(v-1)+y-1,g=(r+1)*(v-1)+y,b=(r+1)*v+y;o.push(S,_,b),o.push(_,g,b)}this.setIndex(o),this.setAttribute("position",new wn(c,3)),this.setAttribute("normal",new wn(u,3)),this.setAttribute("uv",new wn(f,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new yl(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}const $w=new In;class vV{constructor(e,t,n=0,r=1/0){this.ray=new My(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Ey,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}setFromXRController(e){return $w.identity().extractRotation(e.matrixWorld),this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4($w),this}intersectObject(e,t=!0,n=[]){return xx(e,this,n,t),n.sort(jw),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)xx(e[r],this,n,t);return n.sort(jw),n}}function jw(i,e){return i.distance-e.distance}function xx(i,e,t,n){let r=!0;if(i.layers.test(e.layers)&&i.raycast(e,t)===!1&&(r=!1),r===!0&&n===!0){const s=i.children;for(let o=0,c=s.length;o<c;o++)xx(s[o],e,t,!0)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:py}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=py);const ll=new vV,Ui=new me,fo=new me,An=new Si,qw={X:new me(1,0,0),Y:new me(0,1,0),Z:new me(0,0,1)},uv={type:"change"},Yw={type:"mouseDown",mode:null},Kw={type:"mouseUp",mode:null},Zw={type:"objectChange"};class Qw extends Ei{constructor(e,t){super(),t===void 0&&(console.warn('THREE.TransformControls: The second parameter "domElement" is now mandatory.'),t=document),this.isTransformControls=!0,this.visible=!1,this.domElement=t,this.domElement.style.touchAction="none";const n=new TV;this._gizmo=n,this.add(n);const r=new wV;this._plane=r,this.add(r);const s=this;function o(b,E){let T=E;Object.defineProperty(s,b,{get:function(){return T!==void 0?T:E},set:function(L){T!==L&&(T=L,r[b]=L,n[b]=L,s.dispatchEvent({type:b+"-changed",value:L}),s.dispatchEvent(uv))}}),s[b]=E,r[b]=E,n[b]=E}o("camera",e),o("object",void 0),o("enabled",!0),o("axis",null),o("mode","translate"),o("translationSnap",null),o("rotationSnap",null),o("scaleSnap",null),o("space","world"),o("size",1),o("dragging",!1),o("showX",!0),o("showY",!0),o("showZ",!0);const c=new me,u=new me,f=new Si,h=new Si,p=new me,m=new Si,v=new me,y=new me,S=new me,_=0,g=new me;o("worldPosition",c),o("worldPositionStart",u),o("worldQuaternion",f),o("worldQuaternionStart",h),o("cameraPosition",p),o("cameraQuaternion",m),o("pointStart",v),o("pointEnd",y),o("rotationAxis",S),o("rotationAngle",_),o("eye",g),this._offset=new me,this._startNorm=new me,this._endNorm=new me,this._cameraScale=new me,this._parentPosition=new me,this._parentQuaternion=new Si,this._parentQuaternionInv=new Si,this._parentScale=new me,this._worldScaleStart=new me,this._worldQuaternionInv=new Si,this._worldScale=new me,this._positionStart=new me,this._quaternionStart=new Si,this._scaleStart=new me,this._getPointer=xV.bind(this),this._onPointerDown=SV.bind(this),this._onPointerHover=yV.bind(this),this._onPointerMove=MV.bind(this),this._onPointerUp=EV.bind(this),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp)}updateMatrixWorld(e){this.object!==void 0&&(this.object.updateMatrixWorld(),this.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):this.object.parent.matrixWorld.decompose(this._parentPosition,this._parentQuaternion,this._parentScale),this.object.matrixWorld.decompose(this.worldPosition,this.worldQuaternion,this._worldScale),this._parentQuaternionInv.copy(this._parentQuaternion).invert(),this._worldQuaternionInv.copy(this.worldQuaternion).invert()),this.camera.updateMatrixWorld(),this.camera.matrixWorld.decompose(this.cameraPosition,this.cameraQuaternion,this._cameraScale),this.camera.isOrthographicCamera?this.camera.getWorldDirection(this.eye).negate():this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize(),super.updateMatrixWorld(e)}pointerHover(e){if(this.object===void 0||this.dragging===!0)return;e!==null&&ll.setFromCamera(e,this.camera);const t=fv(this._gizmo.picker[this.mode],ll);t?this.axis=t.object.name:this.axis=null}pointerDown(e){if(!(this.object===void 0||this.dragging===!0||e!=null&&e.button!==0)&&this.axis!==null){e!==null&&ll.setFromCamera(e,this.camera);const t=fv(this._plane,ll,!0);t&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(t.point).sub(this.worldPositionStart)),this.dragging=!0,Yw.mode=this.mode,this.dispatchEvent(Yw)}}pointerMove(e){const t=this.axis,n=this.mode,r=this.object;let s=this.space;if(n==="scale"?s="local":(t==="E"||t==="XYZE"||t==="XYZ")&&(s="world"),r===void 0||t===null||this.dragging===!1||e!==null&&e.button!==-1)return;e!==null&&ll.setFromCamera(e,this.camera);const o=fv(this._plane,ll,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),n==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),s==="local"&&t!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),t.indexOf("X")===-1&&(this._offset.x=0),t.indexOf("Y")===-1&&(this._offset.y=0),t.indexOf("Z")===-1&&(this._offset.z=0),s==="local"&&t!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),r.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(s==="local"&&(r.position.applyQuaternion(An.copy(this._quaternionStart).invert()),t.search("X")!==-1&&(r.position.x=Math.round(r.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(r.position.y=Math.round(r.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(r.position.z=Math.round(r.position.z/this.translationSnap)*this.translationSnap),r.position.applyQuaternion(this._quaternionStart)),s==="world"&&(r.parent&&r.position.add(Ui.setFromMatrixPosition(r.parent.matrixWorld)),t.search("X")!==-1&&(r.position.x=Math.round(r.position.x/this.translationSnap)*this.translationSnap),t.search("Y")!==-1&&(r.position.y=Math.round(r.position.y/this.translationSnap)*this.translationSnap),t.search("Z")!==-1&&(r.position.z=Math.round(r.position.z/this.translationSnap)*this.translationSnap),r.parent&&r.position.sub(Ui.setFromMatrixPosition(r.parent.matrixWorld))));else if(n==="scale"){if(t.search("XYZ")!==-1){let c=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(c*=-1),fo.set(c,c,c)}else Ui.copy(this.pointStart),fo.copy(this.pointEnd),Ui.applyQuaternion(this._worldQuaternionInv),fo.applyQuaternion(this._worldQuaternionInv),fo.divide(Ui),t.search("X")===-1&&(fo.x=1),t.search("Y")===-1&&(fo.y=1),t.search("Z")===-1&&(fo.z=1);r.scale.copy(this._scaleStart).multiply(fo),this.scaleSnap&&(t.search("X")!==-1&&(r.scale.x=Math.round(r.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Y")!==-1&&(r.scale.y=Math.round(r.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),t.search("Z")!==-1&&(r.scale.z=Math.round(r.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(n==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const c=20/this.worldPosition.distanceTo(Ui.setFromMatrixPosition(this.camera.matrixWorld));let u=!1;t==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(Ui.copy(this.rotationAxis).cross(this.eye))*c):(t==="X"||t==="Y"||t==="Z")&&(this.rotationAxis.copy(qw[t]),Ui.copy(qw[t]),s==="local"&&Ui.applyQuaternion(this.worldQuaternion),Ui.cross(this.eye),Ui.length()===0?u=!0:this.rotationAngle=this._offset.dot(Ui.normalize())*c),(t==="E"||u)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),s==="local"&&t!=="E"&&t!=="XYZE"?(r.quaternion.copy(this._quaternionStart),r.quaternion.multiply(An.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),r.quaternion.copy(An.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),r.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(uv),this.dispatchEvent(Zw)}}pointerUp(e){e!==null&&e.button!==0||(this.dragging&&this.axis!==null&&(Kw.mode=this.mode,this.dispatchEvent(Kw)),this.dragging=!1,this.axis=null)}dispose(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.traverse(function(e){e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})}attach(e){return this.object=e,this.visible=!0,this}detach(){return this.object=void 0,this.visible=!1,this.axis=null,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(uv),this.dispatchEvent(Zw),this.pointStart.copy(this.pointEnd))}getRaycaster(){return ll}getMode(){return this.mode}setMode(e){this.mode=e}setTranslationSnap(e){this.translationSnap=e}setRotationSnap(e){this.rotationSnap=e}setScaleSnap(e){this.scaleSnap=e}setSize(e){this.size=e}setSpace(e){this.space=e}}function xV(i){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:i.button};{const e=this.domElement.getBoundingClientRect();return{x:(i.clientX-e.left)/e.width*2-1,y:-(i.clientY-e.top)/e.height*2+1,button:i.button}}}function yV(i){if(this.enabled)switch(i.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(i));break}}function SV(i){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(i)),this.pointerDown(this._getPointer(i)))}function MV(i){this.enabled&&this.pointerMove(this._getPointer(i))}function EV(i){this.enabled&&(this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(i)))}function fv(i,e,t){const n=e.intersectObject(i,!0);for(let r=0;r<n.length;r++)if(n[r].object.visible||t)return n[r];return!1}const Fp=new Hs,gn=new me(0,1,0),Jw=new me(0,0,0),e3=new In,kp=new Si,hm=new Si,ws=new me,t3=new In,Yf=new me(1,0,0),pl=new me(0,1,0),Kf=new me(0,0,1),Bp=new me,Bf=new me,zf=new me;class TV extends Ei{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const e=new Nh({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),t=new vR({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=e.clone();n.opacity=.15;const r=t.clone();r.opacity=.5;const s=e.clone();s.color.setHex(16711680);const o=e.clone();o.color.setHex(65280);const c=e.clone();c.color.setHex(255);const u=e.clone();u.color.setHex(16711680),u.opacity=.5;const f=e.clone();f.color.setHex(65280),f.opacity=.5;const h=e.clone();h.color.setHex(255),h.opacity=.5;const p=e.clone();p.opacity=.25;const m=e.clone();m.color.setHex(16776960),m.opacity=.25,e.clone().color.setHex(16776960);const y=e.clone();y.color.setHex(7895160);const S=new Ni(0,.04,.1,12);S.translate(0,.05,0);const _=new zn(.08,.08,.08);_.translate(0,.04,0);const g=new qi;g.setAttribute("position",new wn([0,0,0,1,0,0],3));const b=new Ni(.0075,.0075,.5,3);b.translate(0,.25,0);function E(Z,q){const K=new yl(Z,.0075,3,64,q*Math.PI*2);return K.rotateY(Math.PI/2),K.rotateX(Math.PI/2),K}function T(){const Z=new qi;return Z.setAttribute("position",new wn([0,0,0,1,1,1],3)),Z}const L={X:[[new dt(S,s),[.5,0,0],[0,0,-Math.PI/2]],[new dt(S,s),[-.5,0,0],[0,0,Math.PI/2]],[new dt(b,s),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new dt(S,o),[0,.5,0]],[new dt(S,o),[0,-.5,0],[Math.PI,0,0]],[new dt(b,o)]],Z:[[new dt(S,c),[0,0,.5],[Math.PI/2,0,0]],[new dt(S,c),[0,0,-.5],[-Math.PI/2,0,0]],[new dt(b,c),null,[Math.PI/2,0,0]]],XYZ:[[new dt(new Zc(.1,0),p.clone()),[0,0,0]]],XY:[[new dt(new zn(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new dt(new zn(.15,.15,.01),u.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new dt(new zn(.15,.15,.01),f.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},C={X:[[new dt(new Ni(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new dt(new Ni(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new dt(new Ni(.2,0,.6,4),n),[0,.3,0]],[new dt(new Ni(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new dt(new Ni(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new dt(new Ni(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new dt(new Zc(.2,0),n)]],XY:[[new dt(new zn(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new dt(new zn(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new dt(new zn(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},P={START:[[new dt(new Zc(.01,2),r),null,null,null,"helper"]],END:[[new dt(new Zc(.01,2),r),null,null,null,"helper"]],DELTA:[[new uo(T(),r),null,null,null,"helper"]],X:[[new uo(g,r.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new uo(g,r.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new uo(g,r.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},N={XYZE:[[new dt(E(.5,1),y),null,[0,Math.PI/2,0]]],X:[[new dt(E(.5,.5),s)]],Y:[[new dt(E(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new dt(E(.5,.5),c),null,[0,Math.PI/2,0]]],E:[[new dt(E(.75,1),m),null,[0,Math.PI/2,0]]]},A={AXIS:[[new uo(g,r.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},w={XYZE:[[new dt(new Ry(.25,10,8),n)]],X:[[new dt(new yl(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new dt(new yl(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new dt(new yl(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new dt(new yl(.75,.1,2,24),n)]]},D={X:[[new dt(_,s),[.5,0,0],[0,0,-Math.PI/2]],[new dt(b,s),[0,0,0],[0,0,-Math.PI/2]],[new dt(_,s),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new dt(_,o),[0,.5,0]],[new dt(b,o)],[new dt(_,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new dt(_,c),[0,0,.5],[Math.PI/2,0,0]],[new dt(b,c),[0,0,0],[Math.PI/2,0,0]],[new dt(_,c),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new dt(new zn(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new dt(new zn(.15,.15,.01),u),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new dt(new zn(.15,.15,.01),f),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new dt(new zn(.1,.1,.1),p.clone())]]},X={X:[[new dt(new Ni(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new dt(new Ni(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new dt(new Ni(.2,0,.6,4),n),[0,.3,0]],[new dt(new Ni(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new dt(new Ni(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new dt(new Ni(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new dt(new zn(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new dt(new zn(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new dt(new zn(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new dt(new zn(.2,.2,.2),n),[0,0,0]]]},z={X:[[new uo(g,r.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new uo(g,r.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new uo(g,r.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function G(Z){const q=new Ei;for(const K in Z)for(let B=Z[K].length;B--;){const ie=Z[K][B][0].clone(),oe=Z[K][B][1],V=Z[K][B][2],de=Z[K][B][3],Ge=Z[K][B][4];ie.name=K,ie.tag=Ge,oe&&ie.position.set(oe[0],oe[1],oe[2]),V&&ie.rotation.set(V[0],V[1],V[2]),de&&ie.scale.set(de[0],de[1],de[2]),ie.updateMatrix();const j=ie.geometry.clone();j.applyMatrix4(ie.matrix),ie.geometry=j,ie.renderOrder=1/0,ie.position.set(0,0,0),ie.rotation.set(0,0,0),ie.scale.set(1,1,1),q.add(ie)}return q}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=G(L)),this.add(this.gizmo.rotate=G(N)),this.add(this.gizmo.scale=G(D)),this.add(this.picker.translate=G(C)),this.add(this.picker.rotate=G(w)),this.add(this.picker.scale=G(X)),this.add(this.helper.translate=G(P)),this.add(this.helper.rotate=G(A)),this.add(this.helper.scale=G(z)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(e){const n=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:hm;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let r=[];r=r.concat(this.picker[this.mode].children),r=r.concat(this.gizmo[this.mode].children),r=r.concat(this.helper[this.mode].children);for(let s=0;s<r.length;s++){const o=r[s];o.visible=!0,o.rotation.set(0,0,0),o.position.copy(this.worldPosition);let c;if(this.camera.isOrthographicCamera?c=(this.camera.top-this.camera.bottom)/this.camera.zoom:c=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),o.scale.set(1,1,1).multiplyScalar(c*this.size/4),o.tag==="helper"){o.visible=!1,o.name==="AXIS"?(o.visible=!!this.axis,this.axis==="X"&&(An.setFromEuler(Fp.set(0,0,0)),o.quaternion.copy(n).multiply(An),Math.abs(gn.copy(Yf).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Y"&&(An.setFromEuler(Fp.set(0,0,Math.PI/2)),o.quaternion.copy(n).multiply(An),Math.abs(gn.copy(pl).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Z"&&(An.setFromEuler(Fp.set(0,Math.PI/2,0)),o.quaternion.copy(n).multiply(An),Math.abs(gn.copy(Kf).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="XYZE"&&(An.setFromEuler(Fp.set(0,Math.PI/2,0)),gn.copy(this.rotationAxis),o.quaternion.setFromRotationMatrix(e3.lookAt(Jw,gn,pl)),o.quaternion.multiply(An),o.visible=this.dragging),this.axis==="E"&&(o.visible=!1)):o.name==="START"?(o.position.copy(this.worldPositionStart),o.visible=this.dragging):o.name==="END"?(o.position.copy(this.worldPosition),o.visible=this.dragging):o.name==="DELTA"?(o.position.copy(this.worldPositionStart),o.quaternion.copy(this.worldQuaternionStart),Ui.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),Ui.applyQuaternion(this.worldQuaternionStart.clone().invert()),o.scale.copy(Ui),o.visible=this.dragging):(o.quaternion.copy(n),this.dragging?o.position.copy(this.worldPositionStart):o.position.copy(this.worldPosition),this.axis&&(o.visible=this.axis.search(o.name)!==-1));continue}o.quaternion.copy(n),this.mode==="translate"||this.mode==="scale"?(o.name==="X"&&Math.abs(gn.copy(Yf).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Y"&&Math.abs(gn.copy(pl).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Z"&&Math.abs(gn.copy(Kf).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XY"&&Math.abs(gn.copy(Kf).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="YZ"&&Math.abs(gn.copy(Yf).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XZ"&&Math.abs(gn.copy(pl).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1)):this.mode==="rotate"&&(kp.copy(n),gn.copy(this.eye).applyQuaternion(An.copy(n).invert()),o.name.search("E")!==-1&&o.quaternion.setFromRotationMatrix(e3.lookAt(this.eye,Jw,pl)),o.name==="X"&&(An.setFromAxisAngle(Yf,Math.atan2(-gn.y,gn.z)),An.multiplyQuaternions(kp,An),o.quaternion.copy(An)),o.name==="Y"&&(An.setFromAxisAngle(pl,Math.atan2(gn.x,gn.z)),An.multiplyQuaternions(kp,An),o.quaternion.copy(An)),o.name==="Z"&&(An.setFromAxisAngle(Kf,Math.atan2(gn.y,gn.x)),An.multiplyQuaternions(kp,An),o.quaternion.copy(An))),o.visible=o.visible&&(o.name.indexOf("X")===-1||this.showX),o.visible=o.visible&&(o.name.indexOf("Y")===-1||this.showY),o.visible=o.visible&&(o.name.indexOf("Z")===-1||this.showZ),o.visible=o.visible&&(o.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),o.material._color=o.material._color||o.material.color.clone(),o.material._opacity=o.material._opacity||o.material.opacity,o.material.color.copy(o.material._color),o.material.opacity=o.material._opacity,this.enabled&&this.axis&&(o.name===this.axis||this.axis.split("").some(function(u){return o.name===u}))&&(o.material.color.setHex(16776960),o.material.opacity=1)}super.updateMatrixWorld(e)}}class wV extends dt{constructor(){super(new Ty(1e5,1e5,2,2),new Nh({visible:!1,wireframe:!0,side:Is,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(e){let t=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(t="local"),Bp.copy(Yf).applyQuaternion(t==="local"?this.worldQuaternion:hm),Bf.copy(pl).applyQuaternion(t==="local"?this.worldQuaternion:hm),zf.copy(Kf).applyQuaternion(t==="local"?this.worldQuaternion:hm),gn.copy(Bf),this.mode){case"translate":case"scale":switch(this.axis){case"X":gn.copy(this.eye).cross(Bp),ws.copy(Bp).cross(gn);break;case"Y":gn.copy(this.eye).cross(Bf),ws.copy(Bf).cross(gn);break;case"Z":gn.copy(this.eye).cross(zf),ws.copy(zf).cross(gn);break;case"XY":ws.copy(zf);break;case"YZ":ws.copy(Bp);break;case"XZ":gn.copy(zf),ws.copy(Bf);break;case"XYZ":case"E":ws.set(0,0,0);break}break;case"rotate":default:ws.set(0,0,0)}ws.length()===0?this.quaternion.copy(this.cameraQuaternion):(t3.lookAt(Ui.set(0,0,0),ws,gn),this.quaternion.setFromRotationMatrix(t3)),super.updateMatrixWorld(e)}}const Dt=Symbol("@@iwer/devui/input-scene"),bV=.016;class AV{constructor(e){const t=e.canvasContainer,n=new _V,r=new Xr(e.fovy/Math.PI*180,t.offsetWidth/t.offsetHeight,.1,1e3),s=new Kc,o=new Kc;n.add(s),s.add(o),o.position.fromArray(e.position.vec3),o.quaternion.fromArray(e.quaternion.quat),o.add(r),r.position.x-=e.ipd/2;const c=new dt(new zn(.1,.1,.1)),u=c.clone();c.position.fromArray(e.controllers.left.position.vec3),c.quaternion.fromArray(e.controllers.left.quaternion.quat),u.position.fromArray(e.controllers.right.position.vec3),u.quaternion.fromArray(e.controllers.right.quaternion.quat),o.attach(c),o.attach(u),c.visible=!1,u.visible=!1;const f=new dt(new Ay(.25,.27,32),new Nh({color:16777215,side:wa}));f.rotateX(-Math.PI/2),n.add(f);const h=new gV({alpha:!0});h.setSize(t.offsetWidth,t.offsetHeight),h.setClearColor(0,0),t.appendChild(h.domElement);const p=new Qw(r,h.domElement);p.attach(c),n.add(p);const m=new Qw(r,h.domElement);m.attach(u),n.add(m);const v=new ResizeObserver(()=>{this.resize()});v.observe(t);const y=_=>{_.addEventListener("mouseDown",()=>{_.userData.pressStart=performance.now()}),_.addEventListener("mouseUp",()=>{const g=performance.now()-_.userData.pressStart;_.userData.pressStart=null,g<200&&(_.mode==="rotate"?_.setMode("translate"):_.setMode("rotate"))}),_.addEventListener("change",()=>{this.renderScene()})};y(p),y(m);const S=_=>{if(!this[Dt].isPointerLocked)return;const g=_.movementX||_.mozMovementX||_.webkitMovementX||0,b=_.movementY||_.mozMovementY||_.webkitMovementY||0;s.rotation.y-=g*.002,o.rotation.x-=b*.002,e.quaternion.copy(o.getWorldQuaternion(new Si)),this.renderScene()};this[Dt]={canvasContainer:t,renderer:h,scene:n,camera:r,playerRig:s,cameraRig:o,xrDevice:e,controllerIndicators:{left:c,right:u},transformControls:{left:p,right:m},headsetDefaultPosition:o.position.clone(),headsetDefaultQuaternion:o.quaternion.clone(),controllerDefaultPositions:{left:c.position.clone(),right:u.position.clone()},controllerDefaultQuaternions:{left:c.quaternion.clone(),right:u.quaternion.clone()},resizeObserver:v,isPointerLocked:!1,vec3:new me,quat:new Si,mouseMoveHandler:S,keyState:{ShiftLeft:!1,KeyW:!1,KeyA:!1,KeyS:!1,KeyD:!1,ArrowUp:!1,ArrowDown:!1},movePlayerRig:()=>this.movePlayerRig(),moveInterval:null},document.addEventListener("pointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.addEventListener("mozpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.addEventListener("webkitpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.addEventListener("keydown",this.keyDownHandler.bind(this),!1),document.addEventListener("keyup",this.keyUpHandler.bind(this),!1)}lockPointer(){this[Dt].renderer.domElement.requestPointerLock=this[Dt].renderer.domElement.requestPointerLock||this[Dt].renderer.domElement.mozRequestPointerLock||this[Dt].renderer.domElement.webkitRequestPointerLock,this[Dt].renderer.domElement.requestPointerLock()}pointerLockChangeHandler(){this[Dt].isPointerLocked=document.pointerLockElement===this[Dt].renderer.domElement||document.mozPointerLockElement===this[Dt].renderer.domElement||document.webkitPointerLockElement===this[Dt].renderer.domElement,this[Dt].isPointerLocked?(document.addEventListener("mousemove",this[Dt].mouseMoveHandler,!1),Object.values(this[Dt].transformControls).forEach(e=>{e.enabled=!1,e.visible=!1})):(document.removeEventListener("mousemove",this[Dt].mouseMoveHandler,!1),Object.values(this[Dt].transformControls).forEach(e=>{e.enabled=!0,e.visible=!0}))}keyDownHandler(e){const{keyState:t,movePlayerRig:n,moveInterval:r}=this[Dt];e.code in t&&(t[e.code]=!0),t.ShiftLeft&&(t.KeyW||t.KeyA||t.KeyS||t.KeyD)&&(r||(this[Dt].moveInterval=window.setInterval(n,16))),t.ShiftLeft&&t.ArrowUp&&(this[Dt].cameraRig.position.y+=.05,this.renderScene()),t.ShiftLeft&&t.ArrowDown&&(this[Dt].cameraRig.position.y-=.05,this.renderScene())}keyUpHandler(e){const{keyState:t,moveInterval:n}=this[Dt];e.code in t&&(t[e.code]=!1),(!t.ShiftLeft||!(t.KeyW||t.KeyA||t.KeyS||t.KeyD))&&n&&(window.clearInterval(n),this[Dt].moveInterval=null)}movePlayerRig(){const{playerRig:e,keyState:t,vec3:n}=this[Dt];n.set((t.KeyD?1:0)-(t.KeyA?1:0),0,(t.KeyS?1:0)-(t.KeyW?1:0)),n.lengthSq()>0&&(n.normalize().multiplyScalar(bV).applyQuaternion(e.quaternion),e.position.add(n),this.renderScene())}syncFovy(){this[Dt].camera.fov=this[Dt].xrDevice.fovy/Math.PI*180,this[Dt].camera.updateProjectionMatrix()}resetDeviceTransforms(){const{playerRig:e,cameraRig:t,controllerIndicators:n}=this[Dt];t.position.copy(this[Dt].headsetDefaultPosition),t.quaternion.set(0,0,0,1),e.position.set(0,0,0),e.quaternion.set(0,0,0,1),Object.entries(n).forEach(([r,s])=>{s.position.copy(this[Dt].controllerDefaultPositions[r]),s.quaternion.copy(this[Dt].controllerDefaultQuaternions[r])}),this.syncDeviceTransforms(),this.renderScene()}syncDeviceTransforms(){const{xrDevice:e,cameraRig:t,controllerIndicators:n}=this[Dt];e.position.copy(t.getWorldPosition(this[Dt].vec3)),e.quaternion.copy(t.getWorldQuaternion(this[Dt].quat)),Object.entries(n).forEach(([r,s])=>{e.controllers[r].position.copy(s.getWorldPosition(this[Dt].vec3)),e.controllers[r].quaternion.copy(s.getWorldQuaternion(this[Dt].quat))})}renderScene(){this.syncDeviceTransforms(),this[Dt].renderer.render(this[Dt].scene,this[Dt].camera)}get domElement(){return this[Dt].renderer.domElement}resize(){const e=this[Dt].canvasContainer.offsetWidth,t=this[Dt].canvasContainer.offsetHeight;this[Dt].renderer.setSize(e,t),this[Dt].camera.aspect=e/t,this[Dt].camera.updateProjectionMatrix(),this.renderScene()}dispose(){this[Dt].resizeObserver.disconnect(),this[Dt].renderer.dispose(),document.removeEventListener("pointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.removeEventListener("mozpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.removeEventListener("webkitpointerlockchange",this.pointerLockChangeHandler.bind(this),!1),document.removeEventListener("mousemove",this[Dt].mouseMoveHandler,!1),document.removeEventListener("keydown",this.keyDownHandler.bind(this),!1),document.removeEventListener("keyup",this.keyUpHandler.bind(this),!1)}}var zp={},hv={exports:{}},nr={},dv={exports:{}},pv={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n3;function RV(){return n3||(n3=1,(function(i){function e(B,ie){var oe=B.length;B.push(ie);e:for(;0<oe;){var V=oe-1>>>1,de=B[V];if(0<r(de,ie))B[V]=ie,B[oe]=de,oe=V;else break e}}function t(B){return B.length===0?null:B[0]}function n(B){if(B.length===0)return null;var ie=B[0],oe=B.pop();if(oe!==ie){B[0]=oe;e:for(var V=0,de=B.length,Ge=de>>>1;V<Ge;){var j=2*(V+1)-1,fe=B[j],Re=j+1,Ee=B[Re];if(0>r(fe,oe))Re<de&&0>r(Ee,fe)?(B[V]=Ee,B[Re]=oe,V=Re):(B[V]=fe,B[j]=oe,V=j);else if(Re<de&&0>r(Ee,oe))B[V]=Ee,B[Re]=oe,V=Re;else break e}}return ie}function r(B,ie){var oe=B.sortIndex-ie.sortIndex;return oe!==0?oe:B.id-ie.id}if(typeof performance=="object"&&typeof performance.now=="function"){var s=performance;i.unstable_now=function(){return s.now()}}else{var o=Date,c=o.now();i.unstable_now=function(){return o.now()-c}}var u=[],f=[],h=1,p=null,m=3,v=!1,y=!1,S=!1,_=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,b=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function E(B){for(var ie=t(f);ie!==null;){if(ie.callback===null)n(f);else if(ie.startTime<=B)n(f),ie.sortIndex=ie.expirationTime,e(u,ie);else break;ie=t(f)}}function T(B){if(S=!1,E(B),!y)if(t(u)!==null)y=!0,q(L);else{var ie=t(f);ie!==null&&K(T,ie.startTime-B)}}function L(B,ie){y=!1,S&&(S=!1,g(N),N=-1),v=!0;var oe=m;try{for(E(ie),p=t(u);p!==null&&(!(p.expirationTime>ie)||B&&!D());){var V=p.callback;if(typeof V=="function"){p.callback=null,m=p.priorityLevel;var de=V(p.expirationTime<=ie);ie=i.unstable_now(),typeof de=="function"?p.callback=de:p===t(u)&&n(u),E(ie)}else n(u);p=t(u)}if(p!==null)var Ge=!0;else{var j=t(f);j!==null&&K(T,j.startTime-ie),Ge=!1}return Ge}finally{p=null,m=oe,v=!1}}var C=!1,P=null,N=-1,A=5,w=-1;function D(){return!(i.unstable_now()-w<A)}function X(){if(P!==null){var B=i.unstable_now();w=B;var ie=!0;try{ie=P(!0,B)}finally{ie?z():(C=!1,P=null)}}else C=!1}var z;if(typeof b=="function")z=function(){b(X)};else if(typeof MessageChannel<"u"){var G=new MessageChannel,Z=G.port2;G.port1.onmessage=X,z=function(){Z.postMessage(null)}}else z=function(){_(X,0)};function q(B){P=B,C||(C=!0,z())}function K(B,ie){N=_(function(){B(i.unstable_now())},ie)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(B){B.callback=null},i.unstable_continueExecution=function(){y||v||(y=!0,q(L))},i.unstable_forceFrameRate=function(B){0>B||125<B?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):A=0<B?Math.floor(1e3/B):5},i.unstable_getCurrentPriorityLevel=function(){return m},i.unstable_getFirstCallbackNode=function(){return t(u)},i.unstable_next=function(B){switch(m){case 1:case 2:case 3:var ie=3;break;default:ie=m}var oe=m;m=ie;try{return B()}finally{m=oe}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(B,ie){switch(B){case 1:case 2:case 3:case 4:case 5:break;default:B=3}var oe=m;m=B;try{return ie()}finally{m=oe}},i.unstable_scheduleCallback=function(B,ie,oe){var V=i.unstable_now();switch(typeof oe=="object"&&oe!==null?(oe=oe.delay,oe=typeof oe=="number"&&0<oe?V+oe:V):oe=V,B){case 1:var de=-1;break;case 2:de=250;break;case 5:de=1073741823;break;case 4:de=1e4;break;default:de=5e3}return de=oe+de,B={id:h++,callback:ie,priorityLevel:B,startTime:oe,expirationTime:de,sortIndex:-1},oe>V?(B.sortIndex=oe,e(f,B),t(u)===null&&B===t(f)&&(S?(g(N),N=-1):S=!0,K(T,oe-V))):(B.sortIndex=de,e(u,B),y||v||(y=!0,q(L))),B},i.unstable_shouldYield=D,i.unstable_wrapCallback=function(B){var ie=m;return function(){var oe=m;m=ie;try{return B.apply(this,arguments)}finally{m=oe}}}})(pv)),pv}var i3;function CV(){return i3||(i3=1,dv.exports=RV()),dv.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r3;function PV(){if(r3)return nr;r3=1;var i=Kx(),e=CV();function t(a){for(var l="https://reactjs.org/docs/error-decoder.html?invariant="+a,d=1;d<arguments.length;d++)l+="&args[]="+encodeURIComponent(arguments[d]);return"Minified React error #"+a+"; visit "+l+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var n=new Set,r={};function s(a,l){o(a,l),o(a+"Capture",l)}function o(a,l){for(r[a]=l,a=0;a<l.length;a++)n.add(l[a])}var c=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),u=Object.prototype.hasOwnProperty,f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,h={},p={};function m(a){return u.call(p,a)?!0:u.call(h,a)?!1:f.test(a)?p[a]=!0:(h[a]=!0,!1)}function v(a,l,d,x){if(d!==null&&d.type===0)return!1;switch(typeof l){case"function":case"symbol":return!0;case"boolean":return x?!1:d!==null?!d.acceptsBooleans:(a=a.toLowerCase().slice(0,5),a!=="data-"&&a!=="aria-");default:return!1}}function y(a,l,d,x){if(l===null||typeof l>"u"||v(a,l,d,x))return!0;if(x)return!1;if(d!==null)switch(d.type){case 3:return!l;case 4:return l===!1;case 5:return isNaN(l);case 6:return isNaN(l)||1>l}return!1}function S(a,l,d,x,M,R,F){this.acceptsBooleans=l===2||l===3||l===4,this.attributeName=x,this.attributeNamespace=M,this.mustUseProperty=d,this.propertyName=a,this.type=l,this.sanitizeURL=R,this.removeEmptyString=F}var _={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a){_[a]=new S(a,0,!1,a,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(a){var l=a[0];_[l]=new S(l,1,!1,a[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(a){_[a]=new S(a,2,!1,a.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(a){_[a]=new S(a,2,!1,a,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a){_[a]=new S(a,3,!1,a.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(a){_[a]=new S(a,3,!0,a,null,!1,!1)}),["capture","download"].forEach(function(a){_[a]=new S(a,4,!1,a,null,!1,!1)}),["cols","rows","size","span"].forEach(function(a){_[a]=new S(a,6,!1,a,null,!1,!1)}),["rowSpan","start"].forEach(function(a){_[a]=new S(a,5,!1,a.toLowerCase(),null,!1,!1)});var g=/[\-:]([a-z])/g;function b(a){return a[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a){var l=a.replace(g,b);_[l]=new S(l,1,!1,a,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a){var l=a.replace(g,b);_[l]=new S(l,1,!1,a,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(a){var l=a.replace(g,b);_[l]=new S(l,1,!1,a,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(a){_[a]=new S(a,1,!1,a.toLowerCase(),null,!1,!1)}),_.xlinkHref=new S("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(a){_[a]=new S(a,1,!1,a.toLowerCase(),null,!0,!0)});function E(a,l,d,x){var M=_.hasOwnProperty(l)?_[l]:null;(M!==null?M.type!==0:x||!(2<l.length)||l[0]!=="o"&&l[0]!=="O"||l[1]!=="n"&&l[1]!=="N")&&(y(l,d,M,x)&&(d=null),x||M===null?m(l)&&(d===null?a.removeAttribute(l):a.setAttribute(l,""+d)):M.mustUseProperty?a[M.propertyName]=d===null?M.type===3?!1:"":d:(l=M.attributeName,x=M.attributeNamespace,d===null?a.removeAttribute(l):(M=M.type,d=M===3||M===4&&d===!0?"":""+d,x?a.setAttributeNS(x,l,d):a.setAttribute(l,d))))}var T=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,L=Symbol.for("react.element"),C=Symbol.for("react.portal"),P=Symbol.for("react.fragment"),N=Symbol.for("react.strict_mode"),A=Symbol.for("react.profiler"),w=Symbol.for("react.provider"),D=Symbol.for("react.context"),X=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),G=Symbol.for("react.suspense_list"),Z=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),K=Symbol.for("react.offscreen"),B=Symbol.iterator;function ie(a){return a===null||typeof a!="object"?null:(a=B&&a[B]||a["@@iterator"],typeof a=="function"?a:null)}var oe=Object.assign,V;function de(a){if(V===void 0)try{throw Error()}catch(d){var l=d.stack.trim().match(/\n( *(at )?)/);V=l&&l[1]||""}return`
`+V+a}var Ge=!1;function j(a,l){if(!a||Ge)return"";Ge=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(l)if(l=function(){throw Error()},Object.defineProperty(l.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(l,[])}catch(De){var x=De}Reflect.construct(a,[],l)}else{try{l.call()}catch(De){x=De}a.call(l.prototype)}else{try{throw Error()}catch(De){x=De}a()}}catch(De){if(De&&x&&typeof De.stack=="string"){for(var M=De.stack.split(`
`),R=x.stack.split(`
`),F=M.length-1,Q=R.length-1;1<=F&&0<=Q&&M[F]!==R[Q];)Q--;for(;1<=F&&0<=Q;F--,Q--)if(M[F]!==R[Q]){if(F!==1||Q!==1)do if(F--,Q--,0>Q||M[F]!==R[Q]){var ce=`
`+M[F].replace(" at new "," at ");return a.displayName&&ce.includes("<anonymous>")&&(ce=ce.replace("<anonymous>",a.displayName)),ce}while(1<=F&&0<=Q);break}}}finally{Ge=!1,Error.prepareStackTrace=d}return(a=a?a.displayName||a.name:"")?de(a):""}function fe(a){switch(a.tag){case 5:return de(a.type);case 16:return de("Lazy");case 13:return de("Suspense");case 19:return de("SuspenseList");case 0:case 2:case 15:return a=j(a.type,!1),a;case 11:return a=j(a.type.render,!1),a;case 1:return a=j(a.type,!0),a;default:return""}}function Re(a){if(a==null)return null;if(typeof a=="function")return a.displayName||a.name||null;if(typeof a=="string")return a;switch(a){case P:return"Fragment";case C:return"Portal";case A:return"Profiler";case N:return"StrictMode";case z:return"Suspense";case G:return"SuspenseList"}if(typeof a=="object")switch(a.$$typeof){case D:return(a.displayName||"Context")+".Consumer";case w:return(a._context.displayName||"Context")+".Provider";case X:var l=a.render;return a=a.displayName,a||(a=l.displayName||l.name||"",a=a!==""?"ForwardRef("+a+")":"ForwardRef"),a;case Z:return l=a.displayName||null,l!==null?l:Re(a.type)||"Memo";case q:l=a._payload,a=a._init;try{return Re(a(l))}catch{}}return null}function Ee(a){var l=a.type;switch(a.tag){case 24:return"Cache";case 9:return(l.displayName||"Context")+".Consumer";case 10:return(l._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return a=l.render,a=a.displayName||a.name||"",l.displayName||(a!==""?"ForwardRef("+a+")":"ForwardRef");case 7:return"Fragment";case 5:return l;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Re(l);case 8:return l===N?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof l=="function")return l.displayName||l.name||null;if(typeof l=="string")return l}return null}function Fe(a){switch(typeof a){case"boolean":case"number":case"string":case"undefined":return a;case"object":return a;default:return""}}function He(a){var l=a.type;return(a=a.nodeName)&&a.toLowerCase()==="input"&&(l==="checkbox"||l==="radio")}function $e(a){var l=He(a)?"checked":"value",d=Object.getOwnPropertyDescriptor(a.constructor.prototype,l),x=""+a[l];if(!a.hasOwnProperty(l)&&typeof d<"u"&&typeof d.get=="function"&&typeof d.set=="function"){var M=d.get,R=d.set;return Object.defineProperty(a,l,{configurable:!0,get:function(){return M.call(this)},set:function(F){x=""+F,R.call(this,F)}}),Object.defineProperty(a,l,{enumerable:d.enumerable}),{getValue:function(){return x},setValue:function(F){x=""+F},stopTracking:function(){a._valueTracker=null,delete a[l]}}}}function wt(a){a._valueTracker||(a._valueTracker=$e(a))}function ee(a){if(!a)return!1;var l=a._valueTracker;if(!l)return!0;var d=l.getValue(),x="";return a&&(x=He(a)?a.checked?"true":"false":a.value),a=x,a!==d?(l.setValue(a),!0):!1}function Tt(a){if(a=a||(typeof document<"u"?document:void 0),typeof a>"u")return null;try{return a.activeElement||a.body}catch{return a.body}}function te(a,l){var d=l.checked;return oe({},l,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:d??a._wrapperState.initialChecked})}function Lt(a,l){var d=l.defaultValue==null?"":l.defaultValue,x=l.checked!=null?l.checked:l.defaultChecked;d=Fe(l.value!=null?l.value:d),a._wrapperState={initialChecked:x,initialValue:d,controlled:l.type==="checkbox"||l.type==="radio"?l.checked!=null:l.value!=null}}function st(a,l){l=l.checked,l!=null&&E(a,"checked",l,!1)}function Pt(a,l){st(a,l);var d=Fe(l.value),x=l.type;if(d!=null)x==="number"?(d===0&&a.value===""||a.value!=d)&&(a.value=""+d):a.value!==""+d&&(a.value=""+d);else if(x==="submit"||x==="reset"){a.removeAttribute("value");return}l.hasOwnProperty("value")?ot(a,l.type,d):l.hasOwnProperty("defaultValue")&&ot(a,l.type,Fe(l.defaultValue)),l.checked==null&&l.defaultChecked!=null&&(a.defaultChecked=!!l.defaultChecked)}function Ve(a,l,d){if(l.hasOwnProperty("value")||l.hasOwnProperty("defaultValue")){var x=l.type;if(!(x!=="submit"&&x!=="reset"||l.value!==void 0&&l.value!==null))return;l=""+a._wrapperState.initialValue,d||l===a.value||(a.value=l),a.defaultValue=l}d=a.name,d!==""&&(a.name=""),a.defaultChecked=!!a._wrapperState.initialChecked,d!==""&&(a.name=d)}function ot(a,l,d){(l!=="number"||Tt(a.ownerDocument)!==a)&&(d==null?a.defaultValue=""+a._wrapperState.initialValue:a.defaultValue!==""+d&&(a.defaultValue=""+d))}var W=Array.isArray;function O(a,l,d,x){if(a=a.options,l){l={};for(var M=0;M<d.length;M++)l["$"+d[M]]=!0;for(d=0;d<a.length;d++)M=l.hasOwnProperty("$"+a[d].value),a[d].selected!==M&&(a[d].selected=M),M&&x&&(a[d].defaultSelected=!0)}else{for(d=""+Fe(d),l=null,M=0;M<a.length;M++){if(a[M].value===d){a[M].selected=!0,x&&(a[M].defaultSelected=!0);return}l!==null||a[M].disabled||(l=a[M])}l!==null&&(l.selected=!0)}}function be(a,l){if(l.dangerouslySetInnerHTML!=null)throw Error(t(91));return oe({},l,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function k(a,l){var d=l.value;if(d==null){if(d=l.children,l=l.defaultValue,d!=null){if(l!=null)throw Error(t(92));if(W(d)){if(1<d.length)throw Error(t(93));d=d[0]}l=d}l==null&&(l=""),d=l}a._wrapperState={initialValue:Fe(d)}}function I(a,l){var d=Fe(l.value),x=Fe(l.defaultValue);d!=null&&(d=""+d,d!==a.value&&(a.value=d),l.defaultValue==null&&a.defaultValue!==d&&(a.defaultValue=d)),x!=null&&(a.defaultValue=""+x)}function Y(a){var l=a.textContent;l===a._wrapperState.initialValue&&l!==""&&l!==null&&(a.value=l)}function Me(a){switch(a){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ye(a,l){return a==null||a==="http://www.w3.org/1999/xhtml"?Me(l):a==="http://www.w3.org/2000/svg"&&l==="foreignObject"?"http://www.w3.org/1999/xhtml":a}var ge,qe=(function(a){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(l,d,x,M){MSApp.execUnsafeLocalFunction(function(){return a(l,d,x,M)})}:a})(function(a,l){if(a.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in a)a.innerHTML=l;else{for(ge=ge||document.createElement("div"),ge.innerHTML="<svg>"+l.valueOf().toString()+"</svg>",l=ge.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;l.firstChild;)a.appendChild(l.firstChild)}});function Te(a,l){if(l){var d=a.firstChild;if(d&&d===a.lastChild&&d.nodeType===3){d.nodeValue=l;return}}a.textContent=l}var ze={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tt=["Webkit","ms","Moz","O"];Object.keys(ze).forEach(function(a){tt.forEach(function(l){l=l+a.charAt(0).toUpperCase()+a.substring(1),ze[l]=ze[a]})});function Ie(a,l,d){return l==null||typeof l=="boolean"||l===""?"":d||typeof l!="number"||l===0||ze.hasOwnProperty(a)&&ze[a]?(""+l).trim():l+"px"}function ke(a,l){a=a.style;for(var d in l)if(l.hasOwnProperty(d)){var x=d.indexOf("--")===0,M=Ie(d,l[d],x);d==="float"&&(d="cssFloat"),x?a.setProperty(d,M):a[d]=M}}var Je=oe({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function nt(a,l){if(l){if(Je[a]&&(l.children!=null||l.dangerouslySetInnerHTML!=null))throw Error(t(137,a));if(l.dangerouslySetInnerHTML!=null){if(l.children!=null)throw Error(t(60));if(typeof l.dangerouslySetInnerHTML!="object"||!("__html"in l.dangerouslySetInnerHTML))throw Error(t(61))}if(l.style!=null&&typeof l.style!="object")throw Error(t(62))}}function We(a,l){if(a.indexOf("-")===-1)return typeof l.is=="string";switch(a){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ne=null;function $(a){return a=a.target||a.srcElement||window,a.correspondingUseElement&&(a=a.correspondingUseElement),a.nodeType===3?a.parentNode:a}var ve=null,le=null,Pe=null;function Ue(a){if(a=nf(a)){if(typeof ve!="function")throw Error(t(280));var l=a.stateNode;l&&(l=Kh(l),ve(a.stateNode,a.type,l))}}function Ne(a){le?Pe?Pe.push(a):Pe=[a]:le=a}function at(){if(le){var a=le,l=Pe;if(Pe=le=null,Ue(a),l)for(a=0;a<l.length;a++)Ue(l[a])}}function mt(a,l){return a(l)}function St(){}var Ot=!1;function vn(a,l,d){if(Ot)return a(l,d);Ot=!0;try{return mt(a,l,d)}finally{Ot=!1,(le!==null||Pe!==null)&&(St(),at())}}function ri(a,l){var d=a.stateNode;if(d===null)return null;var x=Kh(d);if(x===null)return null;d=x[l];e:switch(l){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(x=!x.disabled)||(a=a.type,x=!(a==="button"||a==="input"||a==="select"||a==="textarea")),a=!x;break e;default:a=!1}if(a)return null;if(d&&typeof d!="function")throw Error(t(231,l,typeof d));return d}var Yi=!1;if(c)try{var Cr={};Object.defineProperty(Cr,"passive",{get:function(){Yi=!0}}),window.addEventListener("test",Cr,Cr),window.removeEventListener("test",Cr,Cr)}catch{Yi=!1}function Pr(a,l,d,x,M,R,F,Q,ce){var De=Array.prototype.slice.call(arguments,3);try{l.apply(d,De)}catch(je){this.onError(je)}}var Lr=!1,Ir=null,xs=!1,hr=null,Oo={onError:function(a){Lr=!0,Ir=a}};function Ws(a,l,d,x,M,R,F,Q,ce){Lr=!1,Ir=null,Pr.apply(Oo,arguments)}function Bl(a,l,d,x,M,R,F,Q,ce){if(Ws.apply(this,arguments),Lr){if(Lr){var De=Ir;Lr=!1,Ir=null}else throw Error(t(198));xs||(xs=!0,hr=De)}}function Dr(a){var l=a,d=a;if(a.alternate)for(;l.return;)l=l.return;else{a=l;do l=a,(l.flags&4098)!==0&&(d=l.return),a=l.return;while(a)}return l.tag===3?d:null}function zl(a){if(a.tag===13){var l=a.memoizedState;if(l===null&&(a=a.alternate,a!==null&&(l=a.memoizedState)),l!==null)return l.dehydrated}return null}function H(a){if(Dr(a)!==a)throw Error(t(188))}function xe(a){var l=a.alternate;if(!l){if(l=Dr(a),l===null)throw Error(t(188));return l!==a?null:a}for(var d=a,x=l;;){var M=d.return;if(M===null)break;var R=M.alternate;if(R===null){if(x=M.return,x!==null){d=x;continue}break}if(M.child===R.child){for(R=M.child;R;){if(R===d)return H(M),a;if(R===x)return H(M),l;R=R.sibling}throw Error(t(188))}if(d.return!==x.return)d=M,x=R;else{for(var F=!1,Q=M.child;Q;){if(Q===d){F=!0,d=M,x=R;break}if(Q===x){F=!0,x=M,d=R;break}Q=Q.sibling}if(!F){for(Q=R.child;Q;){if(Q===d){F=!0,d=R,x=M;break}if(Q===x){F=!0,x=R,d=M;break}Q=Q.sibling}if(!F)throw Error(t(189))}}if(d.alternate!==x)throw Error(t(190))}if(d.tag!==3)throw Error(t(188));return d.stateNode.current===d?a:l}function Ce(a){return a=xe(a),a!==null?Le(a):null}function Le(a){if(a.tag===5||a.tag===6)return a;for(a=a.child;a!==null;){var l=Le(a);if(l!==null)return l;a=a.sibling}return null}var Se=e.unstable_scheduleCallback,U=e.unstable_cancelCallback,J=e.unstable_shouldYield,ue=e.unstable_requestPaint,re=e.unstable_now,se=e.unstable_getCurrentPriorityLevel,Oe=e.unstable_ImmediatePriority,Be=e.unstable_UserBlockingPriority,Ke=e.unstable_NormalPriority,it=e.unstable_LowPriority,ut=e.unstable_IdlePriority,gt=null,Qe=null;function et(a){if(Qe&&typeof Qe.onCommitFiberRoot=="function")try{Qe.onCommitFiberRoot(gt,a,void 0,(a.current.flags&128)===128)}catch{}}var Et=Math.clz32?Math.clz32:Yt,At=Math.log,Ht=Math.LN2;function Yt(a){return a>>>=0,a===0?32:31-(At(a)/Ht|0)|0}var ft=64,tn=4194304;function Mt(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return a}}function mn(a,l){var d=a.pendingLanes;if(d===0)return 0;var x=0,M=a.suspendedLanes,R=a.pingedLanes,F=d&268435455;if(F!==0){var Q=F&~M;Q!==0?x=Mt(Q):(R&=F,R!==0&&(x=Mt(R)))}else F=d&~M,F!==0?x=Mt(F):R!==0&&(x=Mt(R));if(x===0)return 0;if(l!==0&&l!==x&&(l&M)===0&&(M=x&-x,R=l&-l,M>=R||M===16&&(R&4194240)!==0))return l;if((x&4)!==0&&(x|=d&16),l=a.entangledLanes,l!==0)for(a=a.entanglements,l&=x;0<l;)d=31-Et(l),M=1<<d,x|=a[d],l&=~M;return x}function Nr(a,l){switch(a){case 1:case 2:case 4:return l+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return l+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function hn(a,l){for(var d=a.suspendedLanes,x=a.pingedLanes,M=a.expirationTimes,R=a.pendingLanes;0<R;){var F=31-Et(R),Q=1<<F,ce=M[F];ce===-1?((Q&d)===0||(Q&x)!==0)&&(M[F]=Nr(Q,l)):ce<=l&&(a.expiredLanes|=Q),R&=~Q}}function dr(a){return a=a.pendingLanes&-1073741825,a!==0?a:a&1073741824?1073741824:0}function on(){var a=ft;return ft<<=1,(ft&4194240)===0&&(ft=64),a}function Yn(a){for(var l=[],d=0;31>d;d++)l.push(a);return l}function si(a,l,d){a.pendingLanes|=l,l!==536870912&&(a.suspendedLanes=0,a.pingedLanes=0),a=a.eventTimes,l=31-Et(l),a[l]=d}function vi(a,l){var d=a.pendingLanes&~l;a.pendingLanes=l,a.suspendedLanes=0,a.pingedLanes=0,a.expiredLanes&=l,a.mutableReadLanes&=l,a.entangledLanes&=l,l=a.entanglements;var x=a.eventTimes;for(a=a.expirationTimes;0<d;){var M=31-Et(d),R=1<<M;l[M]=0,x[M]=-1,a[M]=-1,d&=~R}}function ai(a,l){var d=a.entangledLanes|=l;for(a=a.entanglements;d;){var x=31-Et(d),M=1<<x;M&l|a[x]&l&&(a[x]|=l),d&=~M}}var Qt=0;function ys(a){return a&=-a,1<a?4<a?(a&268435455)!==0?16:536870912:4:1}var Dy,a0,Ny,Uy,Oy,o0=!1,Uh=[],La=null,Ia=null,Da=null,zu=new Map,Hu=new Map,Na=[],wR="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Fy(a,l){switch(a){case"focusin":case"focusout":La=null;break;case"dragenter":case"dragleave":Ia=null;break;case"mouseover":case"mouseout":Da=null;break;case"pointerover":case"pointerout":zu.delete(l.pointerId);break;case"gotpointercapture":case"lostpointercapture":Hu.delete(l.pointerId)}}function Vu(a,l,d,x,M,R){return a===null||a.nativeEvent!==R?(a={blockedOn:l,domEventName:d,eventSystemFlags:x,nativeEvent:R,targetContainers:[M]},l!==null&&(l=nf(l),l!==null&&a0(l)),a):(a.eventSystemFlags|=x,l=a.targetContainers,M!==null&&l.indexOf(M)===-1&&l.push(M),a)}function bR(a,l,d,x,M){switch(l){case"focusin":return La=Vu(La,a,l,d,x,M),!0;case"dragenter":return Ia=Vu(Ia,a,l,d,x,M),!0;case"mouseover":return Da=Vu(Da,a,l,d,x,M),!0;case"pointerover":var R=M.pointerId;return zu.set(R,Vu(zu.get(R)||null,a,l,d,x,M)),!0;case"gotpointercapture":return R=M.pointerId,Hu.set(R,Vu(Hu.get(R)||null,a,l,d,x,M)),!0}return!1}function ky(a){var l=Fo(a.target);if(l!==null){var d=Dr(l);if(d!==null){if(l=d.tag,l===13){if(l=zl(d),l!==null){a.blockedOn=l,Oy(a.priority,function(){Ny(d)});return}}else if(l===3&&d.stateNode.current.memoizedState.isDehydrated){a.blockedOn=d.tag===3?d.stateNode.containerInfo:null;return}}}a.blockedOn=null}function Oh(a){if(a.blockedOn!==null)return!1;for(var l=a.targetContainers;0<l.length;){var d=c0(a.domEventName,a.eventSystemFlags,l[0],a.nativeEvent);if(d===null){d=a.nativeEvent;var x=new d.constructor(d.type,d);ne=x,d.target.dispatchEvent(x),ne=null}else return l=nf(d),l!==null&&a0(l),a.blockedOn=d,!1;l.shift()}return!0}function By(a,l,d){Oh(a)&&d.delete(l)}function AR(){o0=!1,La!==null&&Oh(La)&&(La=null),Ia!==null&&Oh(Ia)&&(Ia=null),Da!==null&&Oh(Da)&&(Da=null),zu.forEach(By),Hu.forEach(By)}function Gu(a,l){a.blockedOn===l&&(a.blockedOn=null,o0||(o0=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,AR)))}function Wu(a){function l(M){return Gu(M,a)}if(0<Uh.length){Gu(Uh[0],a);for(var d=1;d<Uh.length;d++){var x=Uh[d];x.blockedOn===a&&(x.blockedOn=null)}}for(La!==null&&Gu(La,a),Ia!==null&&Gu(Ia,a),Da!==null&&Gu(Da,a),zu.forEach(l),Hu.forEach(l),d=0;d<Na.length;d++)x=Na[d],x.blockedOn===a&&(x.blockedOn=null);for(;0<Na.length&&(d=Na[0],d.blockedOn===null);)ky(d),d.blockedOn===null&&Na.shift()}var Hl=T.ReactCurrentBatchConfig,Fh=!0;function RR(a,l,d,x){var M=Qt,R=Hl.transition;Hl.transition=null;try{Qt=1,l0(a,l,d,x)}finally{Qt=M,Hl.transition=R}}function CR(a,l,d,x){var M=Qt,R=Hl.transition;Hl.transition=null;try{Qt=4,l0(a,l,d,x)}finally{Qt=M,Hl.transition=R}}function l0(a,l,d,x){if(Fh){var M=c0(a,l,d,x);if(M===null)b0(a,l,x,kh,d),Fy(a,x);else if(bR(M,a,l,d,x))x.stopPropagation();else if(Fy(a,x),l&4&&-1<wR.indexOf(a)){for(;M!==null;){var R=nf(M);if(R!==null&&Dy(R),R=c0(a,l,d,x),R===null&&b0(a,l,x,kh,d),R===M)break;M=R}M!==null&&x.stopPropagation()}else b0(a,l,x,null,d)}}var kh=null;function c0(a,l,d,x){if(kh=null,a=$(x),a=Fo(a),a!==null)if(l=Dr(a),l===null)a=null;else if(d=l.tag,d===13){if(a=zl(l),a!==null)return a;a=null}else if(d===3){if(l.stateNode.current.memoizedState.isDehydrated)return l.tag===3?l.stateNode.containerInfo:null;a=null}else l!==a&&(a=null);return kh=a,null}function zy(a){switch(a){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(se()){case Oe:return 1;case Be:return 4;case Ke:case it:return 16;case ut:return 536870912;default:return 16}default:return 16}}var Ua=null,u0=null,Bh=null;function Hy(){if(Bh)return Bh;var a,l=u0,d=l.length,x,M="value"in Ua?Ua.value:Ua.textContent,R=M.length;for(a=0;a<d&&l[a]===M[a];a++);var F=d-a;for(x=1;x<=F&&l[d-x]===M[R-x];x++);return Bh=M.slice(a,1<x?1-x:void 0)}function zh(a){var l=a.keyCode;return"charCode"in a?(a=a.charCode,a===0&&l===13&&(a=13)):a=l,a===10&&(a=13),32<=a||a===13?a:0}function Hh(){return!0}function Vy(){return!1}function pr(a){function l(d,x,M,R,F){this._reactName=d,this._targetInst=M,this.type=x,this.nativeEvent=R,this.target=F,this.currentTarget=null;for(var Q in a)a.hasOwnProperty(Q)&&(d=a[Q],this[Q]=d?d(R):R[Q]);return this.isDefaultPrevented=(R.defaultPrevented!=null?R.defaultPrevented:R.returnValue===!1)?Hh:Vy,this.isPropagationStopped=Vy,this}return oe(l.prototype,{preventDefault:function(){this.defaultPrevented=!0;var d=this.nativeEvent;d&&(d.preventDefault?d.preventDefault():typeof d.returnValue!="unknown"&&(d.returnValue=!1),this.isDefaultPrevented=Hh)},stopPropagation:function(){var d=this.nativeEvent;d&&(d.stopPropagation?d.stopPropagation():typeof d.cancelBubble!="unknown"&&(d.cancelBubble=!0),this.isPropagationStopped=Hh)},persist:function(){},isPersistent:Hh}),l}var Vl={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},f0=pr(Vl),Xu=oe({},Vl,{view:0,detail:0}),PR=pr(Xu),h0,d0,$u,Vh=oe({},Xu,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:m0,button:0,buttons:0,relatedTarget:function(a){return a.relatedTarget===void 0?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){return"movementX"in a?a.movementX:(a!==$u&&($u&&a.type==="mousemove"?(h0=a.screenX-$u.screenX,d0=a.screenY-$u.screenY):d0=h0=0,$u=a),h0)},movementY:function(a){return"movementY"in a?a.movementY:d0}}),Gy=pr(Vh),LR=oe({},Vh,{dataTransfer:0}),IR=pr(LR),DR=oe({},Xu,{relatedTarget:0}),p0=pr(DR),NR=oe({},Vl,{animationName:0,elapsedTime:0,pseudoElement:0}),UR=pr(NR),OR=oe({},Vl,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}}),FR=pr(OR),kR=oe({},Vl,{data:0}),Wy=pr(kR),BR={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},zR={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},HR={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function VR(a){var l=this.nativeEvent;return l.getModifierState?l.getModifierState(a):(a=HR[a])?!!l[a]:!1}function m0(){return VR}var GR=oe({},Xu,{key:function(a){if(a.key){var l=BR[a.key]||a.key;if(l!=="Unidentified")return l}return a.type==="keypress"?(a=zh(a),a===13?"Enter":String.fromCharCode(a)):a.type==="keydown"||a.type==="keyup"?zR[a.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:m0,charCode:function(a){return a.type==="keypress"?zh(a):0},keyCode:function(a){return a.type==="keydown"||a.type==="keyup"?a.keyCode:0},which:function(a){return a.type==="keypress"?zh(a):a.type==="keydown"||a.type==="keyup"?a.keyCode:0}}),WR=pr(GR),XR=oe({},Vh,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Xy=pr(XR),$R=oe({},Xu,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:m0}),jR=pr($R),qR=oe({},Vl,{propertyName:0,elapsedTime:0,pseudoElement:0}),YR=pr(qR),KR=oe({},Vh,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),ZR=pr(KR),QR=[9,13,27,32],g0=c&&"CompositionEvent"in window,ju=null;c&&"documentMode"in document&&(ju=document.documentMode);var JR=c&&"TextEvent"in window&&!ju,$y=c&&(!g0||ju&&8<ju&&11>=ju),jy=" ",qy=!1;function Yy(a,l){switch(a){case"keyup":return QR.indexOf(l.keyCode)!==-1;case"keydown":return l.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ky(a){return a=a.detail,typeof a=="object"&&"data"in a?a.data:null}var Gl=!1;function eC(a,l){switch(a){case"compositionend":return Ky(l);case"keypress":return l.which!==32?null:(qy=!0,jy);case"textInput":return a=l.data,a===jy&&qy?null:a;default:return null}}function tC(a,l){if(Gl)return a==="compositionend"||!g0&&Yy(a,l)?(a=Hy(),Bh=u0=Ua=null,Gl=!1,a):null;switch(a){case"paste":return null;case"keypress":if(!(l.ctrlKey||l.altKey||l.metaKey)||l.ctrlKey&&l.altKey){if(l.char&&1<l.char.length)return l.char;if(l.which)return String.fromCharCode(l.which)}return null;case"compositionend":return $y&&l.locale!=="ko"?null:l.data;default:return null}}var nC={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Zy(a){var l=a&&a.nodeName&&a.nodeName.toLowerCase();return l==="input"?!!nC[a.type]:l==="textarea"}function Qy(a,l,d,x){Ne(x),l=jh(l,"onChange"),0<l.length&&(d=new f0("onChange","change",null,d,x),a.push({event:d,listeners:l}))}var qu=null,Yu=null;function iC(a){gS(a,0)}function Gh(a){var l=ql(a);if(ee(l))return a}function rC(a,l){if(a==="change")return l}var Jy=!1;if(c){var _0;if(c){var v0="oninput"in document;if(!v0){var eS=document.createElement("div");eS.setAttribute("oninput","return;"),v0=typeof eS.oninput=="function"}_0=v0}else _0=!1;Jy=_0&&(!document.documentMode||9<document.documentMode)}function tS(){qu&&(qu.detachEvent("onpropertychange",nS),Yu=qu=null)}function nS(a){if(a.propertyName==="value"&&Gh(Yu)){var l=[];Qy(l,Yu,a,$(a)),vn(iC,l)}}function sC(a,l,d){a==="focusin"?(tS(),qu=l,Yu=d,qu.attachEvent("onpropertychange",nS)):a==="focusout"&&tS()}function aC(a){if(a==="selectionchange"||a==="keyup"||a==="keydown")return Gh(Yu)}function oC(a,l){if(a==="click")return Gh(l)}function lC(a,l){if(a==="input"||a==="change")return Gh(l)}function cC(a,l){return a===l&&(a!==0||1/a===1/l)||a!==a&&l!==l}var Kr=typeof Object.is=="function"?Object.is:cC;function Ku(a,l){if(Kr(a,l))return!0;if(typeof a!="object"||a===null||typeof l!="object"||l===null)return!1;var d=Object.keys(a),x=Object.keys(l);if(d.length!==x.length)return!1;for(x=0;x<d.length;x++){var M=d[x];if(!u.call(l,M)||!Kr(a[M],l[M]))return!1}return!0}function iS(a){for(;a&&a.firstChild;)a=a.firstChild;return a}function rS(a,l){var d=iS(a);a=0;for(var x;d;){if(d.nodeType===3){if(x=a+d.textContent.length,a<=l&&x>=l)return{node:d,offset:l-a};a=x}e:{for(;d;){if(d.nextSibling){d=d.nextSibling;break e}d=d.parentNode}d=void 0}d=iS(d)}}function sS(a,l){return a&&l?a===l?!0:a&&a.nodeType===3?!1:l&&l.nodeType===3?sS(a,l.parentNode):"contains"in a?a.contains(l):a.compareDocumentPosition?!!(a.compareDocumentPosition(l)&16):!1:!1}function aS(){for(var a=window,l=Tt();l instanceof a.HTMLIFrameElement;){try{var d=typeof l.contentWindow.location.href=="string"}catch{d=!1}if(d)a=l.contentWindow;else break;l=Tt(a.document)}return l}function x0(a){var l=a&&a.nodeName&&a.nodeName.toLowerCase();return l&&(l==="input"&&(a.type==="text"||a.type==="search"||a.type==="tel"||a.type==="url"||a.type==="password")||l==="textarea"||a.contentEditable==="true")}function uC(a){var l=aS(),d=a.focusedElem,x=a.selectionRange;if(l!==d&&d&&d.ownerDocument&&sS(d.ownerDocument.documentElement,d)){if(x!==null&&x0(d)){if(l=x.start,a=x.end,a===void 0&&(a=l),"selectionStart"in d)d.selectionStart=l,d.selectionEnd=Math.min(a,d.value.length);else if(a=(l=d.ownerDocument||document)&&l.defaultView||window,a.getSelection){a=a.getSelection();var M=d.textContent.length,R=Math.min(x.start,M);x=x.end===void 0?R:Math.min(x.end,M),!a.extend&&R>x&&(M=x,x=R,R=M),M=rS(d,R);var F=rS(d,x);M&&F&&(a.rangeCount!==1||a.anchorNode!==M.node||a.anchorOffset!==M.offset||a.focusNode!==F.node||a.focusOffset!==F.offset)&&(l=l.createRange(),l.setStart(M.node,M.offset),a.removeAllRanges(),R>x?(a.addRange(l),a.extend(F.node,F.offset)):(l.setEnd(F.node,F.offset),a.addRange(l)))}}for(l=[],a=d;a=a.parentNode;)a.nodeType===1&&l.push({element:a,left:a.scrollLeft,top:a.scrollTop});for(typeof d.focus=="function"&&d.focus(),d=0;d<l.length;d++)a=l[d],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}var fC=c&&"documentMode"in document&&11>=document.documentMode,Wl=null,y0=null,Zu=null,S0=!1;function oS(a,l,d){var x=d.window===d?d.document:d.nodeType===9?d:d.ownerDocument;S0||Wl==null||Wl!==Tt(x)||(x=Wl,"selectionStart"in x&&x0(x)?x={start:x.selectionStart,end:x.selectionEnd}:(x=(x.ownerDocument&&x.ownerDocument.defaultView||window).getSelection(),x={anchorNode:x.anchorNode,anchorOffset:x.anchorOffset,focusNode:x.focusNode,focusOffset:x.focusOffset}),Zu&&Ku(Zu,x)||(Zu=x,x=jh(y0,"onSelect"),0<x.length&&(l=new f0("onSelect","select",null,l,d),a.push({event:l,listeners:x}),l.target=Wl)))}function Wh(a,l){var d={};return d[a.toLowerCase()]=l.toLowerCase(),d["Webkit"+a]="webkit"+l,d["Moz"+a]="moz"+l,d}var Xl={animationend:Wh("Animation","AnimationEnd"),animationiteration:Wh("Animation","AnimationIteration"),animationstart:Wh("Animation","AnimationStart"),transitionend:Wh("Transition","TransitionEnd")},M0={},lS={};c&&(lS=document.createElement("div").style,"AnimationEvent"in window||(delete Xl.animationend.animation,delete Xl.animationiteration.animation,delete Xl.animationstart.animation),"TransitionEvent"in window||delete Xl.transitionend.transition);function Xh(a){if(M0[a])return M0[a];if(!Xl[a])return a;var l=Xl[a],d;for(d in l)if(l.hasOwnProperty(d)&&d in lS)return M0[a]=l[d];return a}var cS=Xh("animationend"),uS=Xh("animationiteration"),fS=Xh("animationstart"),hS=Xh("transitionend"),dS=new Map,pS="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Oa(a,l){dS.set(a,l),s(l,[a])}for(var E0=0;E0<pS.length;E0++){var T0=pS[E0],hC=T0.toLowerCase(),dC=T0[0].toUpperCase()+T0.slice(1);Oa(hC,"on"+dC)}Oa(cS,"onAnimationEnd"),Oa(uS,"onAnimationIteration"),Oa(fS,"onAnimationStart"),Oa("dblclick","onDoubleClick"),Oa("focusin","onFocus"),Oa("focusout","onBlur"),Oa(hS,"onTransitionEnd"),o("onMouseEnter",["mouseout","mouseover"]),o("onMouseLeave",["mouseout","mouseover"]),o("onPointerEnter",["pointerout","pointerover"]),o("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Qu="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pC=new Set("cancel close invalid load scroll toggle".split(" ").concat(Qu));function mS(a,l,d){var x=a.type||"unknown-event";a.currentTarget=d,Bl(x,l,void 0,a),a.currentTarget=null}function gS(a,l){l=(l&4)!==0;for(var d=0;d<a.length;d++){var x=a[d],M=x.event;x=x.listeners;e:{var R=void 0;if(l)for(var F=x.length-1;0<=F;F--){var Q=x[F],ce=Q.instance,De=Q.currentTarget;if(Q=Q.listener,ce!==R&&M.isPropagationStopped())break e;mS(M,Q,De),R=ce}else for(F=0;F<x.length;F++){if(Q=x[F],ce=Q.instance,De=Q.currentTarget,Q=Q.listener,ce!==R&&M.isPropagationStopped())break e;mS(M,Q,De),R=ce}}}if(xs)throw a=hr,xs=!1,hr=null,a}function xn(a,l){var d=l[I0];d===void 0&&(d=l[I0]=new Set);var x=a+"__bubble";d.has(x)||(_S(l,a,2,!1),d.add(x))}function w0(a,l,d){var x=0;l&&(x|=4),_S(d,a,x,l)}var $h="_reactListening"+Math.random().toString(36).slice(2);function Ju(a){if(!a[$h]){a[$h]=!0,n.forEach(function(d){d!=="selectionchange"&&(pC.has(d)||w0(d,!1,a),w0(d,!0,a))});var l=a.nodeType===9?a:a.ownerDocument;l===null||l[$h]||(l[$h]=!0,w0("selectionchange",!1,l))}}function _S(a,l,d,x){switch(zy(l)){case 1:var M=RR;break;case 4:M=CR;break;default:M=l0}d=M.bind(null,l,d,a),M=void 0,!Yi||l!=="touchstart"&&l!=="touchmove"&&l!=="wheel"||(M=!0),x?M!==void 0?a.addEventListener(l,d,{capture:!0,passive:M}):a.addEventListener(l,d,!0):M!==void 0?a.addEventListener(l,d,{passive:M}):a.addEventListener(l,d,!1)}function b0(a,l,d,x,M){var R=x;if((l&1)===0&&(l&2)===0&&x!==null)e:for(;;){if(x===null)return;var F=x.tag;if(F===3||F===4){var Q=x.stateNode.containerInfo;if(Q===M||Q.nodeType===8&&Q.parentNode===M)break;if(F===4)for(F=x.return;F!==null;){var ce=F.tag;if((ce===3||ce===4)&&(ce=F.stateNode.containerInfo,ce===M||ce.nodeType===8&&ce.parentNode===M))return;F=F.return}for(;Q!==null;){if(F=Fo(Q),F===null)return;if(ce=F.tag,ce===5||ce===6){x=R=F;continue e}Q=Q.parentNode}}x=x.return}vn(function(){var De=R,je=$(d),Ze=[];e:{var Xe=dS.get(a);if(Xe!==void 0){var ht=f0,_t=a;switch(a){case"keypress":if(zh(d)===0)break e;case"keydown":case"keyup":ht=WR;break;case"focusin":_t="focus",ht=p0;break;case"focusout":_t="blur",ht=p0;break;case"beforeblur":case"afterblur":ht=p0;break;case"click":if(d.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ht=Gy;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ht=IR;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ht=jR;break;case cS:case uS:case fS:ht=UR;break;case hS:ht=YR;break;case"scroll":ht=PR;break;case"wheel":ht=ZR;break;case"copy":case"cut":case"paste":ht=FR;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ht=Xy}var vt=(l&4)!==0,kn=!vt&&a==="scroll",we=vt?Xe!==null?Xe+"Capture":null:Xe;vt=[];for(var pe=De,Ae;pe!==null;){Ae=pe;var rt=Ae.stateNode;if(Ae.tag===5&&rt!==null&&(Ae=rt,we!==null&&(rt=ri(pe,we),rt!=null&&vt.push(ef(pe,rt,Ae)))),kn)break;pe=pe.return}0<vt.length&&(Xe=new ht(Xe,_t,null,d,je),Ze.push({event:Xe,listeners:vt}))}}if((l&7)===0){e:{if(Xe=a==="mouseover"||a==="pointerover",ht=a==="mouseout"||a==="pointerout",Xe&&d!==ne&&(_t=d.relatedTarget||d.fromElement)&&(Fo(_t)||_t[Xs]))break e;if((ht||Xe)&&(Xe=je.window===je?je:(Xe=je.ownerDocument)?Xe.defaultView||Xe.parentWindow:window,ht?(_t=d.relatedTarget||d.toElement,ht=De,_t=_t?Fo(_t):null,_t!==null&&(kn=Dr(_t),_t!==kn||_t.tag!==5&&_t.tag!==6)&&(_t=null)):(ht=null,_t=De),ht!==_t)){if(vt=Gy,rt="onMouseLeave",we="onMouseEnter",pe="mouse",(a==="pointerout"||a==="pointerover")&&(vt=Xy,rt="onPointerLeave",we="onPointerEnter",pe="pointer"),kn=ht==null?Xe:ql(ht),Ae=_t==null?Xe:ql(_t),Xe=new vt(rt,pe+"leave",ht,d,je),Xe.target=kn,Xe.relatedTarget=Ae,rt=null,Fo(je)===De&&(vt=new vt(we,pe+"enter",_t,d,je),vt.target=Ae,vt.relatedTarget=kn,rt=vt),kn=rt,ht&&_t)t:{for(vt=ht,we=_t,pe=0,Ae=vt;Ae;Ae=$l(Ae))pe++;for(Ae=0,rt=we;rt;rt=$l(rt))Ae++;for(;0<pe-Ae;)vt=$l(vt),pe--;for(;0<Ae-pe;)we=$l(we),Ae--;for(;pe--;){if(vt===we||we!==null&&vt===we.alternate)break t;vt=$l(vt),we=$l(we)}vt=null}else vt=null;ht!==null&&vS(Ze,Xe,ht,vt,!1),_t!==null&&kn!==null&&vS(Ze,kn,_t,vt,!0)}}e:{if(Xe=De?ql(De):window,ht=Xe.nodeName&&Xe.nodeName.toLowerCase(),ht==="select"||ht==="input"&&Xe.type==="file")var yt=rC;else if(Zy(Xe))if(Jy)yt=lC;else{yt=aC;var Rt=sC}else(ht=Xe.nodeName)&&ht.toLowerCase()==="input"&&(Xe.type==="checkbox"||Xe.type==="radio")&&(yt=oC);if(yt&&(yt=yt(a,De))){Qy(Ze,yt,d,je);break e}Rt&&Rt(a,Xe,De),a==="focusout"&&(Rt=Xe._wrapperState)&&Rt.controlled&&Xe.type==="number"&&ot(Xe,"number",Xe.value)}switch(Rt=De?ql(De):window,a){case"focusin":(Zy(Rt)||Rt.contentEditable==="true")&&(Wl=Rt,y0=De,Zu=null);break;case"focusout":Zu=y0=Wl=null;break;case"mousedown":S0=!0;break;case"contextmenu":case"mouseup":case"dragend":S0=!1,oS(Ze,d,je);break;case"selectionchange":if(fC)break;case"keydown":case"keyup":oS(Ze,d,je)}var Ct;if(g0)e:{switch(a){case"compositionstart":var It="onCompositionStart";break e;case"compositionend":It="onCompositionEnd";break e;case"compositionupdate":It="onCompositionUpdate";break e}It=void 0}else Gl?Yy(a,d)&&(It="onCompositionEnd"):a==="keydown"&&d.keyCode===229&&(It="onCompositionStart");It&&($y&&d.locale!=="ko"&&(Gl||It!=="onCompositionStart"?It==="onCompositionEnd"&&Gl&&(Ct=Hy()):(Ua=je,u0="value"in Ua?Ua.value:Ua.textContent,Gl=!0)),Rt=jh(De,It),0<Rt.length&&(It=new Wy(It,a,null,d,je),Ze.push({event:It,listeners:Rt}),Ct?It.data=Ct:(Ct=Ky(d),Ct!==null&&(It.data=Ct)))),(Ct=JR?eC(a,d):tC(a,d))&&(De=jh(De,"onBeforeInput"),0<De.length&&(je=new Wy("onBeforeInput","beforeinput",null,d,je),Ze.push({event:je,listeners:De}),je.data=Ct))}gS(Ze,l)})}function ef(a,l,d){return{instance:a,listener:l,currentTarget:d}}function jh(a,l){for(var d=l+"Capture",x=[];a!==null;){var M=a,R=M.stateNode;M.tag===5&&R!==null&&(M=R,R=ri(a,d),R!=null&&x.unshift(ef(a,R,M)),R=ri(a,l),R!=null&&x.push(ef(a,R,M))),a=a.return}return x}function $l(a){if(a===null)return null;do a=a.return;while(a&&a.tag!==5);return a||null}function vS(a,l,d,x,M){for(var R=l._reactName,F=[];d!==null&&d!==x;){var Q=d,ce=Q.alternate,De=Q.stateNode;if(ce!==null&&ce===x)break;Q.tag===5&&De!==null&&(Q=De,M?(ce=ri(d,R),ce!=null&&F.unshift(ef(d,ce,Q))):M||(ce=ri(d,R),ce!=null&&F.push(ef(d,ce,Q)))),d=d.return}F.length!==0&&a.push({event:l,listeners:F})}var mC=/\r\n?/g,gC=/\u0000|\uFFFD/g;function xS(a){return(typeof a=="string"?a:""+a).replace(mC,`
`).replace(gC,"")}function qh(a,l,d){if(l=xS(l),xS(a)!==l&&d)throw Error(t(425))}function Yh(){}var A0=null,R0=null;function C0(a,l){return a==="textarea"||a==="noscript"||typeof l.children=="string"||typeof l.children=="number"||typeof l.dangerouslySetInnerHTML=="object"&&l.dangerouslySetInnerHTML!==null&&l.dangerouslySetInnerHTML.__html!=null}var P0=typeof setTimeout=="function"?setTimeout:void 0,_C=typeof clearTimeout=="function"?clearTimeout:void 0,yS=typeof Promise=="function"?Promise:void 0,vC=typeof queueMicrotask=="function"?queueMicrotask:typeof yS<"u"?function(a){return yS.resolve(null).then(a).catch(xC)}:P0;function xC(a){setTimeout(function(){throw a})}function L0(a,l){var d=l,x=0;do{var M=d.nextSibling;if(a.removeChild(d),M&&M.nodeType===8)if(d=M.data,d==="/$"){if(x===0){a.removeChild(M),Wu(l);return}x--}else d!=="$"&&d!=="$?"&&d!=="$!"||x++;d=M}while(d);Wu(l)}function Fa(a){for(;a!=null;a=a.nextSibling){var l=a.nodeType;if(l===1||l===3)break;if(l===8){if(l=a.data,l==="$"||l==="$!"||l==="$?")break;if(l==="/$")return null}}return a}function SS(a){a=a.previousSibling;for(var l=0;a;){if(a.nodeType===8){var d=a.data;if(d==="$"||d==="$!"||d==="$?"){if(l===0)return a;l--}else d==="/$"&&l++}a=a.previousSibling}return null}var jl=Math.random().toString(36).slice(2),Ss="__reactFiber$"+jl,tf="__reactProps$"+jl,Xs="__reactContainer$"+jl,I0="__reactEvents$"+jl,yC="__reactListeners$"+jl,SC="__reactHandles$"+jl;function Fo(a){var l=a[Ss];if(l)return l;for(var d=a.parentNode;d;){if(l=d[Xs]||d[Ss]){if(d=l.alternate,l.child!==null||d!==null&&d.child!==null)for(a=SS(a);a!==null;){if(d=a[Ss])return d;a=SS(a)}return l}a=d,d=a.parentNode}return null}function nf(a){return a=a[Ss]||a[Xs],!a||a.tag!==5&&a.tag!==6&&a.tag!==13&&a.tag!==3?null:a}function ql(a){if(a.tag===5||a.tag===6)return a.stateNode;throw Error(t(33))}function Kh(a){return a[tf]||null}var D0=[],Yl=-1;function ka(a){return{current:a}}function yn(a){0>Yl||(a.current=D0[Yl],D0[Yl]=null,Yl--)}function _n(a,l){Yl++,D0[Yl]=a.current,a.current=l}var Ba={},Ti=ka(Ba),Ki=ka(!1),ko=Ba;function Kl(a,l){var d=a.type.contextTypes;if(!d)return Ba;var x=a.stateNode;if(x&&x.__reactInternalMemoizedUnmaskedChildContext===l)return x.__reactInternalMemoizedMaskedChildContext;var M={},R;for(R in d)M[R]=l[R];return x&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=l,a.__reactInternalMemoizedMaskedChildContext=M),M}function Zi(a){return a=a.childContextTypes,a!=null}function Zh(){yn(Ki),yn(Ti)}function MS(a,l,d){if(Ti.current!==Ba)throw Error(t(168));_n(Ti,l),_n(Ki,d)}function ES(a,l,d){var x=a.stateNode;if(l=l.childContextTypes,typeof x.getChildContext!="function")return d;x=x.getChildContext();for(var M in x)if(!(M in l))throw Error(t(108,Ee(a)||"Unknown",M));return oe({},d,x)}function Qh(a){return a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Ba,ko=Ti.current,_n(Ti,a),_n(Ki,Ki.current),!0}function TS(a,l,d){var x=a.stateNode;if(!x)throw Error(t(169));d?(a=ES(a,l,ko),x.__reactInternalMemoizedMergedChildContext=a,yn(Ki),yn(Ti),_n(Ti,a)):yn(Ki),_n(Ki,d)}var $s=null,Jh=!1,N0=!1;function wS(a){$s===null?$s=[a]:$s.push(a)}function MC(a){Jh=!0,wS(a)}function za(){if(!N0&&$s!==null){N0=!0;var a=0,l=Qt;try{var d=$s;for(Qt=1;a<d.length;a++){var x=d[a];do x=x(!0);while(x!==null)}$s=null,Jh=!1}catch(M){throw $s!==null&&($s=$s.slice(a+1)),Se(Oe,za),M}finally{Qt=l,N0=!1}}return null}var Zl=[],Ql=0,ed=null,td=0,Ur=[],Or=0,Bo=null,js=1,qs="";function zo(a,l){Zl[Ql++]=td,Zl[Ql++]=ed,ed=a,td=l}function bS(a,l,d){Ur[Or++]=js,Ur[Or++]=qs,Ur[Or++]=Bo,Bo=a;var x=js;a=qs;var M=32-Et(x)-1;x&=~(1<<M),d+=1;var R=32-Et(l)+M;if(30<R){var F=M-M%5;R=(x&(1<<F)-1).toString(32),x>>=F,M-=F,js=1<<32-Et(l)+M|d<<M|x,qs=R+a}else js=1<<R|d<<M|x,qs=a}function U0(a){a.return!==null&&(zo(a,1),bS(a,1,0))}function O0(a){for(;a===ed;)ed=Zl[--Ql],Zl[Ql]=null,td=Zl[--Ql],Zl[Ql]=null;for(;a===Bo;)Bo=Ur[--Or],Ur[Or]=null,qs=Ur[--Or],Ur[Or]=null,js=Ur[--Or],Ur[Or]=null}var mr=null,gr=null,bn=!1,Zr=null;function AS(a,l){var d=zr(5,null,null,0);d.elementType="DELETED",d.stateNode=l,d.return=a,l=a.deletions,l===null?(a.deletions=[d],a.flags|=16):l.push(d)}function RS(a,l){switch(a.tag){case 5:var d=a.type;return l=l.nodeType!==1||d.toLowerCase()!==l.nodeName.toLowerCase()?null:l,l!==null?(a.stateNode=l,mr=a,gr=Fa(l.firstChild),!0):!1;case 6:return l=a.pendingProps===""||l.nodeType!==3?null:l,l!==null?(a.stateNode=l,mr=a,gr=null,!0):!1;case 13:return l=l.nodeType!==8?null:l,l!==null?(d=Bo!==null?{id:js,overflow:qs}:null,a.memoizedState={dehydrated:l,treeContext:d,retryLane:1073741824},d=zr(18,null,null,0),d.stateNode=l,d.return=a,a.child=d,mr=a,gr=null,!0):!1;default:return!1}}function F0(a){return(a.mode&1)!==0&&(a.flags&128)===0}function k0(a){if(bn){var l=gr;if(l){var d=l;if(!RS(a,l)){if(F0(a))throw Error(t(418));l=Fa(d.nextSibling);var x=mr;l&&RS(a,l)?AS(x,d):(a.flags=a.flags&-4097|2,bn=!1,mr=a)}}else{if(F0(a))throw Error(t(418));a.flags=a.flags&-4097|2,bn=!1,mr=a}}}function CS(a){for(a=a.return;a!==null&&a.tag!==5&&a.tag!==3&&a.tag!==13;)a=a.return;mr=a}function nd(a){if(a!==mr)return!1;if(!bn)return CS(a),bn=!0,!1;var l;if((l=a.tag!==3)&&!(l=a.tag!==5)&&(l=a.type,l=l!=="head"&&l!=="body"&&!C0(a.type,a.memoizedProps)),l&&(l=gr)){if(F0(a))throw PS(),Error(t(418));for(;l;)AS(a,l),l=Fa(l.nextSibling)}if(CS(a),a.tag===13){if(a=a.memoizedState,a=a!==null?a.dehydrated:null,!a)throw Error(t(317));e:{for(a=a.nextSibling,l=0;a;){if(a.nodeType===8){var d=a.data;if(d==="/$"){if(l===0){gr=Fa(a.nextSibling);break e}l--}else d!=="$"&&d!=="$!"&&d!=="$?"||l++}a=a.nextSibling}gr=null}}else gr=mr?Fa(a.stateNode.nextSibling):null;return!0}function PS(){for(var a=gr;a;)a=Fa(a.nextSibling)}function Jl(){gr=mr=null,bn=!1}function B0(a){Zr===null?Zr=[a]:Zr.push(a)}var EC=T.ReactCurrentBatchConfig;function rf(a,l,d){if(a=d.ref,a!==null&&typeof a!="function"&&typeof a!="object"){if(d._owner){if(d=d._owner,d){if(d.tag!==1)throw Error(t(309));var x=d.stateNode}if(!x)throw Error(t(147,a));var M=x,R=""+a;return l!==null&&l.ref!==null&&typeof l.ref=="function"&&l.ref._stringRef===R?l.ref:(l=function(F){var Q=M.refs;F===null?delete Q[R]:Q[R]=F},l._stringRef=R,l)}if(typeof a!="string")throw Error(t(284));if(!d._owner)throw Error(t(290,a))}return a}function id(a,l){throw a=Object.prototype.toString.call(l),Error(t(31,a==="[object Object]"?"object with keys {"+Object.keys(l).join(", ")+"}":a))}function LS(a){var l=a._init;return l(a._payload)}function IS(a){function l(we,pe){if(a){var Ae=we.deletions;Ae===null?(we.deletions=[pe],we.flags|=16):Ae.push(pe)}}function d(we,pe){if(!a)return null;for(;pe!==null;)l(we,pe),pe=pe.sibling;return null}function x(we,pe){for(we=new Map;pe!==null;)pe.key!==null?we.set(pe.key,pe):we.set(pe.index,pe),pe=pe.sibling;return we}function M(we,pe){return we=qa(we,pe),we.index=0,we.sibling=null,we}function R(we,pe,Ae){return we.index=Ae,a?(Ae=we.alternate,Ae!==null?(Ae=Ae.index,Ae<pe?(we.flags|=2,pe):Ae):(we.flags|=2,pe)):(we.flags|=1048576,pe)}function F(we){return a&&we.alternate===null&&(we.flags|=2),we}function Q(we,pe,Ae,rt){return pe===null||pe.tag!==6?(pe=Pg(Ae,we.mode,rt),pe.return=we,pe):(pe=M(pe,Ae),pe.return=we,pe)}function ce(we,pe,Ae,rt){var yt=Ae.type;return yt===P?je(we,pe,Ae.props.children,rt,Ae.key):pe!==null&&(pe.elementType===yt||typeof yt=="object"&&yt!==null&&yt.$$typeof===q&&LS(yt)===pe.type)?(rt=M(pe,Ae.props),rt.ref=rf(we,pe,Ae),rt.return=we,rt):(rt=Ad(Ae.type,Ae.key,Ae.props,null,we.mode,rt),rt.ref=rf(we,pe,Ae),rt.return=we,rt)}function De(we,pe,Ae,rt){return pe===null||pe.tag!==4||pe.stateNode.containerInfo!==Ae.containerInfo||pe.stateNode.implementation!==Ae.implementation?(pe=Lg(Ae,we.mode,rt),pe.return=we,pe):(pe=M(pe,Ae.children||[]),pe.return=we,pe)}function je(we,pe,Ae,rt,yt){return pe===null||pe.tag!==7?(pe=qo(Ae,we.mode,rt,yt),pe.return=we,pe):(pe=M(pe,Ae),pe.return=we,pe)}function Ze(we,pe,Ae){if(typeof pe=="string"&&pe!==""||typeof pe=="number")return pe=Pg(""+pe,we.mode,Ae),pe.return=we,pe;if(typeof pe=="object"&&pe!==null){switch(pe.$$typeof){case L:return Ae=Ad(pe.type,pe.key,pe.props,null,we.mode,Ae),Ae.ref=rf(we,null,pe),Ae.return=we,Ae;case C:return pe=Lg(pe,we.mode,Ae),pe.return=we,pe;case q:var rt=pe._init;return Ze(we,rt(pe._payload),Ae)}if(W(pe)||ie(pe))return pe=qo(pe,we.mode,Ae,null),pe.return=we,pe;id(we,pe)}return null}function Xe(we,pe,Ae,rt){var yt=pe!==null?pe.key:null;if(typeof Ae=="string"&&Ae!==""||typeof Ae=="number")return yt!==null?null:Q(we,pe,""+Ae,rt);if(typeof Ae=="object"&&Ae!==null){switch(Ae.$$typeof){case L:return Ae.key===yt?ce(we,pe,Ae,rt):null;case C:return Ae.key===yt?De(we,pe,Ae,rt):null;case q:return yt=Ae._init,Xe(we,pe,yt(Ae._payload),rt)}if(W(Ae)||ie(Ae))return yt!==null?null:je(we,pe,Ae,rt,null);id(we,Ae)}return null}function ht(we,pe,Ae,rt,yt){if(typeof rt=="string"&&rt!==""||typeof rt=="number")return we=we.get(Ae)||null,Q(pe,we,""+rt,yt);if(typeof rt=="object"&&rt!==null){switch(rt.$$typeof){case L:return we=we.get(rt.key===null?Ae:rt.key)||null,ce(pe,we,rt,yt);case C:return we=we.get(rt.key===null?Ae:rt.key)||null,De(pe,we,rt,yt);case q:var Rt=rt._init;return ht(we,pe,Ae,Rt(rt._payload),yt)}if(W(rt)||ie(rt))return we=we.get(Ae)||null,je(pe,we,rt,yt,null);id(pe,rt)}return null}function _t(we,pe,Ae,rt){for(var yt=null,Rt=null,Ct=pe,It=pe=0,ci=null;Ct!==null&&It<Ae.length;It++){Ct.index>It?(ci=Ct,Ct=null):ci=Ct.sibling;var nn=Xe(we,Ct,Ae[It],rt);if(nn===null){Ct===null&&(Ct=ci);break}a&&Ct&&nn.alternate===null&&l(we,Ct),pe=R(nn,pe,It),Rt===null?yt=nn:Rt.sibling=nn,Rt=nn,Ct=ci}if(It===Ae.length)return d(we,Ct),bn&&zo(we,It),yt;if(Ct===null){for(;It<Ae.length;It++)Ct=Ze(we,Ae[It],rt),Ct!==null&&(pe=R(Ct,pe,It),Rt===null?yt=Ct:Rt.sibling=Ct,Rt=Ct);return bn&&zo(we,It),yt}for(Ct=x(we,Ct);It<Ae.length;It++)ci=ht(Ct,we,It,Ae[It],rt),ci!==null&&(a&&ci.alternate!==null&&Ct.delete(ci.key===null?It:ci.key),pe=R(ci,pe,It),Rt===null?yt=ci:Rt.sibling=ci,Rt=ci);return a&&Ct.forEach(function(Ya){return l(we,Ya)}),bn&&zo(we,It),yt}function vt(we,pe,Ae,rt){var yt=ie(Ae);if(typeof yt!="function")throw Error(t(150));if(Ae=yt.call(Ae),Ae==null)throw Error(t(151));for(var Rt=yt=null,Ct=pe,It=pe=0,ci=null,nn=Ae.next();Ct!==null&&!nn.done;It++,nn=Ae.next()){Ct.index>It?(ci=Ct,Ct=null):ci=Ct.sibling;var Ya=Xe(we,Ct,nn.value,rt);if(Ya===null){Ct===null&&(Ct=ci);break}a&&Ct&&Ya.alternate===null&&l(we,Ct),pe=R(Ya,pe,It),Rt===null?yt=Ya:Rt.sibling=Ya,Rt=Ya,Ct=ci}if(nn.done)return d(we,Ct),bn&&zo(we,It),yt;if(Ct===null){for(;!nn.done;It++,nn=Ae.next())nn=Ze(we,nn.value,rt),nn!==null&&(pe=R(nn,pe,It),Rt===null?yt=nn:Rt.sibling=nn,Rt=nn);return bn&&zo(we,It),yt}for(Ct=x(we,Ct);!nn.done;It++,nn=Ae.next())nn=ht(Ct,we,It,nn.value,rt),nn!==null&&(a&&nn.alternate!==null&&Ct.delete(nn.key===null?It:nn.key),pe=R(nn,pe,It),Rt===null?yt=nn:Rt.sibling=nn,Rt=nn);return a&&Ct.forEach(function(nP){return l(we,nP)}),bn&&zo(we,It),yt}function kn(we,pe,Ae,rt){if(typeof Ae=="object"&&Ae!==null&&Ae.type===P&&Ae.key===null&&(Ae=Ae.props.children),typeof Ae=="object"&&Ae!==null){switch(Ae.$$typeof){case L:e:{for(var yt=Ae.key,Rt=pe;Rt!==null;){if(Rt.key===yt){if(yt=Ae.type,yt===P){if(Rt.tag===7){d(we,Rt.sibling),pe=M(Rt,Ae.props.children),pe.return=we,we=pe;break e}}else if(Rt.elementType===yt||typeof yt=="object"&&yt!==null&&yt.$$typeof===q&&LS(yt)===Rt.type){d(we,Rt.sibling),pe=M(Rt,Ae.props),pe.ref=rf(we,Rt,Ae),pe.return=we,we=pe;break e}d(we,Rt);break}else l(we,Rt);Rt=Rt.sibling}Ae.type===P?(pe=qo(Ae.props.children,we.mode,rt,Ae.key),pe.return=we,we=pe):(rt=Ad(Ae.type,Ae.key,Ae.props,null,we.mode,rt),rt.ref=rf(we,pe,Ae),rt.return=we,we=rt)}return F(we);case C:e:{for(Rt=Ae.key;pe!==null;){if(pe.key===Rt)if(pe.tag===4&&pe.stateNode.containerInfo===Ae.containerInfo&&pe.stateNode.implementation===Ae.implementation){d(we,pe.sibling),pe=M(pe,Ae.children||[]),pe.return=we,we=pe;break e}else{d(we,pe);break}else l(we,pe);pe=pe.sibling}pe=Lg(Ae,we.mode,rt),pe.return=we,we=pe}return F(we);case q:return Rt=Ae._init,kn(we,pe,Rt(Ae._payload),rt)}if(W(Ae))return _t(we,pe,Ae,rt);if(ie(Ae))return vt(we,pe,Ae,rt);id(we,Ae)}return typeof Ae=="string"&&Ae!==""||typeof Ae=="number"?(Ae=""+Ae,pe!==null&&pe.tag===6?(d(we,pe.sibling),pe=M(pe,Ae),pe.return=we,we=pe):(d(we,pe),pe=Pg(Ae,we.mode,rt),pe.return=we,we=pe),F(we)):d(we,pe)}return kn}var ec=IS(!0),DS=IS(!1),rd=ka(null),sd=null,tc=null,z0=null;function H0(){z0=tc=sd=null}function V0(a){var l=rd.current;yn(rd),a._currentValue=l}function G0(a,l,d){for(;a!==null;){var x=a.alternate;if((a.childLanes&l)!==l?(a.childLanes|=l,x!==null&&(x.childLanes|=l)):x!==null&&(x.childLanes&l)!==l&&(x.childLanes|=l),a===d)break;a=a.return}}function nc(a,l){sd=a,z0=tc=null,a=a.dependencies,a!==null&&a.firstContext!==null&&((a.lanes&l)!==0&&(Qi=!0),a.firstContext=null)}function Fr(a){var l=a._currentValue;if(z0!==a)if(a={context:a,memoizedValue:l,next:null},tc===null){if(sd===null)throw Error(t(308));tc=a,sd.dependencies={lanes:0,firstContext:a}}else tc=tc.next=a;return l}var Ho=null;function W0(a){Ho===null?Ho=[a]:Ho.push(a)}function NS(a,l,d,x){var M=l.interleaved;return M===null?(d.next=d,W0(l)):(d.next=M.next,M.next=d),l.interleaved=d,Ys(a,x)}function Ys(a,l){a.lanes|=l;var d=a.alternate;for(d!==null&&(d.lanes|=l),d=a,a=a.return;a!==null;)a.childLanes|=l,d=a.alternate,d!==null&&(d.childLanes|=l),d=a,a=a.return;return d.tag===3?d.stateNode:null}var Ha=!1;function X0(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function US(a,l){a=a.updateQueue,l.updateQueue===a&&(l.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function Ks(a,l){return{eventTime:a,lane:l,tag:0,payload:null,callback:null,next:null}}function Va(a,l,d){var x=a.updateQueue;if(x===null)return null;if(x=x.shared,(Jt&2)!==0){var M=x.pending;return M===null?l.next=l:(l.next=M.next,M.next=l),x.pending=l,Ys(a,d)}return M=x.interleaved,M===null?(l.next=l,W0(x)):(l.next=M.next,M.next=l),x.interleaved=l,Ys(a,d)}function ad(a,l,d){if(l=l.updateQueue,l!==null&&(l=l.shared,(d&4194240)!==0)){var x=l.lanes;x&=a.pendingLanes,d|=x,l.lanes=d,ai(a,d)}}function OS(a,l){var d=a.updateQueue,x=a.alternate;if(x!==null&&(x=x.updateQueue,d===x)){var M=null,R=null;if(d=d.firstBaseUpdate,d!==null){do{var F={eventTime:d.eventTime,lane:d.lane,tag:d.tag,payload:d.payload,callback:d.callback,next:null};R===null?M=R=F:R=R.next=F,d=d.next}while(d!==null);R===null?M=R=l:R=R.next=l}else M=R=l;d={baseState:x.baseState,firstBaseUpdate:M,lastBaseUpdate:R,shared:x.shared,effects:x.effects},a.updateQueue=d;return}a=d.lastBaseUpdate,a===null?d.firstBaseUpdate=l:a.next=l,d.lastBaseUpdate=l}function od(a,l,d,x){var M=a.updateQueue;Ha=!1;var R=M.firstBaseUpdate,F=M.lastBaseUpdate,Q=M.shared.pending;if(Q!==null){M.shared.pending=null;var ce=Q,De=ce.next;ce.next=null,F===null?R=De:F.next=De,F=ce;var je=a.alternate;je!==null&&(je=je.updateQueue,Q=je.lastBaseUpdate,Q!==F&&(Q===null?je.firstBaseUpdate=De:Q.next=De,je.lastBaseUpdate=ce))}if(R!==null){var Ze=M.baseState;F=0,je=De=ce=null,Q=R;do{var Xe=Q.lane,ht=Q.eventTime;if((x&Xe)===Xe){je!==null&&(je=je.next={eventTime:ht,lane:0,tag:Q.tag,payload:Q.payload,callback:Q.callback,next:null});e:{var _t=a,vt=Q;switch(Xe=l,ht=d,vt.tag){case 1:if(_t=vt.payload,typeof _t=="function"){Ze=_t.call(ht,Ze,Xe);break e}Ze=_t;break e;case 3:_t.flags=_t.flags&-65537|128;case 0:if(_t=vt.payload,Xe=typeof _t=="function"?_t.call(ht,Ze,Xe):_t,Xe==null)break e;Ze=oe({},Ze,Xe);break e;case 2:Ha=!0}}Q.callback!==null&&Q.lane!==0&&(a.flags|=64,Xe=M.effects,Xe===null?M.effects=[Q]:Xe.push(Q))}else ht={eventTime:ht,lane:Xe,tag:Q.tag,payload:Q.payload,callback:Q.callback,next:null},je===null?(De=je=ht,ce=Ze):je=je.next=ht,F|=Xe;if(Q=Q.next,Q===null){if(Q=M.shared.pending,Q===null)break;Xe=Q,Q=Xe.next,Xe.next=null,M.lastBaseUpdate=Xe,M.shared.pending=null}}while(!0);if(je===null&&(ce=Ze),M.baseState=ce,M.firstBaseUpdate=De,M.lastBaseUpdate=je,l=M.shared.interleaved,l!==null){M=l;do F|=M.lane,M=M.next;while(M!==l)}else R===null&&(M.shared.lanes=0);Wo|=F,a.lanes=F,a.memoizedState=Ze}}function FS(a,l,d){if(a=l.effects,l.effects=null,a!==null)for(l=0;l<a.length;l++){var x=a[l],M=x.callback;if(M!==null){if(x.callback=null,x=d,typeof M!="function")throw Error(t(191,M));M.call(x)}}}var sf={},Ms=ka(sf),af=ka(sf),of=ka(sf);function Vo(a){if(a===sf)throw Error(t(174));return a}function $0(a,l){switch(_n(of,l),_n(af,a),_n(Ms,sf),a=l.nodeType,a){case 9:case 11:l=(l=l.documentElement)?l.namespaceURI:ye(null,"");break;default:a=a===8?l.parentNode:l,l=a.namespaceURI||null,a=a.tagName,l=ye(l,a)}yn(Ms),_n(Ms,l)}function ic(){yn(Ms),yn(af),yn(of)}function kS(a){Vo(of.current);var l=Vo(Ms.current),d=ye(l,a.type);l!==d&&(_n(af,a),_n(Ms,d))}function j0(a){af.current===a&&(yn(Ms),yn(af))}var Cn=ka(0);function ld(a){for(var l=a;l!==null;){if(l.tag===13){var d=l.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||d.data==="$?"||d.data==="$!"))return l}else if(l.tag===19&&l.memoizedProps.revealOrder!==void 0){if((l.flags&128)!==0)return l}else if(l.child!==null){l.child.return=l,l=l.child;continue}if(l===a)break;for(;l.sibling===null;){if(l.return===null||l.return===a)return null;l=l.return}l.sibling.return=l.return,l=l.sibling}return null}var q0=[];function Y0(){for(var a=0;a<q0.length;a++)q0[a]._workInProgressVersionPrimary=null;q0.length=0}var cd=T.ReactCurrentDispatcher,K0=T.ReactCurrentBatchConfig,Go=0,Pn=null,Kn=null,oi=null,ud=!1,lf=!1,cf=0,TC=0;function wi(){throw Error(t(321))}function Z0(a,l){if(l===null)return!1;for(var d=0;d<l.length&&d<a.length;d++)if(!Kr(a[d],l[d]))return!1;return!0}function Q0(a,l,d,x,M,R){if(Go=R,Pn=l,l.memoizedState=null,l.updateQueue=null,l.lanes=0,cd.current=a===null||a.memoizedState===null?RC:CC,a=d(x,M),lf){R=0;do{if(lf=!1,cf=0,25<=R)throw Error(t(301));R+=1,oi=Kn=null,l.updateQueue=null,cd.current=PC,a=d(x,M)}while(lf)}if(cd.current=dd,l=Kn!==null&&Kn.next!==null,Go=0,oi=Kn=Pn=null,ud=!1,l)throw Error(t(300));return a}function J0(){var a=cf!==0;return cf=0,a}function Es(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return oi===null?Pn.memoizedState=oi=a:oi=oi.next=a,oi}function kr(){if(Kn===null){var a=Pn.alternate;a=a!==null?a.memoizedState:null}else a=Kn.next;var l=oi===null?Pn.memoizedState:oi.next;if(l!==null)oi=l,Kn=a;else{if(a===null)throw Error(t(310));Kn=a,a={memoizedState:Kn.memoizedState,baseState:Kn.baseState,baseQueue:Kn.baseQueue,queue:Kn.queue,next:null},oi===null?Pn.memoizedState=oi=a:oi=oi.next=a}return oi}function uf(a,l){return typeof l=="function"?l(a):l}function eg(a){var l=kr(),d=l.queue;if(d===null)throw Error(t(311));d.lastRenderedReducer=a;var x=Kn,M=x.baseQueue,R=d.pending;if(R!==null){if(M!==null){var F=M.next;M.next=R.next,R.next=F}x.baseQueue=M=R,d.pending=null}if(M!==null){R=M.next,x=x.baseState;var Q=F=null,ce=null,De=R;do{var je=De.lane;if((Go&je)===je)ce!==null&&(ce=ce.next={lane:0,action:De.action,hasEagerState:De.hasEagerState,eagerState:De.eagerState,next:null}),x=De.hasEagerState?De.eagerState:a(x,De.action);else{var Ze={lane:je,action:De.action,hasEagerState:De.hasEagerState,eagerState:De.eagerState,next:null};ce===null?(Q=ce=Ze,F=x):ce=ce.next=Ze,Pn.lanes|=je,Wo|=je}De=De.next}while(De!==null&&De!==R);ce===null?F=x:ce.next=Q,Kr(x,l.memoizedState)||(Qi=!0),l.memoizedState=x,l.baseState=F,l.baseQueue=ce,d.lastRenderedState=x}if(a=d.interleaved,a!==null){M=a;do R=M.lane,Pn.lanes|=R,Wo|=R,M=M.next;while(M!==a)}else M===null&&(d.lanes=0);return[l.memoizedState,d.dispatch]}function tg(a){var l=kr(),d=l.queue;if(d===null)throw Error(t(311));d.lastRenderedReducer=a;var x=d.dispatch,M=d.pending,R=l.memoizedState;if(M!==null){d.pending=null;var F=M=M.next;do R=a(R,F.action),F=F.next;while(F!==M);Kr(R,l.memoizedState)||(Qi=!0),l.memoizedState=R,l.baseQueue===null&&(l.baseState=R),d.lastRenderedState=R}return[R,x]}function BS(){}function zS(a,l){var d=Pn,x=kr(),M=l(),R=!Kr(x.memoizedState,M);if(R&&(x.memoizedState=M,Qi=!0),x=x.queue,ng(GS.bind(null,d,x,a),[a]),x.getSnapshot!==l||R||oi!==null&&oi.memoizedState.tag&1){if(d.flags|=2048,ff(9,VS.bind(null,d,x,M,l),void 0,null),li===null)throw Error(t(349));(Go&30)!==0||HS(d,l,M)}return M}function HS(a,l,d){a.flags|=16384,a={getSnapshot:l,value:d},l=Pn.updateQueue,l===null?(l={lastEffect:null,stores:null},Pn.updateQueue=l,l.stores=[a]):(d=l.stores,d===null?l.stores=[a]:d.push(a))}function VS(a,l,d,x){l.value=d,l.getSnapshot=x,WS(l)&&XS(a)}function GS(a,l,d){return d(function(){WS(l)&&XS(a)})}function WS(a){var l=a.getSnapshot;a=a.value;try{var d=l();return!Kr(a,d)}catch{return!0}}function XS(a){var l=Ys(a,1);l!==null&&ts(l,a,1,-1)}function $S(a){var l=Es();return typeof a=="function"&&(a=a()),l.memoizedState=l.baseState=a,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:uf,lastRenderedState:a},l.queue=a,a=a.dispatch=AC.bind(null,Pn,a),[l.memoizedState,a]}function ff(a,l,d,x){return a={tag:a,create:l,destroy:d,deps:x,next:null},l=Pn.updateQueue,l===null?(l={lastEffect:null,stores:null},Pn.updateQueue=l,l.lastEffect=a.next=a):(d=l.lastEffect,d===null?l.lastEffect=a.next=a:(x=d.next,d.next=a,a.next=x,l.lastEffect=a)),a}function jS(){return kr().memoizedState}function fd(a,l,d,x){var M=Es();Pn.flags|=a,M.memoizedState=ff(1|l,d,void 0,x===void 0?null:x)}function hd(a,l,d,x){var M=kr();x=x===void 0?null:x;var R=void 0;if(Kn!==null){var F=Kn.memoizedState;if(R=F.destroy,x!==null&&Z0(x,F.deps)){M.memoizedState=ff(l,d,R,x);return}}Pn.flags|=a,M.memoizedState=ff(1|l,d,R,x)}function qS(a,l){return fd(8390656,8,a,l)}function ng(a,l){return hd(2048,8,a,l)}function YS(a,l){return hd(4,2,a,l)}function KS(a,l){return hd(4,4,a,l)}function ZS(a,l){if(typeof l=="function")return a=a(),l(a),function(){l(null)};if(l!=null)return a=a(),l.current=a,function(){l.current=null}}function QS(a,l,d){return d=d!=null?d.concat([a]):null,hd(4,4,ZS.bind(null,l,a),d)}function ig(){}function JS(a,l){var d=kr();l=l===void 0?null:l;var x=d.memoizedState;return x!==null&&l!==null&&Z0(l,x[1])?x[0]:(d.memoizedState=[a,l],a)}function eM(a,l){var d=kr();l=l===void 0?null:l;var x=d.memoizedState;return x!==null&&l!==null&&Z0(l,x[1])?x[0]:(a=a(),d.memoizedState=[a,l],a)}function tM(a,l,d){return(Go&21)===0?(a.baseState&&(a.baseState=!1,Qi=!0),a.memoizedState=d):(Kr(d,l)||(d=on(),Pn.lanes|=d,Wo|=d,a.baseState=!0),l)}function wC(a,l){var d=Qt;Qt=d!==0&&4>d?d:4,a(!0);var x=K0.transition;K0.transition={};try{a(!1),l()}finally{Qt=d,K0.transition=x}}function nM(){return kr().memoizedState}function bC(a,l,d){var x=$a(a);if(d={lane:x,action:d,hasEagerState:!1,eagerState:null,next:null},iM(a))rM(l,d);else if(d=NS(a,l,d,x),d!==null){var M=ki();ts(d,a,x,M),sM(d,l,x)}}function AC(a,l,d){var x=$a(a),M={lane:x,action:d,hasEagerState:!1,eagerState:null,next:null};if(iM(a))rM(l,M);else{var R=a.alternate;if(a.lanes===0&&(R===null||R.lanes===0)&&(R=l.lastRenderedReducer,R!==null))try{var F=l.lastRenderedState,Q=R(F,d);if(M.hasEagerState=!0,M.eagerState=Q,Kr(Q,F)){var ce=l.interleaved;ce===null?(M.next=M,W0(l)):(M.next=ce.next,ce.next=M),l.interleaved=M;return}}catch{}finally{}d=NS(a,l,M,x),d!==null&&(M=ki(),ts(d,a,x,M),sM(d,l,x))}}function iM(a){var l=a.alternate;return a===Pn||l!==null&&l===Pn}function rM(a,l){lf=ud=!0;var d=a.pending;d===null?l.next=l:(l.next=d.next,d.next=l),a.pending=l}function sM(a,l,d){if((d&4194240)!==0){var x=l.lanes;x&=a.pendingLanes,d|=x,l.lanes=d,ai(a,d)}}var dd={readContext:Fr,useCallback:wi,useContext:wi,useEffect:wi,useImperativeHandle:wi,useInsertionEffect:wi,useLayoutEffect:wi,useMemo:wi,useReducer:wi,useRef:wi,useState:wi,useDebugValue:wi,useDeferredValue:wi,useTransition:wi,useMutableSource:wi,useSyncExternalStore:wi,useId:wi,unstable_isNewReconciler:!1},RC={readContext:Fr,useCallback:function(a,l){return Es().memoizedState=[a,l===void 0?null:l],a},useContext:Fr,useEffect:qS,useImperativeHandle:function(a,l,d){return d=d!=null?d.concat([a]):null,fd(4194308,4,ZS.bind(null,l,a),d)},useLayoutEffect:function(a,l){return fd(4194308,4,a,l)},useInsertionEffect:function(a,l){return fd(4,2,a,l)},useMemo:function(a,l){var d=Es();return l=l===void 0?null:l,a=a(),d.memoizedState=[a,l],a},useReducer:function(a,l,d){var x=Es();return l=d!==void 0?d(l):l,x.memoizedState=x.baseState=l,a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:l},x.queue=a,a=a.dispatch=bC.bind(null,Pn,a),[x.memoizedState,a]},useRef:function(a){var l=Es();return a={current:a},l.memoizedState=a},useState:$S,useDebugValue:ig,useDeferredValue:function(a){return Es().memoizedState=a},useTransition:function(){var a=$S(!1),l=a[0];return a=wC.bind(null,a[1]),Es().memoizedState=a,[l,a]},useMutableSource:function(){},useSyncExternalStore:function(a,l,d){var x=Pn,M=Es();if(bn){if(d===void 0)throw Error(t(407));d=d()}else{if(d=l(),li===null)throw Error(t(349));(Go&30)!==0||HS(x,l,d)}M.memoizedState=d;var R={value:d,getSnapshot:l};return M.queue=R,qS(GS.bind(null,x,R,a),[a]),x.flags|=2048,ff(9,VS.bind(null,x,R,d,l),void 0,null),d},useId:function(){var a=Es(),l=li.identifierPrefix;if(bn){var d=qs,x=js;d=(x&~(1<<32-Et(x)-1)).toString(32)+d,l=":"+l+"R"+d,d=cf++,0<d&&(l+="H"+d.toString(32)),l+=":"}else d=TC++,l=":"+l+"r"+d.toString(32)+":";return a.memoizedState=l},unstable_isNewReconciler:!1},CC={readContext:Fr,useCallback:JS,useContext:Fr,useEffect:ng,useImperativeHandle:QS,useInsertionEffect:YS,useLayoutEffect:KS,useMemo:eM,useReducer:eg,useRef:jS,useState:function(){return eg(uf)},useDebugValue:ig,useDeferredValue:function(a){var l=kr();return tM(l,Kn.memoizedState,a)},useTransition:function(){var a=eg(uf)[0],l=kr().memoizedState;return[a,l]},useMutableSource:BS,useSyncExternalStore:zS,useId:nM,unstable_isNewReconciler:!1},PC={readContext:Fr,useCallback:JS,useContext:Fr,useEffect:ng,useImperativeHandle:QS,useInsertionEffect:YS,useLayoutEffect:KS,useMemo:eM,useReducer:tg,useRef:jS,useState:function(){return tg(uf)},useDebugValue:ig,useDeferredValue:function(a){var l=kr();return Kn===null?l.memoizedState=a:tM(l,Kn.memoizedState,a)},useTransition:function(){var a=tg(uf)[0],l=kr().memoizedState;return[a,l]},useMutableSource:BS,useSyncExternalStore:zS,useId:nM,unstable_isNewReconciler:!1};function Qr(a,l){if(a&&a.defaultProps){l=oe({},l),a=a.defaultProps;for(var d in a)l[d]===void 0&&(l[d]=a[d]);return l}return l}function rg(a,l,d,x){l=a.memoizedState,d=d(x,l),d=d==null?l:oe({},l,d),a.memoizedState=d,a.lanes===0&&(a.updateQueue.baseState=d)}var pd={isMounted:function(a){return(a=a._reactInternals)?Dr(a)===a:!1},enqueueSetState:function(a,l,d){a=a._reactInternals;var x=ki(),M=$a(a),R=Ks(x,M);R.payload=l,d!=null&&(R.callback=d),l=Va(a,R,M),l!==null&&(ts(l,a,M,x),ad(l,a,M))},enqueueReplaceState:function(a,l,d){a=a._reactInternals;var x=ki(),M=$a(a),R=Ks(x,M);R.tag=1,R.payload=l,d!=null&&(R.callback=d),l=Va(a,R,M),l!==null&&(ts(l,a,M,x),ad(l,a,M))},enqueueForceUpdate:function(a,l){a=a._reactInternals;var d=ki(),x=$a(a),M=Ks(d,x);M.tag=2,l!=null&&(M.callback=l),l=Va(a,M,x),l!==null&&(ts(l,a,x,d),ad(l,a,x))}};function aM(a,l,d,x,M,R,F){return a=a.stateNode,typeof a.shouldComponentUpdate=="function"?a.shouldComponentUpdate(x,R,F):l.prototype&&l.prototype.isPureReactComponent?!Ku(d,x)||!Ku(M,R):!0}function oM(a,l,d){var x=!1,M=Ba,R=l.contextType;return typeof R=="object"&&R!==null?R=Fr(R):(M=Zi(l)?ko:Ti.current,x=l.contextTypes,R=(x=x!=null)?Kl(a,M):Ba),l=new l(d,R),a.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=pd,a.stateNode=l,l._reactInternals=a,x&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=M,a.__reactInternalMemoizedMaskedChildContext=R),l}function lM(a,l,d,x){a=l.state,typeof l.componentWillReceiveProps=="function"&&l.componentWillReceiveProps(d,x),typeof l.UNSAFE_componentWillReceiveProps=="function"&&l.UNSAFE_componentWillReceiveProps(d,x),l.state!==a&&pd.enqueueReplaceState(l,l.state,null)}function sg(a,l,d,x){var M=a.stateNode;M.props=d,M.state=a.memoizedState,M.refs={},X0(a);var R=l.contextType;typeof R=="object"&&R!==null?M.context=Fr(R):(R=Zi(l)?ko:Ti.current,M.context=Kl(a,R)),M.state=a.memoizedState,R=l.getDerivedStateFromProps,typeof R=="function"&&(rg(a,l,R,d),M.state=a.memoizedState),typeof l.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(l=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),l!==M.state&&pd.enqueueReplaceState(M,M.state,null),od(a,d,M,x),M.state=a.memoizedState),typeof M.componentDidMount=="function"&&(a.flags|=4194308)}function rc(a,l){try{var d="",x=l;do d+=fe(x),x=x.return;while(x);var M=d}catch(R){M=`
Error generating stack: `+R.message+`
`+R.stack}return{value:a,source:l,stack:M,digest:null}}function ag(a,l,d){return{value:a,source:null,stack:d??null,digest:l??null}}function og(a,l){try{console.error(l.value)}catch(d){setTimeout(function(){throw d})}}var LC=typeof WeakMap=="function"?WeakMap:Map;function cM(a,l,d){d=Ks(-1,d),d.tag=3,d.payload={element:null};var x=l.value;return d.callback=function(){Sd||(Sd=!0,Mg=x),og(a,l)},d}function uM(a,l,d){d=Ks(-1,d),d.tag=3;var x=a.type.getDerivedStateFromError;if(typeof x=="function"){var M=l.value;d.payload=function(){return x(M)},d.callback=function(){og(a,l)}}var R=a.stateNode;return R!==null&&typeof R.componentDidCatch=="function"&&(d.callback=function(){og(a,l),typeof x!="function"&&(Wa===null?Wa=new Set([this]):Wa.add(this));var F=l.stack;this.componentDidCatch(l.value,{componentStack:F!==null?F:""})}),d}function fM(a,l,d){var x=a.pingCache;if(x===null){x=a.pingCache=new LC;var M=new Set;x.set(l,M)}else M=x.get(l),M===void 0&&(M=new Set,x.set(l,M));M.has(d)||(M.add(d),a=XC.bind(null,a,l,d),l.then(a,a))}function hM(a){do{var l;if((l=a.tag===13)&&(l=a.memoizedState,l=l!==null?l.dehydrated!==null:!0),l)return a;a=a.return}while(a!==null);return null}function dM(a,l,d,x,M){return(a.mode&1)===0?(a===l?a.flags|=65536:(a.flags|=128,d.flags|=131072,d.flags&=-52805,d.tag===1&&(d.alternate===null?d.tag=17:(l=Ks(-1,1),l.tag=2,Va(d,l,1))),d.lanes|=1),a):(a.flags|=65536,a.lanes=M,a)}var IC=T.ReactCurrentOwner,Qi=!1;function Fi(a,l,d,x){l.child=a===null?DS(l,null,d,x):ec(l,a.child,d,x)}function pM(a,l,d,x,M){d=d.render;var R=l.ref;return nc(l,M),x=Q0(a,l,d,x,R,M),d=J0(),a!==null&&!Qi?(l.updateQueue=a.updateQueue,l.flags&=-2053,a.lanes&=~M,Zs(a,l,M)):(bn&&d&&U0(l),l.flags|=1,Fi(a,l,x,M),l.child)}function mM(a,l,d,x,M){if(a===null){var R=d.type;return typeof R=="function"&&!Cg(R)&&R.defaultProps===void 0&&d.compare===null&&d.defaultProps===void 0?(l.tag=15,l.type=R,gM(a,l,R,x,M)):(a=Ad(d.type,null,x,l,l.mode,M),a.ref=l.ref,a.return=l,l.child=a)}if(R=a.child,(a.lanes&M)===0){var F=R.memoizedProps;if(d=d.compare,d=d!==null?d:Ku,d(F,x)&&a.ref===l.ref)return Zs(a,l,M)}return l.flags|=1,a=qa(R,x),a.ref=l.ref,a.return=l,l.child=a}function gM(a,l,d,x,M){if(a!==null){var R=a.memoizedProps;if(Ku(R,x)&&a.ref===l.ref)if(Qi=!1,l.pendingProps=x=R,(a.lanes&M)!==0)(a.flags&131072)!==0&&(Qi=!0);else return l.lanes=a.lanes,Zs(a,l,M)}return lg(a,l,d,x,M)}function _M(a,l,d){var x=l.pendingProps,M=x.children,R=a!==null?a.memoizedState:null;if(x.mode==="hidden")if((l.mode&1)===0)l.memoizedState={baseLanes:0,cachePool:null,transitions:null},_n(ac,_r),_r|=d;else{if((d&1073741824)===0)return a=R!==null?R.baseLanes|d:d,l.lanes=l.childLanes=1073741824,l.memoizedState={baseLanes:a,cachePool:null,transitions:null},l.updateQueue=null,_n(ac,_r),_r|=a,null;l.memoizedState={baseLanes:0,cachePool:null,transitions:null},x=R!==null?R.baseLanes:d,_n(ac,_r),_r|=x}else R!==null?(x=R.baseLanes|d,l.memoizedState=null):x=d,_n(ac,_r),_r|=x;return Fi(a,l,M,d),l.child}function vM(a,l){var d=l.ref;(a===null&&d!==null||a!==null&&a.ref!==d)&&(l.flags|=512,l.flags|=2097152)}function lg(a,l,d,x,M){var R=Zi(d)?ko:Ti.current;return R=Kl(l,R),nc(l,M),d=Q0(a,l,d,x,R,M),x=J0(),a!==null&&!Qi?(l.updateQueue=a.updateQueue,l.flags&=-2053,a.lanes&=~M,Zs(a,l,M)):(bn&&x&&U0(l),l.flags|=1,Fi(a,l,d,M),l.child)}function xM(a,l,d,x,M){if(Zi(d)){var R=!0;Qh(l)}else R=!1;if(nc(l,M),l.stateNode===null)gd(a,l),oM(l,d,x),sg(l,d,x,M),x=!0;else if(a===null){var F=l.stateNode,Q=l.memoizedProps;F.props=Q;var ce=F.context,De=d.contextType;typeof De=="object"&&De!==null?De=Fr(De):(De=Zi(d)?ko:Ti.current,De=Kl(l,De));var je=d.getDerivedStateFromProps,Ze=typeof je=="function"||typeof F.getSnapshotBeforeUpdate=="function";Ze||typeof F.UNSAFE_componentWillReceiveProps!="function"&&typeof F.componentWillReceiveProps!="function"||(Q!==x||ce!==De)&&lM(l,F,x,De),Ha=!1;var Xe=l.memoizedState;F.state=Xe,od(l,x,F,M),ce=l.memoizedState,Q!==x||Xe!==ce||Ki.current||Ha?(typeof je=="function"&&(rg(l,d,je,x),ce=l.memoizedState),(Q=Ha||aM(l,d,Q,x,Xe,ce,De))?(Ze||typeof F.UNSAFE_componentWillMount!="function"&&typeof F.componentWillMount!="function"||(typeof F.componentWillMount=="function"&&F.componentWillMount(),typeof F.UNSAFE_componentWillMount=="function"&&F.UNSAFE_componentWillMount()),typeof F.componentDidMount=="function"&&(l.flags|=4194308)):(typeof F.componentDidMount=="function"&&(l.flags|=4194308),l.memoizedProps=x,l.memoizedState=ce),F.props=x,F.state=ce,F.context=De,x=Q):(typeof F.componentDidMount=="function"&&(l.flags|=4194308),x=!1)}else{F=l.stateNode,US(a,l),Q=l.memoizedProps,De=l.type===l.elementType?Q:Qr(l.type,Q),F.props=De,Ze=l.pendingProps,Xe=F.context,ce=d.contextType,typeof ce=="object"&&ce!==null?ce=Fr(ce):(ce=Zi(d)?ko:Ti.current,ce=Kl(l,ce));var ht=d.getDerivedStateFromProps;(je=typeof ht=="function"||typeof F.getSnapshotBeforeUpdate=="function")||typeof F.UNSAFE_componentWillReceiveProps!="function"&&typeof F.componentWillReceiveProps!="function"||(Q!==Ze||Xe!==ce)&&lM(l,F,x,ce),Ha=!1,Xe=l.memoizedState,F.state=Xe,od(l,x,F,M);var _t=l.memoizedState;Q!==Ze||Xe!==_t||Ki.current||Ha?(typeof ht=="function"&&(rg(l,d,ht,x),_t=l.memoizedState),(De=Ha||aM(l,d,De,x,Xe,_t,ce)||!1)?(je||typeof F.UNSAFE_componentWillUpdate!="function"&&typeof F.componentWillUpdate!="function"||(typeof F.componentWillUpdate=="function"&&F.componentWillUpdate(x,_t,ce),typeof F.UNSAFE_componentWillUpdate=="function"&&F.UNSAFE_componentWillUpdate(x,_t,ce)),typeof F.componentDidUpdate=="function"&&(l.flags|=4),typeof F.getSnapshotBeforeUpdate=="function"&&(l.flags|=1024)):(typeof F.componentDidUpdate!="function"||Q===a.memoizedProps&&Xe===a.memoizedState||(l.flags|=4),typeof F.getSnapshotBeforeUpdate!="function"||Q===a.memoizedProps&&Xe===a.memoizedState||(l.flags|=1024),l.memoizedProps=x,l.memoizedState=_t),F.props=x,F.state=_t,F.context=ce,x=De):(typeof F.componentDidUpdate!="function"||Q===a.memoizedProps&&Xe===a.memoizedState||(l.flags|=4),typeof F.getSnapshotBeforeUpdate!="function"||Q===a.memoizedProps&&Xe===a.memoizedState||(l.flags|=1024),x=!1)}return cg(a,l,d,x,R,M)}function cg(a,l,d,x,M,R){vM(a,l);var F=(l.flags&128)!==0;if(!x&&!F)return M&&TS(l,d,!1),Zs(a,l,R);x=l.stateNode,IC.current=l;var Q=F&&typeof d.getDerivedStateFromError!="function"?null:x.render();return l.flags|=1,a!==null&&F?(l.child=ec(l,a.child,null,R),l.child=ec(l,null,Q,R)):Fi(a,l,Q,R),l.memoizedState=x.state,M&&TS(l,d,!0),l.child}function yM(a){var l=a.stateNode;l.pendingContext?MS(a,l.pendingContext,l.pendingContext!==l.context):l.context&&MS(a,l.context,!1),$0(a,l.containerInfo)}function SM(a,l,d,x,M){return Jl(),B0(M),l.flags|=256,Fi(a,l,d,x),l.child}var ug={dehydrated:null,treeContext:null,retryLane:0};function fg(a){return{baseLanes:a,cachePool:null,transitions:null}}function MM(a,l,d){var x=l.pendingProps,M=Cn.current,R=!1,F=(l.flags&128)!==0,Q;if((Q=F)||(Q=a!==null&&a.memoizedState===null?!1:(M&2)!==0),Q?(R=!0,l.flags&=-129):(a===null||a.memoizedState!==null)&&(M|=1),_n(Cn,M&1),a===null)return k0(l),a=l.memoizedState,a!==null&&(a=a.dehydrated,a!==null)?((l.mode&1)===0?l.lanes=1:a.data==="$!"?l.lanes=8:l.lanes=1073741824,null):(F=x.children,a=x.fallback,R?(x=l.mode,R=l.child,F={mode:"hidden",children:F},(x&1)===0&&R!==null?(R.childLanes=0,R.pendingProps=F):R=Rd(F,x,0,null),a=qo(a,x,d,null),R.return=l,a.return=l,R.sibling=a,l.child=R,l.child.memoizedState=fg(d),l.memoizedState=ug,a):hg(l,F));if(M=a.memoizedState,M!==null&&(Q=M.dehydrated,Q!==null))return DC(a,l,F,x,Q,M,d);if(R){R=x.fallback,F=l.mode,M=a.child,Q=M.sibling;var ce={mode:"hidden",children:x.children};return(F&1)===0&&l.child!==M?(x=l.child,x.childLanes=0,x.pendingProps=ce,l.deletions=null):(x=qa(M,ce),x.subtreeFlags=M.subtreeFlags&14680064),Q!==null?R=qa(Q,R):(R=qo(R,F,d,null),R.flags|=2),R.return=l,x.return=l,x.sibling=R,l.child=x,x=R,R=l.child,F=a.child.memoizedState,F=F===null?fg(d):{baseLanes:F.baseLanes|d,cachePool:null,transitions:F.transitions},R.memoizedState=F,R.childLanes=a.childLanes&~d,l.memoizedState=ug,x}return R=a.child,a=R.sibling,x=qa(R,{mode:"visible",children:x.children}),(l.mode&1)===0&&(x.lanes=d),x.return=l,x.sibling=null,a!==null&&(d=l.deletions,d===null?(l.deletions=[a],l.flags|=16):d.push(a)),l.child=x,l.memoizedState=null,x}function hg(a,l){return l=Rd({mode:"visible",children:l},a.mode,0,null),l.return=a,a.child=l}function md(a,l,d,x){return x!==null&&B0(x),ec(l,a.child,null,d),a=hg(l,l.pendingProps.children),a.flags|=2,l.memoizedState=null,a}function DC(a,l,d,x,M,R,F){if(d)return l.flags&256?(l.flags&=-257,x=ag(Error(t(422))),md(a,l,F,x)):l.memoizedState!==null?(l.child=a.child,l.flags|=128,null):(R=x.fallback,M=l.mode,x=Rd({mode:"visible",children:x.children},M,0,null),R=qo(R,M,F,null),R.flags|=2,x.return=l,R.return=l,x.sibling=R,l.child=x,(l.mode&1)!==0&&ec(l,a.child,null,F),l.child.memoizedState=fg(F),l.memoizedState=ug,R);if((l.mode&1)===0)return md(a,l,F,null);if(M.data==="$!"){if(x=M.nextSibling&&M.nextSibling.dataset,x)var Q=x.dgst;return x=Q,R=Error(t(419)),x=ag(R,x,void 0),md(a,l,F,x)}if(Q=(F&a.childLanes)!==0,Qi||Q){if(x=li,x!==null){switch(F&-F){case 4:M=2;break;case 16:M=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:M=32;break;case 536870912:M=268435456;break;default:M=0}M=(M&(x.suspendedLanes|F))!==0?0:M,M!==0&&M!==R.retryLane&&(R.retryLane=M,Ys(a,M),ts(x,a,M,-1))}return Rg(),x=ag(Error(t(421))),md(a,l,F,x)}return M.data==="$?"?(l.flags|=128,l.child=a.child,l=$C.bind(null,a),M._reactRetry=l,null):(a=R.treeContext,gr=Fa(M.nextSibling),mr=l,bn=!0,Zr=null,a!==null&&(Ur[Or++]=js,Ur[Or++]=qs,Ur[Or++]=Bo,js=a.id,qs=a.overflow,Bo=l),l=hg(l,x.children),l.flags|=4096,l)}function EM(a,l,d){a.lanes|=l;var x=a.alternate;x!==null&&(x.lanes|=l),G0(a.return,l,d)}function dg(a,l,d,x,M){var R=a.memoizedState;R===null?a.memoizedState={isBackwards:l,rendering:null,renderingStartTime:0,last:x,tail:d,tailMode:M}:(R.isBackwards=l,R.rendering=null,R.renderingStartTime=0,R.last=x,R.tail=d,R.tailMode=M)}function TM(a,l,d){var x=l.pendingProps,M=x.revealOrder,R=x.tail;if(Fi(a,l,x.children,d),x=Cn.current,(x&2)!==0)x=x&1|2,l.flags|=128;else{if(a!==null&&(a.flags&128)!==0)e:for(a=l.child;a!==null;){if(a.tag===13)a.memoizedState!==null&&EM(a,d,l);else if(a.tag===19)EM(a,d,l);else if(a.child!==null){a.child.return=a,a=a.child;continue}if(a===l)break e;for(;a.sibling===null;){if(a.return===null||a.return===l)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}x&=1}if(_n(Cn,x),(l.mode&1)===0)l.memoizedState=null;else switch(M){case"forwards":for(d=l.child,M=null;d!==null;)a=d.alternate,a!==null&&ld(a)===null&&(M=d),d=d.sibling;d=M,d===null?(M=l.child,l.child=null):(M=d.sibling,d.sibling=null),dg(l,!1,M,d,R);break;case"backwards":for(d=null,M=l.child,l.child=null;M!==null;){if(a=M.alternate,a!==null&&ld(a)===null){l.child=M;break}a=M.sibling,M.sibling=d,d=M,M=a}dg(l,!0,d,null,R);break;case"together":dg(l,!1,null,null,void 0);break;default:l.memoizedState=null}return l.child}function gd(a,l){(l.mode&1)===0&&a!==null&&(a.alternate=null,l.alternate=null,l.flags|=2)}function Zs(a,l,d){if(a!==null&&(l.dependencies=a.dependencies),Wo|=l.lanes,(d&l.childLanes)===0)return null;if(a!==null&&l.child!==a.child)throw Error(t(153));if(l.child!==null){for(a=l.child,d=qa(a,a.pendingProps),l.child=d,d.return=l;a.sibling!==null;)a=a.sibling,d=d.sibling=qa(a,a.pendingProps),d.return=l;d.sibling=null}return l.child}function NC(a,l,d){switch(l.tag){case 3:yM(l),Jl();break;case 5:kS(l);break;case 1:Zi(l.type)&&Qh(l);break;case 4:$0(l,l.stateNode.containerInfo);break;case 10:var x=l.type._context,M=l.memoizedProps.value;_n(rd,x._currentValue),x._currentValue=M;break;case 13:if(x=l.memoizedState,x!==null)return x.dehydrated!==null?(_n(Cn,Cn.current&1),l.flags|=128,null):(d&l.child.childLanes)!==0?MM(a,l,d):(_n(Cn,Cn.current&1),a=Zs(a,l,d),a!==null?a.sibling:null);_n(Cn,Cn.current&1);break;case 19:if(x=(d&l.childLanes)!==0,(a.flags&128)!==0){if(x)return TM(a,l,d);l.flags|=128}if(M=l.memoizedState,M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),_n(Cn,Cn.current),x)break;return null;case 22:case 23:return l.lanes=0,_M(a,l,d)}return Zs(a,l,d)}var wM,pg,bM,AM;wM=function(a,l){for(var d=l.child;d!==null;){if(d.tag===5||d.tag===6)a.appendChild(d.stateNode);else if(d.tag!==4&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===l)break;for(;d.sibling===null;){if(d.return===null||d.return===l)return;d=d.return}d.sibling.return=d.return,d=d.sibling}},pg=function(){},bM=function(a,l,d,x){var M=a.memoizedProps;if(M!==x){a=l.stateNode,Vo(Ms.current);var R=null;switch(d){case"input":M=te(a,M),x=te(a,x),R=[];break;case"select":M=oe({},M,{value:void 0}),x=oe({},x,{value:void 0}),R=[];break;case"textarea":M=be(a,M),x=be(a,x),R=[];break;default:typeof M.onClick!="function"&&typeof x.onClick=="function"&&(a.onclick=Yh)}nt(d,x);var F;d=null;for(De in M)if(!x.hasOwnProperty(De)&&M.hasOwnProperty(De)&&M[De]!=null)if(De==="style"){var Q=M[De];for(F in Q)Q.hasOwnProperty(F)&&(d||(d={}),d[F]="")}else De!=="dangerouslySetInnerHTML"&&De!=="children"&&De!=="suppressContentEditableWarning"&&De!=="suppressHydrationWarning"&&De!=="autoFocus"&&(r.hasOwnProperty(De)?R||(R=[]):(R=R||[]).push(De,null));for(De in x){var ce=x[De];if(Q=M!=null?M[De]:void 0,x.hasOwnProperty(De)&&ce!==Q&&(ce!=null||Q!=null))if(De==="style")if(Q){for(F in Q)!Q.hasOwnProperty(F)||ce&&ce.hasOwnProperty(F)||(d||(d={}),d[F]="");for(F in ce)ce.hasOwnProperty(F)&&Q[F]!==ce[F]&&(d||(d={}),d[F]=ce[F])}else d||(R||(R=[]),R.push(De,d)),d=ce;else De==="dangerouslySetInnerHTML"?(ce=ce?ce.__html:void 0,Q=Q?Q.__html:void 0,ce!=null&&Q!==ce&&(R=R||[]).push(De,ce)):De==="children"?typeof ce!="string"&&typeof ce!="number"||(R=R||[]).push(De,""+ce):De!=="suppressContentEditableWarning"&&De!=="suppressHydrationWarning"&&(r.hasOwnProperty(De)?(ce!=null&&De==="onScroll"&&xn("scroll",a),R||Q===ce||(R=[])):(R=R||[]).push(De,ce))}d&&(R=R||[]).push("style",d);var De=R;(l.updateQueue=De)&&(l.flags|=4)}},AM=function(a,l,d,x){d!==x&&(l.flags|=4)};function hf(a,l){if(!bn)switch(a.tailMode){case"hidden":l=a.tail;for(var d=null;l!==null;)l.alternate!==null&&(d=l),l=l.sibling;d===null?a.tail=null:d.sibling=null;break;case"collapsed":d=a.tail;for(var x=null;d!==null;)d.alternate!==null&&(x=d),d=d.sibling;x===null?l||a.tail===null?a.tail=null:a.tail.sibling=null:x.sibling=null}}function bi(a){var l=a.alternate!==null&&a.alternate.child===a.child,d=0,x=0;if(l)for(var M=a.child;M!==null;)d|=M.lanes|M.childLanes,x|=M.subtreeFlags&14680064,x|=M.flags&14680064,M.return=a,M=M.sibling;else for(M=a.child;M!==null;)d|=M.lanes|M.childLanes,x|=M.subtreeFlags,x|=M.flags,M.return=a,M=M.sibling;return a.subtreeFlags|=x,a.childLanes=d,l}function UC(a,l,d){var x=l.pendingProps;switch(O0(l),l.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return bi(l),null;case 1:return Zi(l.type)&&Zh(),bi(l),null;case 3:return x=l.stateNode,ic(),yn(Ki),yn(Ti),Y0(),x.pendingContext&&(x.context=x.pendingContext,x.pendingContext=null),(a===null||a.child===null)&&(nd(l)?l.flags|=4:a===null||a.memoizedState.isDehydrated&&(l.flags&256)===0||(l.flags|=1024,Zr!==null&&(wg(Zr),Zr=null))),pg(a,l),bi(l),null;case 5:j0(l);var M=Vo(of.current);if(d=l.type,a!==null&&l.stateNode!=null)bM(a,l,d,x,M),a.ref!==l.ref&&(l.flags|=512,l.flags|=2097152);else{if(!x){if(l.stateNode===null)throw Error(t(166));return bi(l),null}if(a=Vo(Ms.current),nd(l)){x=l.stateNode,d=l.type;var R=l.memoizedProps;switch(x[Ss]=l,x[tf]=R,a=(l.mode&1)!==0,d){case"dialog":xn("cancel",x),xn("close",x);break;case"iframe":case"object":case"embed":xn("load",x);break;case"video":case"audio":for(M=0;M<Qu.length;M++)xn(Qu[M],x);break;case"source":xn("error",x);break;case"img":case"image":case"link":xn("error",x),xn("load",x);break;case"details":xn("toggle",x);break;case"input":Lt(x,R),xn("invalid",x);break;case"select":x._wrapperState={wasMultiple:!!R.multiple},xn("invalid",x);break;case"textarea":k(x,R),xn("invalid",x)}nt(d,R),M=null;for(var F in R)if(R.hasOwnProperty(F)){var Q=R[F];F==="children"?typeof Q=="string"?x.textContent!==Q&&(R.suppressHydrationWarning!==!0&&qh(x.textContent,Q,a),M=["children",Q]):typeof Q=="number"&&x.textContent!==""+Q&&(R.suppressHydrationWarning!==!0&&qh(x.textContent,Q,a),M=["children",""+Q]):r.hasOwnProperty(F)&&Q!=null&&F==="onScroll"&&xn("scroll",x)}switch(d){case"input":wt(x),Ve(x,R,!0);break;case"textarea":wt(x),Y(x);break;case"select":case"option":break;default:typeof R.onClick=="function"&&(x.onclick=Yh)}x=M,l.updateQueue=x,x!==null&&(l.flags|=4)}else{F=M.nodeType===9?M:M.ownerDocument,a==="http://www.w3.org/1999/xhtml"&&(a=Me(d)),a==="http://www.w3.org/1999/xhtml"?d==="script"?(a=F.createElement("div"),a.innerHTML="<script><\/script>",a=a.removeChild(a.firstChild)):typeof x.is=="string"?a=F.createElement(d,{is:x.is}):(a=F.createElement(d),d==="select"&&(F=a,x.multiple?F.multiple=!0:x.size&&(F.size=x.size))):a=F.createElementNS(a,d),a[Ss]=l,a[tf]=x,wM(a,l,!1,!1),l.stateNode=a;e:{switch(F=We(d,x),d){case"dialog":xn("cancel",a),xn("close",a),M=x;break;case"iframe":case"object":case"embed":xn("load",a),M=x;break;case"video":case"audio":for(M=0;M<Qu.length;M++)xn(Qu[M],a);M=x;break;case"source":xn("error",a),M=x;break;case"img":case"image":case"link":xn("error",a),xn("load",a),M=x;break;case"details":xn("toggle",a),M=x;break;case"input":Lt(a,x),M=te(a,x),xn("invalid",a);break;case"option":M=x;break;case"select":a._wrapperState={wasMultiple:!!x.multiple},M=oe({},x,{value:void 0}),xn("invalid",a);break;case"textarea":k(a,x),M=be(a,x),xn("invalid",a);break;default:M=x}nt(d,M),Q=M;for(R in Q)if(Q.hasOwnProperty(R)){var ce=Q[R];R==="style"?ke(a,ce):R==="dangerouslySetInnerHTML"?(ce=ce?ce.__html:void 0,ce!=null&&qe(a,ce)):R==="children"?typeof ce=="string"?(d!=="textarea"||ce!=="")&&Te(a,ce):typeof ce=="number"&&Te(a,""+ce):R!=="suppressContentEditableWarning"&&R!=="suppressHydrationWarning"&&R!=="autoFocus"&&(r.hasOwnProperty(R)?ce!=null&&R==="onScroll"&&xn("scroll",a):ce!=null&&E(a,R,ce,F))}switch(d){case"input":wt(a),Ve(a,x,!1);break;case"textarea":wt(a),Y(a);break;case"option":x.value!=null&&a.setAttribute("value",""+Fe(x.value));break;case"select":a.multiple=!!x.multiple,R=x.value,R!=null?O(a,!!x.multiple,R,!1):x.defaultValue!=null&&O(a,!!x.multiple,x.defaultValue,!0);break;default:typeof M.onClick=="function"&&(a.onclick=Yh)}switch(d){case"button":case"input":case"select":case"textarea":x=!!x.autoFocus;break e;case"img":x=!0;break e;default:x=!1}}x&&(l.flags|=4)}l.ref!==null&&(l.flags|=512,l.flags|=2097152)}return bi(l),null;case 6:if(a&&l.stateNode!=null)AM(a,l,a.memoizedProps,x);else{if(typeof x!="string"&&l.stateNode===null)throw Error(t(166));if(d=Vo(of.current),Vo(Ms.current),nd(l)){if(x=l.stateNode,d=l.memoizedProps,x[Ss]=l,(R=x.nodeValue!==d)&&(a=mr,a!==null))switch(a.tag){case 3:qh(x.nodeValue,d,(a.mode&1)!==0);break;case 5:a.memoizedProps.suppressHydrationWarning!==!0&&qh(x.nodeValue,d,(a.mode&1)!==0)}R&&(l.flags|=4)}else x=(d.nodeType===9?d:d.ownerDocument).createTextNode(x),x[Ss]=l,l.stateNode=x}return bi(l),null;case 13:if(yn(Cn),x=l.memoizedState,a===null||a.memoizedState!==null&&a.memoizedState.dehydrated!==null){if(bn&&gr!==null&&(l.mode&1)!==0&&(l.flags&128)===0)PS(),Jl(),l.flags|=98560,R=!1;else if(R=nd(l),x!==null&&x.dehydrated!==null){if(a===null){if(!R)throw Error(t(318));if(R=l.memoizedState,R=R!==null?R.dehydrated:null,!R)throw Error(t(317));R[Ss]=l}else Jl(),(l.flags&128)===0&&(l.memoizedState=null),l.flags|=4;bi(l),R=!1}else Zr!==null&&(wg(Zr),Zr=null),R=!0;if(!R)return l.flags&65536?l:null}return(l.flags&128)!==0?(l.lanes=d,l):(x=x!==null,x!==(a!==null&&a.memoizedState!==null)&&x&&(l.child.flags|=8192,(l.mode&1)!==0&&(a===null||(Cn.current&1)!==0?Zn===0&&(Zn=3):Rg())),l.updateQueue!==null&&(l.flags|=4),bi(l),null);case 4:return ic(),pg(a,l),a===null&&Ju(l.stateNode.containerInfo),bi(l),null;case 10:return V0(l.type._context),bi(l),null;case 17:return Zi(l.type)&&Zh(),bi(l),null;case 19:if(yn(Cn),R=l.memoizedState,R===null)return bi(l),null;if(x=(l.flags&128)!==0,F=R.rendering,F===null)if(x)hf(R,!1);else{if(Zn!==0||a!==null&&(a.flags&128)!==0)for(a=l.child;a!==null;){if(F=ld(a),F!==null){for(l.flags|=128,hf(R,!1),x=F.updateQueue,x!==null&&(l.updateQueue=x,l.flags|=4),l.subtreeFlags=0,x=d,d=l.child;d!==null;)R=d,a=x,R.flags&=14680066,F=R.alternate,F===null?(R.childLanes=0,R.lanes=a,R.child=null,R.subtreeFlags=0,R.memoizedProps=null,R.memoizedState=null,R.updateQueue=null,R.dependencies=null,R.stateNode=null):(R.childLanes=F.childLanes,R.lanes=F.lanes,R.child=F.child,R.subtreeFlags=0,R.deletions=null,R.memoizedProps=F.memoizedProps,R.memoizedState=F.memoizedState,R.updateQueue=F.updateQueue,R.type=F.type,a=F.dependencies,R.dependencies=a===null?null:{lanes:a.lanes,firstContext:a.firstContext}),d=d.sibling;return _n(Cn,Cn.current&1|2),l.child}a=a.sibling}R.tail!==null&&re()>oc&&(l.flags|=128,x=!0,hf(R,!1),l.lanes=4194304)}else{if(!x)if(a=ld(F),a!==null){if(l.flags|=128,x=!0,d=a.updateQueue,d!==null&&(l.updateQueue=d,l.flags|=4),hf(R,!0),R.tail===null&&R.tailMode==="hidden"&&!F.alternate&&!bn)return bi(l),null}else 2*re()-R.renderingStartTime>oc&&d!==1073741824&&(l.flags|=128,x=!0,hf(R,!1),l.lanes=4194304);R.isBackwards?(F.sibling=l.child,l.child=F):(d=R.last,d!==null?d.sibling=F:l.child=F,R.last=F)}return R.tail!==null?(l=R.tail,R.rendering=l,R.tail=l.sibling,R.renderingStartTime=re(),l.sibling=null,d=Cn.current,_n(Cn,x?d&1|2:d&1),l):(bi(l),null);case 22:case 23:return Ag(),x=l.memoizedState!==null,a!==null&&a.memoizedState!==null!==x&&(l.flags|=8192),x&&(l.mode&1)!==0?(_r&1073741824)!==0&&(bi(l),l.subtreeFlags&6&&(l.flags|=8192)):bi(l),null;case 24:return null;case 25:return null}throw Error(t(156,l.tag))}function OC(a,l){switch(O0(l),l.tag){case 1:return Zi(l.type)&&Zh(),a=l.flags,a&65536?(l.flags=a&-65537|128,l):null;case 3:return ic(),yn(Ki),yn(Ti),Y0(),a=l.flags,(a&65536)!==0&&(a&128)===0?(l.flags=a&-65537|128,l):null;case 5:return j0(l),null;case 13:if(yn(Cn),a=l.memoizedState,a!==null&&a.dehydrated!==null){if(l.alternate===null)throw Error(t(340));Jl()}return a=l.flags,a&65536?(l.flags=a&-65537|128,l):null;case 19:return yn(Cn),null;case 4:return ic(),null;case 10:return V0(l.type._context),null;case 22:case 23:return Ag(),null;case 24:return null;default:return null}}var _d=!1,Ai=!1,FC=typeof WeakSet=="function"?WeakSet:Set,pt=null;function sc(a,l){var d=a.ref;if(d!==null)if(typeof d=="function")try{d(null)}catch(x){Nn(a,l,x)}else d.current=null}function mg(a,l,d){try{d()}catch(x){Nn(a,l,x)}}var RM=!1;function kC(a,l){if(A0=Fh,a=aS(),x0(a)){if("selectionStart"in a)var d={start:a.selectionStart,end:a.selectionEnd};else e:{d=(d=a.ownerDocument)&&d.defaultView||window;var x=d.getSelection&&d.getSelection();if(x&&x.rangeCount!==0){d=x.anchorNode;var M=x.anchorOffset,R=x.focusNode;x=x.focusOffset;try{d.nodeType,R.nodeType}catch{d=null;break e}var F=0,Q=-1,ce=-1,De=0,je=0,Ze=a,Xe=null;t:for(;;){for(var ht;Ze!==d||M!==0&&Ze.nodeType!==3||(Q=F+M),Ze!==R||x!==0&&Ze.nodeType!==3||(ce=F+x),Ze.nodeType===3&&(F+=Ze.nodeValue.length),(ht=Ze.firstChild)!==null;)Xe=Ze,Ze=ht;for(;;){if(Ze===a)break t;if(Xe===d&&++De===M&&(Q=F),Xe===R&&++je===x&&(ce=F),(ht=Ze.nextSibling)!==null)break;Ze=Xe,Xe=Ze.parentNode}Ze=ht}d=Q===-1||ce===-1?null:{start:Q,end:ce}}else d=null}d=d||{start:0,end:0}}else d=null;for(R0={focusedElem:a,selectionRange:d},Fh=!1,pt=l;pt!==null;)if(l=pt,a=l.child,(l.subtreeFlags&1028)!==0&&a!==null)a.return=l,pt=a;else for(;pt!==null;){l=pt;try{var _t=l.alternate;if((l.flags&1024)!==0)switch(l.tag){case 0:case 11:case 15:break;case 1:if(_t!==null){var vt=_t.memoizedProps,kn=_t.memoizedState,we=l.stateNode,pe=we.getSnapshotBeforeUpdate(l.elementType===l.type?vt:Qr(l.type,vt),kn);we.__reactInternalSnapshotBeforeUpdate=pe}break;case 3:var Ae=l.stateNode.containerInfo;Ae.nodeType===1?Ae.textContent="":Ae.nodeType===9&&Ae.documentElement&&Ae.removeChild(Ae.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(rt){Nn(l,l.return,rt)}if(a=l.sibling,a!==null){a.return=l.return,pt=a;break}pt=l.return}return _t=RM,RM=!1,_t}function df(a,l,d){var x=l.updateQueue;if(x=x!==null?x.lastEffect:null,x!==null){var M=x=x.next;do{if((M.tag&a)===a){var R=M.destroy;M.destroy=void 0,R!==void 0&&mg(l,d,R)}M=M.next}while(M!==x)}}function vd(a,l){if(l=l.updateQueue,l=l!==null?l.lastEffect:null,l!==null){var d=l=l.next;do{if((d.tag&a)===a){var x=d.create;d.destroy=x()}d=d.next}while(d!==l)}}function gg(a){var l=a.ref;if(l!==null){var d=a.stateNode;switch(a.tag){case 5:a=d;break;default:a=d}typeof l=="function"?l(a):l.current=a}}function CM(a){var l=a.alternate;l!==null&&(a.alternate=null,CM(l)),a.child=null,a.deletions=null,a.sibling=null,a.tag===5&&(l=a.stateNode,l!==null&&(delete l[Ss],delete l[tf],delete l[I0],delete l[yC],delete l[SC])),a.stateNode=null,a.return=null,a.dependencies=null,a.memoizedProps=null,a.memoizedState=null,a.pendingProps=null,a.stateNode=null,a.updateQueue=null}function PM(a){return a.tag===5||a.tag===3||a.tag===4}function LM(a){e:for(;;){for(;a.sibling===null;){if(a.return===null||PM(a.return))return null;a=a.return}for(a.sibling.return=a.return,a=a.sibling;a.tag!==5&&a.tag!==6&&a.tag!==18;){if(a.flags&2||a.child===null||a.tag===4)continue e;a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}function _g(a,l,d){var x=a.tag;if(x===5||x===6)a=a.stateNode,l?d.nodeType===8?d.parentNode.insertBefore(a,l):d.insertBefore(a,l):(d.nodeType===8?(l=d.parentNode,l.insertBefore(a,d)):(l=d,l.appendChild(a)),d=d._reactRootContainer,d!=null||l.onclick!==null||(l.onclick=Yh));else if(x!==4&&(a=a.child,a!==null))for(_g(a,l,d),a=a.sibling;a!==null;)_g(a,l,d),a=a.sibling}function vg(a,l,d){var x=a.tag;if(x===5||x===6)a=a.stateNode,l?d.insertBefore(a,l):d.appendChild(a);else if(x!==4&&(a=a.child,a!==null))for(vg(a,l,d),a=a.sibling;a!==null;)vg(a,l,d),a=a.sibling}var xi=null,Jr=!1;function Ga(a,l,d){for(d=d.child;d!==null;)IM(a,l,d),d=d.sibling}function IM(a,l,d){if(Qe&&typeof Qe.onCommitFiberUnmount=="function")try{Qe.onCommitFiberUnmount(gt,d)}catch{}switch(d.tag){case 5:Ai||sc(d,l);case 6:var x=xi,M=Jr;xi=null,Ga(a,l,d),xi=x,Jr=M,xi!==null&&(Jr?(a=xi,d=d.stateNode,a.nodeType===8?a.parentNode.removeChild(d):a.removeChild(d)):xi.removeChild(d.stateNode));break;case 18:xi!==null&&(Jr?(a=xi,d=d.stateNode,a.nodeType===8?L0(a.parentNode,d):a.nodeType===1&&L0(a,d),Wu(a)):L0(xi,d.stateNode));break;case 4:x=xi,M=Jr,xi=d.stateNode.containerInfo,Jr=!0,Ga(a,l,d),xi=x,Jr=M;break;case 0:case 11:case 14:case 15:if(!Ai&&(x=d.updateQueue,x!==null&&(x=x.lastEffect,x!==null))){M=x=x.next;do{var R=M,F=R.destroy;R=R.tag,F!==void 0&&((R&2)!==0||(R&4)!==0)&&mg(d,l,F),M=M.next}while(M!==x)}Ga(a,l,d);break;case 1:if(!Ai&&(sc(d,l),x=d.stateNode,typeof x.componentWillUnmount=="function"))try{x.props=d.memoizedProps,x.state=d.memoizedState,x.componentWillUnmount()}catch(Q){Nn(d,l,Q)}Ga(a,l,d);break;case 21:Ga(a,l,d);break;case 22:d.mode&1?(Ai=(x=Ai)||d.memoizedState!==null,Ga(a,l,d),Ai=x):Ga(a,l,d);break;default:Ga(a,l,d)}}function DM(a){var l=a.updateQueue;if(l!==null){a.updateQueue=null;var d=a.stateNode;d===null&&(d=a.stateNode=new FC),l.forEach(function(x){var M=jC.bind(null,a,x);d.has(x)||(d.add(x),x.then(M,M))})}}function es(a,l){var d=l.deletions;if(d!==null)for(var x=0;x<d.length;x++){var M=d[x];try{var R=a,F=l,Q=F;e:for(;Q!==null;){switch(Q.tag){case 5:xi=Q.stateNode,Jr=!1;break e;case 3:xi=Q.stateNode.containerInfo,Jr=!0;break e;case 4:xi=Q.stateNode.containerInfo,Jr=!0;break e}Q=Q.return}if(xi===null)throw Error(t(160));IM(R,F,M),xi=null,Jr=!1;var ce=M.alternate;ce!==null&&(ce.return=null),M.return=null}catch(De){Nn(M,l,De)}}if(l.subtreeFlags&12854)for(l=l.child;l!==null;)NM(l,a),l=l.sibling}function NM(a,l){var d=a.alternate,x=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:if(es(l,a),Ts(a),x&4){try{df(3,a,a.return),vd(3,a)}catch(vt){Nn(a,a.return,vt)}try{df(5,a,a.return)}catch(vt){Nn(a,a.return,vt)}}break;case 1:es(l,a),Ts(a),x&512&&d!==null&&sc(d,d.return);break;case 5:if(es(l,a),Ts(a),x&512&&d!==null&&sc(d,d.return),a.flags&32){var M=a.stateNode;try{Te(M,"")}catch(vt){Nn(a,a.return,vt)}}if(x&4&&(M=a.stateNode,M!=null)){var R=a.memoizedProps,F=d!==null?d.memoizedProps:R,Q=a.type,ce=a.updateQueue;if(a.updateQueue=null,ce!==null)try{Q==="input"&&R.type==="radio"&&R.name!=null&&st(M,R),We(Q,F);var De=We(Q,R);for(F=0;F<ce.length;F+=2){var je=ce[F],Ze=ce[F+1];je==="style"?ke(M,Ze):je==="dangerouslySetInnerHTML"?qe(M,Ze):je==="children"?Te(M,Ze):E(M,je,Ze,De)}switch(Q){case"input":Pt(M,R);break;case"textarea":I(M,R);break;case"select":var Xe=M._wrapperState.wasMultiple;M._wrapperState.wasMultiple=!!R.multiple;var ht=R.value;ht!=null?O(M,!!R.multiple,ht,!1):Xe!==!!R.multiple&&(R.defaultValue!=null?O(M,!!R.multiple,R.defaultValue,!0):O(M,!!R.multiple,R.multiple?[]:"",!1))}M[tf]=R}catch(vt){Nn(a,a.return,vt)}}break;case 6:if(es(l,a),Ts(a),x&4){if(a.stateNode===null)throw Error(t(162));M=a.stateNode,R=a.memoizedProps;try{M.nodeValue=R}catch(vt){Nn(a,a.return,vt)}}break;case 3:if(es(l,a),Ts(a),x&4&&d!==null&&d.memoizedState.isDehydrated)try{Wu(l.containerInfo)}catch(vt){Nn(a,a.return,vt)}break;case 4:es(l,a),Ts(a);break;case 13:es(l,a),Ts(a),M=a.child,M.flags&8192&&(R=M.memoizedState!==null,M.stateNode.isHidden=R,!R||M.alternate!==null&&M.alternate.memoizedState!==null||(Sg=re())),x&4&&DM(a);break;case 22:if(je=d!==null&&d.memoizedState!==null,a.mode&1?(Ai=(De=Ai)||je,es(l,a),Ai=De):es(l,a),Ts(a),x&8192){if(De=a.memoizedState!==null,(a.stateNode.isHidden=De)&&!je&&(a.mode&1)!==0)for(pt=a,je=a.child;je!==null;){for(Ze=pt=je;pt!==null;){switch(Xe=pt,ht=Xe.child,Xe.tag){case 0:case 11:case 14:case 15:df(4,Xe,Xe.return);break;case 1:sc(Xe,Xe.return);var _t=Xe.stateNode;if(typeof _t.componentWillUnmount=="function"){x=Xe,d=Xe.return;try{l=x,_t.props=l.memoizedProps,_t.state=l.memoizedState,_t.componentWillUnmount()}catch(vt){Nn(x,d,vt)}}break;case 5:sc(Xe,Xe.return);break;case 22:if(Xe.memoizedState!==null){FM(Ze);continue}}ht!==null?(ht.return=Xe,pt=ht):FM(Ze)}je=je.sibling}e:for(je=null,Ze=a;;){if(Ze.tag===5){if(je===null){je=Ze;try{M=Ze.stateNode,De?(R=M.style,typeof R.setProperty=="function"?R.setProperty("display","none","important"):R.display="none"):(Q=Ze.stateNode,ce=Ze.memoizedProps.style,F=ce!=null&&ce.hasOwnProperty("display")?ce.display:null,Q.style.display=Ie("display",F))}catch(vt){Nn(a,a.return,vt)}}}else if(Ze.tag===6){if(je===null)try{Ze.stateNode.nodeValue=De?"":Ze.memoizedProps}catch(vt){Nn(a,a.return,vt)}}else if((Ze.tag!==22&&Ze.tag!==23||Ze.memoizedState===null||Ze===a)&&Ze.child!==null){Ze.child.return=Ze,Ze=Ze.child;continue}if(Ze===a)break e;for(;Ze.sibling===null;){if(Ze.return===null||Ze.return===a)break e;je===Ze&&(je=null),Ze=Ze.return}je===Ze&&(je=null),Ze.sibling.return=Ze.return,Ze=Ze.sibling}}break;case 19:es(l,a),Ts(a),x&4&&DM(a);break;case 21:break;default:es(l,a),Ts(a)}}function Ts(a){var l=a.flags;if(l&2){try{e:{for(var d=a.return;d!==null;){if(PM(d)){var x=d;break e}d=d.return}throw Error(t(160))}switch(x.tag){case 5:var M=x.stateNode;x.flags&32&&(Te(M,""),x.flags&=-33);var R=LM(a);vg(a,R,M);break;case 3:case 4:var F=x.stateNode.containerInfo,Q=LM(a);_g(a,Q,F);break;default:throw Error(t(161))}}catch(ce){Nn(a,a.return,ce)}a.flags&=-3}l&4096&&(a.flags&=-4097)}function BC(a,l,d){pt=a,UM(a)}function UM(a,l,d){for(var x=(a.mode&1)!==0;pt!==null;){var M=pt,R=M.child;if(M.tag===22&&x){var F=M.memoizedState!==null||_d;if(!F){var Q=M.alternate,ce=Q!==null&&Q.memoizedState!==null||Ai;Q=_d;var De=Ai;if(_d=F,(Ai=ce)&&!De)for(pt=M;pt!==null;)F=pt,ce=F.child,F.tag===22&&F.memoizedState!==null?kM(M):ce!==null?(ce.return=F,pt=ce):kM(M);for(;R!==null;)pt=R,UM(R),R=R.sibling;pt=M,_d=Q,Ai=De}OM(a)}else(M.subtreeFlags&8772)!==0&&R!==null?(R.return=M,pt=R):OM(a)}}function OM(a){for(;pt!==null;){var l=pt;if((l.flags&8772)!==0){var d=l.alternate;try{if((l.flags&8772)!==0)switch(l.tag){case 0:case 11:case 15:Ai||vd(5,l);break;case 1:var x=l.stateNode;if(l.flags&4&&!Ai)if(d===null)x.componentDidMount();else{var M=l.elementType===l.type?d.memoizedProps:Qr(l.type,d.memoizedProps);x.componentDidUpdate(M,d.memoizedState,x.__reactInternalSnapshotBeforeUpdate)}var R=l.updateQueue;R!==null&&FS(l,R,x);break;case 3:var F=l.updateQueue;if(F!==null){if(d=null,l.child!==null)switch(l.child.tag){case 5:d=l.child.stateNode;break;case 1:d=l.child.stateNode}FS(l,F,d)}break;case 5:var Q=l.stateNode;if(d===null&&l.flags&4){d=Q;var ce=l.memoizedProps;switch(l.type){case"button":case"input":case"select":case"textarea":ce.autoFocus&&d.focus();break;case"img":ce.src&&(d.src=ce.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(l.memoizedState===null){var De=l.alternate;if(De!==null){var je=De.memoizedState;if(je!==null){var Ze=je.dehydrated;Ze!==null&&Wu(Ze)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}Ai||l.flags&512&&gg(l)}catch(Xe){Nn(l,l.return,Xe)}}if(l===a){pt=null;break}if(d=l.sibling,d!==null){d.return=l.return,pt=d;break}pt=l.return}}function FM(a){for(;pt!==null;){var l=pt;if(l===a){pt=null;break}var d=l.sibling;if(d!==null){d.return=l.return,pt=d;break}pt=l.return}}function kM(a){for(;pt!==null;){var l=pt;try{switch(l.tag){case 0:case 11:case 15:var d=l.return;try{vd(4,l)}catch(ce){Nn(l,d,ce)}break;case 1:var x=l.stateNode;if(typeof x.componentDidMount=="function"){var M=l.return;try{x.componentDidMount()}catch(ce){Nn(l,M,ce)}}var R=l.return;try{gg(l)}catch(ce){Nn(l,R,ce)}break;case 5:var F=l.return;try{gg(l)}catch(ce){Nn(l,F,ce)}}}catch(ce){Nn(l,l.return,ce)}if(l===a){pt=null;break}var Q=l.sibling;if(Q!==null){Q.return=l.return,pt=Q;break}pt=l.return}}var zC=Math.ceil,xd=T.ReactCurrentDispatcher,xg=T.ReactCurrentOwner,Br=T.ReactCurrentBatchConfig,Jt=0,li=null,Vn=null,yi=0,_r=0,ac=ka(0),Zn=0,pf=null,Wo=0,yd=0,yg=0,mf=null,Ji=null,Sg=0,oc=1/0,Qs=null,Sd=!1,Mg=null,Wa=null,Md=!1,Xa=null,Ed=0,gf=0,Eg=null,Td=-1,wd=0;function ki(){return(Jt&6)!==0?re():Td!==-1?Td:Td=re()}function $a(a){return(a.mode&1)===0?1:(Jt&2)!==0&&yi!==0?yi&-yi:EC.transition!==null?(wd===0&&(wd=on()),wd):(a=Qt,a!==0||(a=window.event,a=a===void 0?16:zy(a.type)),a)}function ts(a,l,d,x){if(50<gf)throw gf=0,Eg=null,Error(t(185));si(a,d,x),((Jt&2)===0||a!==li)&&(a===li&&((Jt&2)===0&&(yd|=d),Zn===4&&ja(a,yi)),er(a,x),d===1&&Jt===0&&(l.mode&1)===0&&(oc=re()+500,Jh&&za()))}function er(a,l){var d=a.callbackNode;hn(a,l);var x=mn(a,a===li?yi:0);if(x===0)d!==null&&U(d),a.callbackNode=null,a.callbackPriority=0;else if(l=x&-x,a.callbackPriority!==l){if(d!=null&&U(d),l===1)a.tag===0?MC(zM.bind(null,a)):wS(zM.bind(null,a)),vC(function(){(Jt&6)===0&&za()}),d=null;else{switch(ys(x)){case 1:d=Oe;break;case 4:d=Be;break;case 16:d=Ke;break;case 536870912:d=ut;break;default:d=Ke}d=qM(d,BM.bind(null,a))}a.callbackPriority=l,a.callbackNode=d}}function BM(a,l){if(Td=-1,wd=0,(Jt&6)!==0)throw Error(t(327));var d=a.callbackNode;if(lc()&&a.callbackNode!==d)return null;var x=mn(a,a===li?yi:0);if(x===0)return null;if((x&30)!==0||(x&a.expiredLanes)!==0||l)l=bd(a,x);else{l=x;var M=Jt;Jt|=2;var R=VM();(li!==a||yi!==l)&&(Qs=null,oc=re()+500,$o(a,l));do try{GC();break}catch(Q){HM(a,Q)}while(!0);H0(),xd.current=R,Jt=M,Vn!==null?l=0:(li=null,yi=0,l=Zn)}if(l!==0){if(l===2&&(M=dr(a),M!==0&&(x=M,l=Tg(a,M))),l===1)throw d=pf,$o(a,0),ja(a,x),er(a,re()),d;if(l===6)ja(a,x);else{if(M=a.current.alternate,(x&30)===0&&!HC(M)&&(l=bd(a,x),l===2&&(R=dr(a),R!==0&&(x=R,l=Tg(a,R))),l===1))throw d=pf,$o(a,0),ja(a,x),er(a,re()),d;switch(a.finishedWork=M,a.finishedLanes=x,l){case 0:case 1:throw Error(t(345));case 2:jo(a,Ji,Qs);break;case 3:if(ja(a,x),(x&130023424)===x&&(l=Sg+500-re(),10<l)){if(mn(a,0)!==0)break;if(M=a.suspendedLanes,(M&x)!==x){ki(),a.pingedLanes|=a.suspendedLanes&M;break}a.timeoutHandle=P0(jo.bind(null,a,Ji,Qs),l);break}jo(a,Ji,Qs);break;case 4:if(ja(a,x),(x&4194240)===x)break;for(l=a.eventTimes,M=-1;0<x;){var F=31-Et(x);R=1<<F,F=l[F],F>M&&(M=F),x&=~R}if(x=M,x=re()-x,x=(120>x?120:480>x?480:1080>x?1080:1920>x?1920:3e3>x?3e3:4320>x?4320:1960*zC(x/1960))-x,10<x){a.timeoutHandle=P0(jo.bind(null,a,Ji,Qs),x);break}jo(a,Ji,Qs);break;case 5:jo(a,Ji,Qs);break;default:throw Error(t(329))}}}return er(a,re()),a.callbackNode===d?BM.bind(null,a):null}function Tg(a,l){var d=mf;return a.current.memoizedState.isDehydrated&&($o(a,l).flags|=256),a=bd(a,l),a!==2&&(l=Ji,Ji=d,l!==null&&wg(l)),a}function wg(a){Ji===null?Ji=a:Ji.push.apply(Ji,a)}function HC(a){for(var l=a;;){if(l.flags&16384){var d=l.updateQueue;if(d!==null&&(d=d.stores,d!==null))for(var x=0;x<d.length;x++){var M=d[x],R=M.getSnapshot;M=M.value;try{if(!Kr(R(),M))return!1}catch{return!1}}}if(d=l.child,l.subtreeFlags&16384&&d!==null)d.return=l,l=d;else{if(l===a)break;for(;l.sibling===null;){if(l.return===null||l.return===a)return!0;l=l.return}l.sibling.return=l.return,l=l.sibling}}return!0}function ja(a,l){for(l&=~yg,l&=~yd,a.suspendedLanes|=l,a.pingedLanes&=~l,a=a.expirationTimes;0<l;){var d=31-Et(l),x=1<<d;a[d]=-1,l&=~x}}function zM(a){if((Jt&6)!==0)throw Error(t(327));lc();var l=mn(a,0);if((l&1)===0)return er(a,re()),null;var d=bd(a,l);if(a.tag!==0&&d===2){var x=dr(a);x!==0&&(l=x,d=Tg(a,x))}if(d===1)throw d=pf,$o(a,0),ja(a,l),er(a,re()),d;if(d===6)throw Error(t(345));return a.finishedWork=a.current.alternate,a.finishedLanes=l,jo(a,Ji,Qs),er(a,re()),null}function bg(a,l){var d=Jt;Jt|=1;try{return a(l)}finally{Jt=d,Jt===0&&(oc=re()+500,Jh&&za())}}function Xo(a){Xa!==null&&Xa.tag===0&&(Jt&6)===0&&lc();var l=Jt;Jt|=1;var d=Br.transition,x=Qt;try{if(Br.transition=null,Qt=1,a)return a()}finally{Qt=x,Br.transition=d,Jt=l,(Jt&6)===0&&za()}}function Ag(){_r=ac.current,yn(ac)}function $o(a,l){a.finishedWork=null,a.finishedLanes=0;var d=a.timeoutHandle;if(d!==-1&&(a.timeoutHandle=-1,_C(d)),Vn!==null)for(d=Vn.return;d!==null;){var x=d;switch(O0(x),x.tag){case 1:x=x.type.childContextTypes,x!=null&&Zh();break;case 3:ic(),yn(Ki),yn(Ti),Y0();break;case 5:j0(x);break;case 4:ic();break;case 13:yn(Cn);break;case 19:yn(Cn);break;case 10:V0(x.type._context);break;case 22:case 23:Ag()}d=d.return}if(li=a,Vn=a=qa(a.current,null),yi=_r=l,Zn=0,pf=null,yg=yd=Wo=0,Ji=mf=null,Ho!==null){for(l=0;l<Ho.length;l++)if(d=Ho[l],x=d.interleaved,x!==null){d.interleaved=null;var M=x.next,R=d.pending;if(R!==null){var F=R.next;R.next=M,x.next=F}d.pending=x}Ho=null}return a}function HM(a,l){do{var d=Vn;try{if(H0(),cd.current=dd,ud){for(var x=Pn.memoizedState;x!==null;){var M=x.queue;M!==null&&(M.pending=null),x=x.next}ud=!1}if(Go=0,oi=Kn=Pn=null,lf=!1,cf=0,xg.current=null,d===null||d.return===null){Zn=1,pf=l,Vn=null;break}e:{var R=a,F=d.return,Q=d,ce=l;if(l=yi,Q.flags|=32768,ce!==null&&typeof ce=="object"&&typeof ce.then=="function"){var De=ce,je=Q,Ze=je.tag;if((je.mode&1)===0&&(Ze===0||Ze===11||Ze===15)){var Xe=je.alternate;Xe?(je.updateQueue=Xe.updateQueue,je.memoizedState=Xe.memoizedState,je.lanes=Xe.lanes):(je.updateQueue=null,je.memoizedState=null)}var ht=hM(F);if(ht!==null){ht.flags&=-257,dM(ht,F,Q,R,l),ht.mode&1&&fM(R,De,l),l=ht,ce=De;var _t=l.updateQueue;if(_t===null){var vt=new Set;vt.add(ce),l.updateQueue=vt}else _t.add(ce);break e}else{if((l&1)===0){fM(R,De,l),Rg();break e}ce=Error(t(426))}}else if(bn&&Q.mode&1){var kn=hM(F);if(kn!==null){(kn.flags&65536)===0&&(kn.flags|=256),dM(kn,F,Q,R,l),B0(rc(ce,Q));break e}}R=ce=rc(ce,Q),Zn!==4&&(Zn=2),mf===null?mf=[R]:mf.push(R),R=F;do{switch(R.tag){case 3:R.flags|=65536,l&=-l,R.lanes|=l;var we=cM(R,ce,l);OS(R,we);break e;case 1:Q=ce;var pe=R.type,Ae=R.stateNode;if((R.flags&128)===0&&(typeof pe.getDerivedStateFromError=="function"||Ae!==null&&typeof Ae.componentDidCatch=="function"&&(Wa===null||!Wa.has(Ae)))){R.flags|=65536,l&=-l,R.lanes|=l;var rt=uM(R,Q,l);OS(R,rt);break e}}R=R.return}while(R!==null)}WM(d)}catch(yt){l=yt,Vn===d&&d!==null&&(Vn=d=d.return);continue}break}while(!0)}function VM(){var a=xd.current;return xd.current=dd,a===null?dd:a}function Rg(){(Zn===0||Zn===3||Zn===2)&&(Zn=4),li===null||(Wo&268435455)===0&&(yd&268435455)===0||ja(li,yi)}function bd(a,l){var d=Jt;Jt|=2;var x=VM();(li!==a||yi!==l)&&(Qs=null,$o(a,l));do try{VC();break}catch(M){HM(a,M)}while(!0);if(H0(),Jt=d,xd.current=x,Vn!==null)throw Error(t(261));return li=null,yi=0,Zn}function VC(){for(;Vn!==null;)GM(Vn)}function GC(){for(;Vn!==null&&!J();)GM(Vn)}function GM(a){var l=jM(a.alternate,a,_r);a.memoizedProps=a.pendingProps,l===null?WM(a):Vn=l,xg.current=null}function WM(a){var l=a;do{var d=l.alternate;if(a=l.return,(l.flags&32768)===0){if(d=UC(d,l,_r),d!==null){Vn=d;return}}else{if(d=OC(d,l),d!==null){d.flags&=32767,Vn=d;return}if(a!==null)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{Zn=6,Vn=null;return}}if(l=l.sibling,l!==null){Vn=l;return}Vn=l=a}while(l!==null);Zn===0&&(Zn=5)}function jo(a,l,d){var x=Qt,M=Br.transition;try{Br.transition=null,Qt=1,WC(a,l,d,x)}finally{Br.transition=M,Qt=x}return null}function WC(a,l,d,x){do lc();while(Xa!==null);if((Jt&6)!==0)throw Error(t(327));d=a.finishedWork;var M=a.finishedLanes;if(d===null)return null;if(a.finishedWork=null,a.finishedLanes=0,d===a.current)throw Error(t(177));a.callbackNode=null,a.callbackPriority=0;var R=d.lanes|d.childLanes;if(vi(a,R),a===li&&(Vn=li=null,yi=0),(d.subtreeFlags&2064)===0&&(d.flags&2064)===0||Md||(Md=!0,qM(Ke,function(){return lc(),null})),R=(d.flags&15990)!==0,(d.subtreeFlags&15990)!==0||R){R=Br.transition,Br.transition=null;var F=Qt;Qt=1;var Q=Jt;Jt|=4,xg.current=null,kC(a,d),NM(d,a),uC(R0),Fh=!!A0,R0=A0=null,a.current=d,BC(d),ue(),Jt=Q,Qt=F,Br.transition=R}else a.current=d;if(Md&&(Md=!1,Xa=a,Ed=M),R=a.pendingLanes,R===0&&(Wa=null),et(d.stateNode),er(a,re()),l!==null)for(x=a.onRecoverableError,d=0;d<l.length;d++)M=l[d],x(M.value,{componentStack:M.stack,digest:M.digest});if(Sd)throw Sd=!1,a=Mg,Mg=null,a;return(Ed&1)!==0&&a.tag!==0&&lc(),R=a.pendingLanes,(R&1)!==0?a===Eg?gf++:(gf=0,Eg=a):gf=0,za(),null}function lc(){if(Xa!==null){var a=ys(Ed),l=Br.transition,d=Qt;try{if(Br.transition=null,Qt=16>a?16:a,Xa===null)var x=!1;else{if(a=Xa,Xa=null,Ed=0,(Jt&6)!==0)throw Error(t(331));var M=Jt;for(Jt|=4,pt=a.current;pt!==null;){var R=pt,F=R.child;if((pt.flags&16)!==0){var Q=R.deletions;if(Q!==null){for(var ce=0;ce<Q.length;ce++){var De=Q[ce];for(pt=De;pt!==null;){var je=pt;switch(je.tag){case 0:case 11:case 15:df(8,je,R)}var Ze=je.child;if(Ze!==null)Ze.return=je,pt=Ze;else for(;pt!==null;){je=pt;var Xe=je.sibling,ht=je.return;if(CM(je),je===De){pt=null;break}if(Xe!==null){Xe.return=ht,pt=Xe;break}pt=ht}}}var _t=R.alternate;if(_t!==null){var vt=_t.child;if(vt!==null){_t.child=null;do{var kn=vt.sibling;vt.sibling=null,vt=kn}while(vt!==null)}}pt=R}}if((R.subtreeFlags&2064)!==0&&F!==null)F.return=R,pt=F;else e:for(;pt!==null;){if(R=pt,(R.flags&2048)!==0)switch(R.tag){case 0:case 11:case 15:df(9,R,R.return)}var we=R.sibling;if(we!==null){we.return=R.return,pt=we;break e}pt=R.return}}var pe=a.current;for(pt=pe;pt!==null;){F=pt;var Ae=F.child;if((F.subtreeFlags&2064)!==0&&Ae!==null)Ae.return=F,pt=Ae;else e:for(F=pe;pt!==null;){if(Q=pt,(Q.flags&2048)!==0)try{switch(Q.tag){case 0:case 11:case 15:vd(9,Q)}}catch(yt){Nn(Q,Q.return,yt)}if(Q===F){pt=null;break e}var rt=Q.sibling;if(rt!==null){rt.return=Q.return,pt=rt;break e}pt=Q.return}}if(Jt=M,za(),Qe&&typeof Qe.onPostCommitFiberRoot=="function")try{Qe.onPostCommitFiberRoot(gt,a)}catch{}x=!0}return x}finally{Qt=d,Br.transition=l}}return!1}function XM(a,l,d){l=rc(d,l),l=cM(a,l,1),a=Va(a,l,1),l=ki(),a!==null&&(si(a,1,l),er(a,l))}function Nn(a,l,d){if(a.tag===3)XM(a,a,d);else for(;l!==null;){if(l.tag===3){XM(l,a,d);break}else if(l.tag===1){var x=l.stateNode;if(typeof l.type.getDerivedStateFromError=="function"||typeof x.componentDidCatch=="function"&&(Wa===null||!Wa.has(x))){a=rc(d,a),a=uM(l,a,1),l=Va(l,a,1),a=ki(),l!==null&&(si(l,1,a),er(l,a));break}}l=l.return}}function XC(a,l,d){var x=a.pingCache;x!==null&&x.delete(l),l=ki(),a.pingedLanes|=a.suspendedLanes&d,li===a&&(yi&d)===d&&(Zn===4||Zn===3&&(yi&130023424)===yi&&500>re()-Sg?$o(a,0):yg|=d),er(a,l)}function $M(a,l){l===0&&((a.mode&1)===0?l=1:(l=tn,tn<<=1,(tn&130023424)===0&&(tn=4194304)));var d=ki();a=Ys(a,l),a!==null&&(si(a,l,d),er(a,d))}function $C(a){var l=a.memoizedState,d=0;l!==null&&(d=l.retryLane),$M(a,d)}function jC(a,l){var d=0;switch(a.tag){case 13:var x=a.stateNode,M=a.memoizedState;M!==null&&(d=M.retryLane);break;case 19:x=a.stateNode;break;default:throw Error(t(314))}x!==null&&x.delete(l),$M(a,d)}var jM;jM=function(a,l,d){if(a!==null)if(a.memoizedProps!==l.pendingProps||Ki.current)Qi=!0;else{if((a.lanes&d)===0&&(l.flags&128)===0)return Qi=!1,NC(a,l,d);Qi=(a.flags&131072)!==0}else Qi=!1,bn&&(l.flags&1048576)!==0&&bS(l,td,l.index);switch(l.lanes=0,l.tag){case 2:var x=l.type;gd(a,l),a=l.pendingProps;var M=Kl(l,Ti.current);nc(l,d),M=Q0(null,l,x,a,M,d);var R=J0();return l.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(l.tag=1,l.memoizedState=null,l.updateQueue=null,Zi(x)?(R=!0,Qh(l)):R=!1,l.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,X0(l),M.updater=pd,l.stateNode=M,M._reactInternals=l,sg(l,x,a,d),l=cg(null,l,x,!0,R,d)):(l.tag=0,bn&&R&&U0(l),Fi(null,l,M,d),l=l.child),l;case 16:x=l.elementType;e:{switch(gd(a,l),a=l.pendingProps,M=x._init,x=M(x._payload),l.type=x,M=l.tag=YC(x),a=Qr(x,a),M){case 0:l=lg(null,l,x,a,d);break e;case 1:l=xM(null,l,x,a,d);break e;case 11:l=pM(null,l,x,a,d);break e;case 14:l=mM(null,l,x,Qr(x.type,a),d);break e}throw Error(t(306,x,""))}return l;case 0:return x=l.type,M=l.pendingProps,M=l.elementType===x?M:Qr(x,M),lg(a,l,x,M,d);case 1:return x=l.type,M=l.pendingProps,M=l.elementType===x?M:Qr(x,M),xM(a,l,x,M,d);case 3:e:{if(yM(l),a===null)throw Error(t(387));x=l.pendingProps,R=l.memoizedState,M=R.element,US(a,l),od(l,x,null,d);var F=l.memoizedState;if(x=F.element,R.isDehydrated)if(R={element:x,isDehydrated:!1,cache:F.cache,pendingSuspenseBoundaries:F.pendingSuspenseBoundaries,transitions:F.transitions},l.updateQueue.baseState=R,l.memoizedState=R,l.flags&256){M=rc(Error(t(423)),l),l=SM(a,l,x,d,M);break e}else if(x!==M){M=rc(Error(t(424)),l),l=SM(a,l,x,d,M);break e}else for(gr=Fa(l.stateNode.containerInfo.firstChild),mr=l,bn=!0,Zr=null,d=DS(l,null,x,d),l.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling;else{if(Jl(),x===M){l=Zs(a,l,d);break e}Fi(a,l,x,d)}l=l.child}return l;case 5:return kS(l),a===null&&k0(l),x=l.type,M=l.pendingProps,R=a!==null?a.memoizedProps:null,F=M.children,C0(x,M)?F=null:R!==null&&C0(x,R)&&(l.flags|=32),vM(a,l),Fi(a,l,F,d),l.child;case 6:return a===null&&k0(l),null;case 13:return MM(a,l,d);case 4:return $0(l,l.stateNode.containerInfo),x=l.pendingProps,a===null?l.child=ec(l,null,x,d):Fi(a,l,x,d),l.child;case 11:return x=l.type,M=l.pendingProps,M=l.elementType===x?M:Qr(x,M),pM(a,l,x,M,d);case 7:return Fi(a,l,l.pendingProps,d),l.child;case 8:return Fi(a,l,l.pendingProps.children,d),l.child;case 12:return Fi(a,l,l.pendingProps.children,d),l.child;case 10:e:{if(x=l.type._context,M=l.pendingProps,R=l.memoizedProps,F=M.value,_n(rd,x._currentValue),x._currentValue=F,R!==null)if(Kr(R.value,F)){if(R.children===M.children&&!Ki.current){l=Zs(a,l,d);break e}}else for(R=l.child,R!==null&&(R.return=l);R!==null;){var Q=R.dependencies;if(Q!==null){F=R.child;for(var ce=Q.firstContext;ce!==null;){if(ce.context===x){if(R.tag===1){ce=Ks(-1,d&-d),ce.tag=2;var De=R.updateQueue;if(De!==null){De=De.shared;var je=De.pending;je===null?ce.next=ce:(ce.next=je.next,je.next=ce),De.pending=ce}}R.lanes|=d,ce=R.alternate,ce!==null&&(ce.lanes|=d),G0(R.return,d,l),Q.lanes|=d;break}ce=ce.next}}else if(R.tag===10)F=R.type===l.type?null:R.child;else if(R.tag===18){if(F=R.return,F===null)throw Error(t(341));F.lanes|=d,Q=F.alternate,Q!==null&&(Q.lanes|=d),G0(F,d,l),F=R.sibling}else F=R.child;if(F!==null)F.return=R;else for(F=R;F!==null;){if(F===l){F=null;break}if(R=F.sibling,R!==null){R.return=F.return,F=R;break}F=F.return}R=F}Fi(a,l,M.children,d),l=l.child}return l;case 9:return M=l.type,x=l.pendingProps.children,nc(l,d),M=Fr(M),x=x(M),l.flags|=1,Fi(a,l,x,d),l.child;case 14:return x=l.type,M=Qr(x,l.pendingProps),M=Qr(x.type,M),mM(a,l,x,M,d);case 15:return gM(a,l,l.type,l.pendingProps,d);case 17:return x=l.type,M=l.pendingProps,M=l.elementType===x?M:Qr(x,M),gd(a,l),l.tag=1,Zi(x)?(a=!0,Qh(l)):a=!1,nc(l,d),oM(l,x,M),sg(l,x,M,d),cg(null,l,x,!0,a,d);case 19:return TM(a,l,d);case 22:return _M(a,l,d)}throw Error(t(156,l.tag))};function qM(a,l){return Se(a,l)}function qC(a,l,d,x){this.tag=a,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=l,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=x,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function zr(a,l,d,x){return new qC(a,l,d,x)}function Cg(a){return a=a.prototype,!(!a||!a.isReactComponent)}function YC(a){if(typeof a=="function")return Cg(a)?1:0;if(a!=null){if(a=a.$$typeof,a===X)return 11;if(a===Z)return 14}return 2}function qa(a,l){var d=a.alternate;return d===null?(d=zr(a.tag,l,a.key,a.mode),d.elementType=a.elementType,d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=l,d.type=a.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=a.flags&14680064,d.childLanes=a.childLanes,d.lanes=a.lanes,d.child=a.child,d.memoizedProps=a.memoizedProps,d.memoizedState=a.memoizedState,d.updateQueue=a.updateQueue,l=a.dependencies,d.dependencies=l===null?null:{lanes:l.lanes,firstContext:l.firstContext},d.sibling=a.sibling,d.index=a.index,d.ref=a.ref,d}function Ad(a,l,d,x,M,R){var F=2;if(x=a,typeof a=="function")Cg(a)&&(F=1);else if(typeof a=="string")F=5;else e:switch(a){case P:return qo(d.children,M,R,l);case N:F=8,M|=8;break;case A:return a=zr(12,d,l,M|2),a.elementType=A,a.lanes=R,a;case z:return a=zr(13,d,l,M),a.elementType=z,a.lanes=R,a;case G:return a=zr(19,d,l,M),a.elementType=G,a.lanes=R,a;case K:return Rd(d,M,R,l);default:if(typeof a=="object"&&a!==null)switch(a.$$typeof){case w:F=10;break e;case D:F=9;break e;case X:F=11;break e;case Z:F=14;break e;case q:F=16,x=null;break e}throw Error(t(130,a==null?a:typeof a,""))}return l=zr(F,d,l,M),l.elementType=a,l.type=x,l.lanes=R,l}function qo(a,l,d,x){return a=zr(7,a,x,l),a.lanes=d,a}function Rd(a,l,d,x){return a=zr(22,a,x,l),a.elementType=K,a.lanes=d,a.stateNode={isHidden:!1},a}function Pg(a,l,d){return a=zr(6,a,null,l),a.lanes=d,a}function Lg(a,l,d){return l=zr(4,a.children!==null?a.children:[],a.key,l),l.lanes=d,l.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation},l}function KC(a,l,d,x,M){this.tag=l,this.containerInfo=a,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Yn(0),this.expirationTimes=Yn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Yn(0),this.identifierPrefix=x,this.onRecoverableError=M,this.mutableSourceEagerHydrationData=null}function Ig(a,l,d,x,M,R,F,Q,ce){return a=new KC(a,l,d,Q,ce),l===1?(l=1,R===!0&&(l|=8)):l=0,R=zr(3,null,null,l),a.current=R,R.stateNode=a,R.memoizedState={element:x,isDehydrated:d,cache:null,transitions:null,pendingSuspenseBoundaries:null},X0(R),a}function ZC(a,l,d){var x=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:C,key:x==null?null:""+x,children:a,containerInfo:l,implementation:d}}function YM(a){if(!a)return Ba;a=a._reactInternals;e:{if(Dr(a)!==a||a.tag!==1)throw Error(t(170));var l=a;do{switch(l.tag){case 3:l=l.stateNode.context;break e;case 1:if(Zi(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break e}}l=l.return}while(l!==null);throw Error(t(171))}if(a.tag===1){var d=a.type;if(Zi(d))return ES(a,d,l)}return l}function KM(a,l,d,x,M,R,F,Q,ce){return a=Ig(d,x,!0,a,M,R,F,Q,ce),a.context=YM(null),d=a.current,x=ki(),M=$a(d),R=Ks(x,M),R.callback=l??null,Va(d,R,M),a.current.lanes=M,si(a,M,x),er(a,x),a}function Cd(a,l,d,x){var M=l.current,R=ki(),F=$a(M);return d=YM(d),l.context===null?l.context=d:l.pendingContext=d,l=Ks(R,F),l.payload={element:a},x=x===void 0?null:x,x!==null&&(l.callback=x),a=Va(M,l,F),a!==null&&(ts(a,M,F,R),ad(a,M,F)),F}function Pd(a){if(a=a.current,!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function ZM(a,l){if(a=a.memoizedState,a!==null&&a.dehydrated!==null){var d=a.retryLane;a.retryLane=d!==0&&d<l?d:l}}function Dg(a,l){ZM(a,l),(a=a.alternate)&&ZM(a,l)}function QC(){return null}var QM=typeof reportError=="function"?reportError:function(a){console.error(a)};function Ng(a){this._internalRoot=a}Ld.prototype.render=Ng.prototype.render=function(a){var l=this._internalRoot;if(l===null)throw Error(t(409));Cd(a,l,null,null)},Ld.prototype.unmount=Ng.prototype.unmount=function(){var a=this._internalRoot;if(a!==null){this._internalRoot=null;var l=a.containerInfo;Xo(function(){Cd(null,a,null,null)}),l[Xs]=null}};function Ld(a){this._internalRoot=a}Ld.prototype.unstable_scheduleHydration=function(a){if(a){var l=Uy();a={blockedOn:null,target:a,priority:l};for(var d=0;d<Na.length&&l!==0&&l<Na[d].priority;d++);Na.splice(d,0,a),d===0&&ky(a)}};function Ug(a){return!(!a||a.nodeType!==1&&a.nodeType!==9&&a.nodeType!==11)}function Id(a){return!(!a||a.nodeType!==1&&a.nodeType!==9&&a.nodeType!==11&&(a.nodeType!==8||a.nodeValue!==" react-mount-point-unstable "))}function JM(){}function JC(a,l,d,x,M){if(M){if(typeof x=="function"){var R=x;x=function(){var De=Pd(F);R.call(De)}}var F=KM(l,x,a,0,null,!1,!1,"",JM);return a._reactRootContainer=F,a[Xs]=F.current,Ju(a.nodeType===8?a.parentNode:a),Xo(),F}for(;M=a.lastChild;)a.removeChild(M);if(typeof x=="function"){var Q=x;x=function(){var De=Pd(ce);Q.call(De)}}var ce=Ig(a,0,!1,null,null,!1,!1,"",JM);return a._reactRootContainer=ce,a[Xs]=ce.current,Ju(a.nodeType===8?a.parentNode:a),Xo(function(){Cd(l,ce,d,x)}),ce}function Dd(a,l,d,x,M){var R=d._reactRootContainer;if(R){var F=R;if(typeof M=="function"){var Q=M;M=function(){var ce=Pd(F);Q.call(ce)}}Cd(l,F,a,M)}else F=JC(d,l,a,M,x);return Pd(F)}Dy=function(a){switch(a.tag){case 3:var l=a.stateNode;if(l.current.memoizedState.isDehydrated){var d=Mt(l.pendingLanes);d!==0&&(ai(l,d|1),er(l,re()),(Jt&6)===0&&(oc=re()+500,za()))}break;case 13:Xo(function(){var x=Ys(a,1);if(x!==null){var M=ki();ts(x,a,1,M)}}),Dg(a,1)}},a0=function(a){if(a.tag===13){var l=Ys(a,134217728);if(l!==null){var d=ki();ts(l,a,134217728,d)}Dg(a,134217728)}},Ny=function(a){if(a.tag===13){var l=$a(a),d=Ys(a,l);if(d!==null){var x=ki();ts(d,a,l,x)}Dg(a,l)}},Uy=function(){return Qt},Oy=function(a,l){var d=Qt;try{return Qt=a,l()}finally{Qt=d}},ve=function(a,l,d){switch(l){case"input":if(Pt(a,d),l=d.name,d.type==="radio"&&l!=null){for(d=a;d.parentNode;)d=d.parentNode;for(d=d.querySelectorAll("input[name="+JSON.stringify(""+l)+'][type="radio"]'),l=0;l<d.length;l++){var x=d[l];if(x!==a&&x.form===a.form){var M=Kh(x);if(!M)throw Error(t(90));ee(x),Pt(x,M)}}}break;case"textarea":I(a,d);break;case"select":l=d.value,l!=null&&O(a,!!d.multiple,l,!1)}},mt=bg,St=Xo;var eP={usingClientEntryPoint:!1,Events:[nf,ql,Kh,Ne,at,bg]},_f={findFiberByHostInstance:Fo,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tP={bundleType:_f.bundleType,version:_f.version,rendererPackageName:_f.rendererPackageName,rendererConfig:_f.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:T.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){return a=Ce(a),a===null?null:a.stateNode},findFiberByHostInstance:_f.findFiberByHostInstance||QC,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Nd=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Nd.isDisabled&&Nd.supportsFiber)try{gt=Nd.inject(tP),Qe=Nd}catch{}}return nr.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eP,nr.createPortal=function(a,l){var d=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Ug(l))throw Error(t(200));return ZC(a,l,null,d)},nr.createRoot=function(a,l){if(!Ug(a))throw Error(t(299));var d=!1,x="",M=QM;return l!=null&&(l.unstable_strictMode===!0&&(d=!0),l.identifierPrefix!==void 0&&(x=l.identifierPrefix),l.onRecoverableError!==void 0&&(M=l.onRecoverableError)),l=Ig(a,1,!1,null,null,d,!1,x,M),a[Xs]=l.current,Ju(a.nodeType===8?a.parentNode:a),new Ng(l)},nr.findDOMNode=function(a){if(a==null)return null;if(a.nodeType===1)return a;var l=a._reactInternals;if(l===void 0)throw typeof a.render=="function"?Error(t(188)):(a=Object.keys(a).join(","),Error(t(268,a)));return a=Ce(l),a=a===null?null:a.stateNode,a},nr.flushSync=function(a){return Xo(a)},nr.hydrate=function(a,l,d){if(!Id(l))throw Error(t(200));return Dd(null,a,l,!0,d)},nr.hydrateRoot=function(a,l,d){if(!Ug(a))throw Error(t(405));var x=d!=null&&d.hydratedSources||null,M=!1,R="",F=QM;if(d!=null&&(d.unstable_strictMode===!0&&(M=!0),d.identifierPrefix!==void 0&&(R=d.identifierPrefix),d.onRecoverableError!==void 0&&(F=d.onRecoverableError)),l=KM(l,null,a,1,d??null,M,!1,R,F),a[Xs]=l.current,Ju(a),x)for(a=0;a<x.length;a++)d=x[a],M=d._getVersion,M=M(d._source),l.mutableSourceEagerHydrationData==null?l.mutableSourceEagerHydrationData=[d,M]:l.mutableSourceEagerHydrationData.push(d,M);return new Ld(l)},nr.render=function(a,l,d){if(!Id(l))throw Error(t(200));return Dd(null,a,l,!1,d)},nr.unmountComponentAtNode=function(a){if(!Id(a))throw Error(t(40));return a._reactRootContainer?(Xo(function(){Dd(null,null,a,!1,function(){a._reactRootContainer=null,a[Xs]=null})}),!0):!1},nr.unstable_batchedUpdates=bg,nr.unstable_renderSubtreeIntoContainer=function(a,l,d,x){if(!Id(d))throw Error(t(200));if(a==null||a._reactInternals===void 0)throw Error(t(38));return Dd(a,l,d,!1,x)},nr.version="18.3.1-next-f1338f8080-20240426",nr}var s3;function LV(){if(s3)return hv.exports;s3=1;function i(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(i)}catch(e){console.error(e)}}return i(),hv.exports=PV(),hv.exports}var a3;function IV(){if(a3)return zp;a3=1;var i=LV();return zp.createRoot=i.createRoot,zp.hydrateRoot=i.hydrateRoot,zp}var DV=IV();const NV=Symbol("@@iwer/devui/devui"),yx={buttonPressDuration:250},xR=en.createContext(yx),Cy=()=>en.useContext(xR);class UV{constructor(e,t={}){e.ipd=0;const n=e.canvasContainer,r=document.createElement("div");r.style.position="fixed",r.style.width="100%",r.style.height="100%",r.style.top="0",r.style.left="0",r.style.display="flex",r.style.justifyContent="center",r.style.alignItems="center",r.style.overflow="hidden",r.style.pointerEvents="none",r.style.zIndex="3",n.appendChild(r);const s=new AV(e),o=s.domElement;o.style.position="fixed",o.style.width="100%",o.style.height="100%",o.style.top="0",o.style.left="0",o.style.zIndex="2",n.appendChild(o),DV.createRoot(r).render(ae.jsx(OV,{xrDevice:e,inputLayer:s,options:t})),this[NV]={xrDevice:e,inputLayer:s}}}const OV=({xrDevice:i,inputLayer:e,options:t})=>{const[n,r]=en.useState(!1),[s,o]=en.useState(jF),[c,u]=en.useState(!1),[f,h]=en.useState(!1),[p,m]=en.useState(yx);return en.useEffect(()=>{var v;m({buttonPressDuration:(v=t.buttonPressDuration)!==null&&v!==void 0?v:yx.buttonPressDuration});const y=()=>{const S=document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement;r(!!S)};return document.addEventListener("pointerlockchange",y,!1),document.addEventListener("mozpointerlockchange",y,!1),document.addEventListener("webkitpointerlockchange",y,!1),()=>{document.removeEventListener("pointerlockchange",y,!1),document.removeEventListener("mozpointerlockchange",y,!1),document.removeEventListener("webkitpointerlockchange",y,!1)}},[]),ae.jsx(xR.Provider,{value:p,children:ae.jsxs("div",{style:{width:"100vw",height:"100vh",display:"flex",flexDirection:"column",justifyContent:"space-between"},children:[ae.jsx(l9,{xrDevice:i,inputLayer:e,keyMapOpen:c,setKeyMapOpen:u,fovSettingOpen:f,setFovSettingOpen:h}),c&&ae.jsx(YF,{keyMap:s,setKeyMap:o}),f&&ae.jsx(a9,{xrDevice:i,inputLayer:e}),ae.jsx(r9,{xrDevice:i,keyMap:s,pointerLocked:n})]})})},FV={RC_BOTTOM:0,RC_RIGHT:1,RC_LEFT:2,RC_TOP:3,BUMPER_LEFT:4,BUMPER_RIGHT:5,TRIGGER_LEFT:6,TRIGGER_RIGHT:7,CC_LEFT:8,CC_RIGHT:9,THUMBSTICK_LEFT:10,THUMBSTICK_RIGHT:11,LC_BOTTOM:12,LC_RIGHT:13,LC_LEFT:14,LC_TOP:15,CC_CENTER:16},kV={THUMBSTICK_LEFT_X:0,THUMBSTICK_LEFT_Y:1,THUMBSTICK_RIGHT_X:2,THUMBSTICK_RIGHT_Y:3},Un={TRIGGER:"TRIGGER",SQUEEZE:"SQUEEZE",TOUCHPAD:"TOUCHPAD",THUMBSTICK:"THUMBSTICK",BUTTON_1:"BUTTON_1",BUTTON_2:"BUTTON_2"},BV={TRIGGER:0,SQUEEZE:1,TOUCHPAD:2,THUMBSTICK:3,BUTTON_1:4,BUTTON_2:5},zV={TOUCHPAD_X:0,TOUCHPAD_Y:1,THUMBSTICK_X:2,THUMBSTICK_Y:3};class HV{constructor(e,t={}){var n,r,s;this._buttons=[],this._gamepad=e,this._buttonPressValueMin=(n=t.buttonPressValueMin)!==null&&n!==void 0?n:0,this._buttonPressValueMax=(r=t.buttonPressValueMax)!==null&&r!==void 0?r:1,this._buttonClickThreshold=(s=t.buttonClickThreshold)!==null&&s!==void 0?s:.9;for(let o=0;o<this._gamepad.buttons.length;o++)this._buttons[o]={currFrame:{value:0,touched:!1},prevFrame:{value:0,touched:!1},pressedSince:0}}update(){for(let e=0;e<this._gamepad.buttons.length;e++)this._buttons[e].prevFrame=this._buttons[e].currFrame,this._buttons[e].currFrame={value:this._gamepad.buttons[e].value,touched:this._gamepad.buttons[e].touched}}get gamepad(){return this._gamepad}getButtonIdx(e){const t=this._gamepad.mapping=="standard"?FV[e]:this._gamepad.mapping=="xr-standard"?BV[e]:null;if(t==null)throw`Button "${e}" does not exist in layout "${this._gamepad.mapping}"`;return t}getAxisIdx(e){const t=this._gamepad.mapping=="standard"?kV[e]:this._gamepad.mapping=="xr-standard"?zV[e]:null;if(t==null)throw`Axis "${e}" does not exist in layout "${this._gamepad.mapping}"`;return t}getButtonValueByIndex(e){return this._buttons[e]?this._buttons[e].currFrame.value:0}getButtonValue(e){const t=this.getButtonIdx(e);return this.getButtonValueByIndex(t)}getButtonByIndex(e){return this._buttons[e]?this._buttons[e].currFrame.value>this._buttonPressValueMin:!1}getButton(e){const t=this.getButtonIdx(e);return this.getButtonByIndex(t)}getButtonDownByIndex(e){return this._buttons[e]?this._buttons[e].prevFrame.value<=this._buttonPressValueMin&&this._buttons[e].currFrame.value>this._buttonPressValueMin:!1}getButtonDown(e){const t=this.getButtonIdx(e);return this.getButtonDownByIndex(t)}getButtonUpByIndex(e){return this._buttons[e]?this._buttons[e].prevFrame.value>=this._buttonPressValueMax&&this._buttons[e].currFrame.value<this._buttonPressValueMax:!1}getButtonUp(e){const t=this.getButtonIdx(e);return this.getButtonUpByIndex(t)}getButtonClickByIndex(e){return this._buttons[e]?this._buttons[e].prevFrame.value<=this._buttonClickThreshold&&this._buttons[e].currFrame.value>this._buttonClickThreshold:!1}getButtonClick(e){const t=this.getButtonIdx(e);return this.getButtonClickByIndex(t)}getAxisByIndex(e){return this._gamepad.axes[e]}getAxis(e){const t=this.getAxisIdx(e);return this.getAxisByIndex(t)}get2DInputAngle(e){const t=this.getAxis(e+"_X"),n=this.getAxis(e+"_Y");if(t==null||n==null||t==0&&n==0)return NaN;let r=Math.atan(t/n);return t>=0?n<0?r*=-1:n>0?r=Math.PI-r:n==0&&(r=Math.PI/2):n<0?r*=-1:n>0?r=-Math.PI-r:n==0&&(r=-Math.PI/2),r}get2DInputValue(e){const t=this.getAxis(e+"_X"),n=this.getAxis(e+"_Y");return Math.sqrt(t*t+n*n)}getHapticActuator(e){const t=this._gamepad.hapticActuators[e];if(t)return t;throw"Requested haptic actuator does not exist in gamepad"}}const o3={type:"change"},Py={type:"start"},yR={type:"end"},Hp=new Th,l3=new rr,VV=Math.cos(70*D3.DEG2RAD),Qn=new he,ir=2*Math.PI,pn={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},mv=1e-6;class GV extends P5{constructor(e,t=null){super(e,t),this.state=pn.NONE,this.target=new he,this.cursor=new he,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Qc.ROTATE,MIDDLE:Qc.DOLLY,RIGHT:Qc.PAN},this.touches={ONE:Wc.ROTATE,TWO:Wc.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new he,this._lastQuaternion=new Bs,this._lastTargetPosition=new he,this._quat=new Bs().setFromUnitVectors(e.up,new he(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new $2,this._sphericalDelta=new $2,this._scale=1,this._panOffset=new he,this._rotateStart=new Nt,this._rotateEnd=new Nt,this._rotateDelta=new Nt,this._panStart=new Nt,this._panEnd=new Nt,this._panDelta=new Nt,this._dollyStart=new Nt,this._dollyEnd=new Nt,this._dollyDelta=new Nt,this._dollyDirection=new he,this._mouse=new Nt,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=XV.bind(this),this._onPointerDown=WV.bind(this),this._onPointerUp=$V.bind(this),this._onContextMenu=JV.bind(this),this._onMouseWheel=YV.bind(this),this._onKeyDown=KV.bind(this),this._onTouchStart=ZV.bind(this),this._onTouchMove=QV.bind(this),this._onMouseDown=jV.bind(this),this._onMouseMove=qV.bind(this),this._interceptControlDown=eG.bind(this),this._interceptControlUp=tG.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(o3),this.update(),this.state=pn.NONE}update(e=null){const t=this.object.position;Qn.copy(t).sub(this.target),Qn.applyQuaternion(this._quat),this._spherical.setFromVector3(Qn),this.autoRotate&&this.state===pn.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,r=this.maxAzimuthAngle;isFinite(n)&&isFinite(r)&&(n<-Math.PI?n+=ir:n>Math.PI&&(n-=ir),r<-Math.PI?r+=ir:r>Math.PI&&(r-=ir),n<=r?this._spherical.theta=Math.max(n,Math.min(r,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+r)/2?Math.max(n,this._spherical.theta):Math.min(r,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=o!=this._spherical.radius}if(Qn.setFromSpherical(this._spherical),Qn.applyQuaternion(this._quatInverse),t.copy(this.target).add(Qn),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const c=Qn.length();o=this._clampDistance(c*this._scale);const u=c-o;this.object.position.addScaledVector(this._dollyDirection,u),this.object.updateMatrixWorld(),s=!!u}else if(this.object.isOrthographicCamera){const c=new he(this._mouse.x,this._mouse.y,0);c.unproject(this.object);const u=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=u!==this.object.zoom;const f=new he(this._mouse.x,this._mouse.y,0);f.unproject(this.object),this.object.position.sub(f).add(c),this.object.updateMatrixWorld(),o=Qn.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(Hp.origin.copy(this.object.position),Hp.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(Hp.direction))<VV?this.object.lookAt(this.target):(l3.setFromNormalAndCoplanarPoint(this.object.up,this.target),Hp.intersectPlane(l3,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>mv||8*(1-this._lastQuaternion.dot(this.object.quaternion))>mv||this._lastTargetPosition.distanceToSquared(this.target)>mv?(this.dispatchEvent(o3),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?ir/60*this.autoRotateSpeed*e:ir/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Qn.setFromMatrixColumn(t,0),Qn.multiplyScalar(-e),this._panOffset.add(Qn)}_panUp(e,t){this.screenSpacePanning===!0?Qn.setFromMatrixColumn(t,1):(Qn.setFromMatrixColumn(t,0),Qn.crossVectors(this.object.up,Qn)),Qn.multiplyScalar(e),this._panOffset.add(Qn)}_pan(e,t){const n=this.domElement;if(this.object.isPerspectiveCamera){const r=this.object.position;Qn.copy(r).sub(this.target);let s=Qn.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/n.clientHeight,this.object.matrix),this._panUp(2*t*s/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),r=e-n.left,s=t-n.top,o=n.width,c=n.height;this._mouse.x=r/o*2-1,this._mouse.y=-(s/c)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(ir*this._rotateDelta.x/t.clientHeight),this._rotateUp(ir*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(ir*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-ir*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(ir*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-ir*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);this._rotateStart.set(n,r)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);this._panStart.set(n,r)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,r=e.pageY-t.y,s=Math.sqrt(n*n+r*r);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const n=this._getSecondPointerPosition(e),r=.5*(e.pageX+n.x),s=.5*(e.pageY+n.y);this._rotateEnd.set(r,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(ir*this._rotateDelta.x/t.clientHeight),this._rotateUp(ir*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),n=.5*(e.pageX+t.x),r=.5*(e.pageY+t.y);this._panEnd.set(n,r)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),n=e.pageX-t.x,r=e.pageY-t.y,s=Math.sqrt(n*n+r*r);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,c=(e.pageY+t.y)*.5;this._updateZoomParameters(o,c)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new Nt,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,n={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function WV(i){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(i.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(i)&&(this._addPointer(i),i.pointerType==="touch"?this._onTouchStart(i):this._onMouseDown(i)))}function XV(i){this.enabled!==!1&&(i.pointerType==="touch"?this._onTouchMove(i):this._onMouseMove(i))}function $V(i){switch(this._removePointer(i),this._pointers.length){case 0:this.domElement.releasePointerCapture(i.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(yR),this.state=pn.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function jV(i){let e;switch(i.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case Qc.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(i),this.state=pn.DOLLY;break;case Qc.ROTATE:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=pn.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=pn.ROTATE}break;case Qc.PAN:if(i.ctrlKey||i.metaKey||i.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(i),this.state=pn.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(i),this.state=pn.PAN}break;default:this.state=pn.NONE}this.state!==pn.NONE&&this.dispatchEvent(Py)}function qV(i){switch(this.state){case pn.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(i);break;case pn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(i);break;case pn.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(i);break}}function YV(i){this.enabled===!1||this.enableZoom===!1||this.state!==pn.NONE||(i.preventDefault(),this.dispatchEvent(Py),this._handleMouseWheel(this._customWheelEvent(i)),this.dispatchEvent(yR))}function KV(i){this.enabled!==!1&&this._handleKeyDown(i)}function ZV(i){switch(this._trackPointer(i),this._pointers.length){case 1:switch(this.touches.ONE){case Wc.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(i),this.state=pn.TOUCH_ROTATE;break;case Wc.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(i),this.state=pn.TOUCH_PAN;break;default:this.state=pn.NONE}break;case 2:switch(this.touches.TWO){case Wc.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(i),this.state=pn.TOUCH_DOLLY_PAN;break;case Wc.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(i),this.state=pn.TOUCH_DOLLY_ROTATE;break;default:this.state=pn.NONE}break;default:this.state=pn.NONE}this.state!==pn.NONE&&this.dispatchEvent(Py)}function QV(i){switch(this._trackPointer(i),this.state){case pn.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(i),this.update();break;case pn.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(i),this.update();break;case pn.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(i),this.update();break;case pn.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(i),this.update();break;default:this.state=pn.NONE}}function JV(i){this.enabled!==!1&&i.preventDefault()}function eG(i){i.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function tG(i){i.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function c3(i,e){if(e===UP)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),i;if(e===r1||e===P3){let t=i.getIndex();if(t===null){const o=[],c=i.getAttribute("position");if(c!==void 0){for(let u=0;u<c.count;u++)o.push(u);i.setIndex(o),t=i.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),i}const n=t.count-2,r=[];if(e===r1)for(let o=1;o<=n;o++)r.push(t.getX(0)),r.push(t.getX(o)),r.push(t.getX(o+1));else for(let o=0;o<n;o++)o%2===0?(r.push(t.getX(o)),r.push(t.getX(o+1)),r.push(t.getX(o+2))):(r.push(t.getX(o+2)),r.push(t.getX(o+1)),r.push(t.getX(o)));r.length/3!==n&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=i.clone();return s.setIndex(r),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),i}class SR extends Nu{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new aG(t)}),this.register(function(t){return new oG(t)}),this.register(function(t){return new gG(t)}),this.register(function(t){return new _G(t)}),this.register(function(t){return new vG(t)}),this.register(function(t){return new cG(t)}),this.register(function(t){return new uG(t)}),this.register(function(t){return new fG(t)}),this.register(function(t){return new hG(t)}),this.register(function(t){return new sG(t)}),this.register(function(t){return new dG(t)}),this.register(function(t){return new lG(t)}),this.register(function(t){return new mG(t)}),this.register(function(t){return new pG(t)}),this.register(function(t){return new iG(t)}),this.register(function(t){return new xG(t)}),this.register(function(t){return new yG(t)})}load(e,t,n,r){const s=this;let o;if(this.resourcePath!=="")o=this.resourcePath;else if(this.path!==""){const f=Jf.extractUrlBase(e);o=Jf.resolveURL(f,this.path)}else o=Jf.extractUrlBase(e);this.manager.itemStart(e);const c=function(f){r?r(f):console.error(f),s.manager.itemError(e),s.manager.itemEnd(e)},u=new ab(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(this.withCredentials),u.load(e,function(f){try{s.parse(f,o,function(h){t(h),s.manager.itemEnd(e)},c)}catch(h){c(h)}},n,c)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,n,r){let s;const o={},c={},u=new TextDecoder;if(typeof e=="string")s=JSON.parse(e);else if(e instanceof ArrayBuffer)if(u.decode(new Uint8Array(e,0,4))===MR){try{o[qt.KHR_BINARY_GLTF]=new SG(e)}catch(p){r&&r(p);return}s=JSON.parse(o[qt.KHR_BINARY_GLTF].content)}else s=JSON.parse(u.decode(e));else s=e;if(s.asset===void 0||s.asset.version[0]<2){r&&r(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const f=new NG(s,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});f.fileLoader.setRequestHeader(this.requestHeader);for(let h=0;h<this.pluginCallbacks.length;h++){const p=this.pluginCallbacks[h](f);p.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),c[p.name]=p,o[p.name]=!0}if(s.extensionsUsed)for(let h=0;h<s.extensionsUsed.length;++h){const p=s.extensionsUsed[h],m=s.extensionsRequired||[];switch(p){case qt.KHR_MATERIALS_UNLIT:o[p]=new rG;break;case qt.KHR_DRACO_MESH_COMPRESSION:o[p]=new MG(s,this.dracoLoader);break;case qt.KHR_TEXTURE_TRANSFORM:o[p]=new EG;break;case qt.KHR_MESH_QUANTIZATION:o[p]=new TG;break;default:m.indexOf(p)>=0&&c[p]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+p+'".')}}f.setExtensions(o),f.setPlugins(c),f.parse(n,r)}parseAsync(e,t){const n=this;return new Promise(function(r,s){n.parse(e,t,r,s)})}}function nG(){let i={};return{get:function(e){return i[e]},add:function(e,t){i[e]=t},remove:function(e){delete i[e]},removeAll:function(){i={}}}}const qt={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class iG{constructor(e){this.parser=e,this.name=qt.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let n=0,r=t.length;n<r;n++){const s=t[n];s.extensions&&s.extensions[this.name]&&s.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,s.extensions[this.name].light)}}_loadLight(e){const t=this.parser,n="light:"+e;let r=t.cache.get(n);if(r)return r;const s=t.json,u=((s.extensions&&s.extensions[this.name]||{}).lights||[])[e];let f;const h=new Ut(16777215);u.color!==void 0&&h.setRGB(u.color[0],u.color[1],u.color[2],ji);const p=u.range!==void 0?u.range:0;switch(u.type){case"directional":f=new _5(h),f.target.position.set(0,0,-1),f.add(f.target);break;case"point":f=new m5(h),f.distance=p;break;case"spot":f=new d5(h),f.distance=p,u.spot=u.spot||{},u.spot.innerConeAngle=u.spot.innerConeAngle!==void 0?u.spot.innerConeAngle:0,u.spot.outerConeAngle=u.spot.outerConeAngle!==void 0?u.spot.outerConeAngle:Math.PI/4,f.angle=u.spot.outerConeAngle,f.penumbra=1-u.spot.innerConeAngle/u.spot.outerConeAngle,f.target.position.set(0,0,-1),f.add(f.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+u.type)}return f.position.set(0,0,0),da(f,u),u.intensity!==void 0&&(f.intensity=u.intensity),f.name=t.createUniqueName(u.name||"light_"+e),r=Promise.resolve(f),t.cache.add(n,r),r}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,n=this.parser,s=n.json.nodes[e],c=(s.extensions&&s.extensions[this.name]||{}).light;return c===void 0?null:this._loadLight(c).then(function(u){return n._getNodeRef(t.cache,c,u)})}}class rG{constructor(){this.name=qt.KHR_MATERIALS_UNLIT}getMaterialType(){return fs}extendParams(e,t,n){const r=[];e.color=new Ut(1,1,1),e.opacity=1;const s=t.pbrMetallicRoughness;if(s){if(Array.isArray(s.baseColorFactor)){const o=s.baseColorFactor;e.color.setRGB(o[0],o[1],o[2],ji),e.opacity=o[3]}s.baseColorTexture!==void 0&&r.push(n.assignTexture(e,"map",s.baseColorTexture,Xn))}return Promise.all(r)}}class sG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const r=this.parser.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=r.extensions[this.name].emissiveStrength;return s!==void 0&&(t.emissiveIntensity=s),Promise.resolve()}}class aG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];if(o.clearcoatFactor!==void 0&&(t.clearcoat=o.clearcoatFactor),o.clearcoatTexture!==void 0&&s.push(n.assignTexture(t,"clearcoatMap",o.clearcoatTexture)),o.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=o.clearcoatRoughnessFactor),o.clearcoatRoughnessTexture!==void 0&&s.push(n.assignTexture(t,"clearcoatRoughnessMap",o.clearcoatRoughnessTexture)),o.clearcoatNormalTexture!==void 0&&(s.push(n.assignTexture(t,"clearcoatNormalMap",o.clearcoatNormalTexture)),o.clearcoatNormalTexture.scale!==void 0)){const c=o.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new Nt(c,c)}return Promise.all(s)}}class oG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_DISPERSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const r=this.parser.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=r.extensions[this.name];return t.dispersion=s.dispersion!==void 0?s.dispersion:0,Promise.resolve()}}class lG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return o.iridescenceFactor!==void 0&&(t.iridescence=o.iridescenceFactor),o.iridescenceTexture!==void 0&&s.push(n.assignTexture(t,"iridescenceMap",o.iridescenceTexture)),o.iridescenceIor!==void 0&&(t.iridescenceIOR=o.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),o.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=o.iridescenceThicknessMinimum),o.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=o.iridescenceThicknessMaximum),o.iridescenceThicknessTexture!==void 0&&s.push(n.assignTexture(t,"iridescenceThicknessMap",o.iridescenceThicknessTexture)),Promise.all(s)}}class cG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_SHEEN}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[];t.sheenColor=new Ut(0,0,0),t.sheenRoughness=0,t.sheen=1;const o=r.extensions[this.name];if(o.sheenColorFactor!==void 0){const c=o.sheenColorFactor;t.sheenColor.setRGB(c[0],c[1],c[2],ji)}return o.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=o.sheenRoughnessFactor),o.sheenColorTexture!==void 0&&s.push(n.assignTexture(t,"sheenColorMap",o.sheenColorTexture,Xn)),o.sheenRoughnessTexture!==void 0&&s.push(n.assignTexture(t,"sheenRoughnessMap",o.sheenRoughnessTexture)),Promise.all(s)}}class uG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return o.transmissionFactor!==void 0&&(t.transmission=o.transmissionFactor),o.transmissionTexture!==void 0&&s.push(n.assignTexture(t,"transmissionMap",o.transmissionTexture)),Promise.all(s)}}class fG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_VOLUME}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];t.thickness=o.thicknessFactor!==void 0?o.thicknessFactor:0,o.thicknessTexture!==void 0&&s.push(n.assignTexture(t,"thicknessMap",o.thicknessTexture)),t.attenuationDistance=o.attenuationDistance||1/0;const c=o.attenuationColor||[1,1,1];return t.attenuationColor=new Ut().setRGB(c[0],c[1],c[2],ji),Promise.all(s)}}class hG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_IOR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const r=this.parser.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=r.extensions[this.name];return t.ior=s.ior!==void 0?s.ior:1.5,Promise.resolve()}}class dG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_SPECULAR}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];t.specularIntensity=o.specularFactor!==void 0?o.specularFactor:1,o.specularTexture!==void 0&&s.push(n.assignTexture(t,"specularIntensityMap",o.specularTexture));const c=o.specularColorFactor||[1,1,1];return t.specularColor=new Ut().setRGB(c[0],c[1],c[2],ji),o.specularColorTexture!==void 0&&s.push(n.assignTexture(t,"specularColorMap",o.specularColorTexture,Xn)),Promise.all(s)}}class pG{constructor(e){this.parser=e,this.name=qt.EXT_MATERIALS_BUMP}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return t.bumpScale=o.bumpFactor!==void 0?o.bumpFactor:1,o.bumpTexture!==void 0&&s.push(n.assignTexture(t,"bumpMap",o.bumpTexture)),Promise.all(s)}}class mG{constructor(e){this.parser=e,this.name=qt.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const n=this.parser.json.materials[e];return!n.extensions||!n.extensions[this.name]?null:Gs}extendMaterialParams(e,t){const n=this.parser,r=n.json.materials[e];if(!r.extensions||!r.extensions[this.name])return Promise.resolve();const s=[],o=r.extensions[this.name];return o.anisotropyStrength!==void 0&&(t.anisotropy=o.anisotropyStrength),o.anisotropyRotation!==void 0&&(t.anisotropyRotation=o.anisotropyRotation),o.anisotropyTexture!==void 0&&s.push(n.assignTexture(t,"anisotropyMap",o.anisotropyTexture)),Promise.all(s)}}class gG{constructor(e){this.parser=e,this.name=qt.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,n=t.json,r=n.textures[e];if(!r.extensions||!r.extensions[this.name])return null;const s=r.extensions[this.name],o=t.options.ktx2Loader;if(!o){if(n.extensionsRequired&&n.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,s.source,o)}}class _G{constructor(e){this.parser=e,this.name=qt.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,n=this.parser,r=n.json,s=r.textures[e];if(!s.extensions||!s.extensions[t])return null;const o=s.extensions[t],c=r.images[o.source];let u=n.textureLoader;if(c.uri){const f=n.options.manager.getHandler(c.uri);f!==null&&(u=f)}return n.loadTextureImage(e,o.source,u)}}class vG{constructor(e){this.parser=e,this.name=qt.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,n=this.parser,r=n.json,s=r.textures[e];if(!s.extensions||!s.extensions[t])return null;const o=s.extensions[t],c=r.images[o.source];let u=n.textureLoader;if(c.uri){const f=n.options.manager.getHandler(c.uri);f!==null&&(u=f)}return n.loadTextureImage(e,o.source,u)}}class xG{constructor(e){this.name=qt.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,n=t.bufferViews[e];if(n.extensions&&n.extensions[this.name]){const r=n.extensions[this.name],s=this.parser.getDependency("buffer",r.buffer),o=this.parser.options.meshoptDecoder;if(!o||!o.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return s.then(function(c){const u=r.byteOffset||0,f=r.byteLength||0,h=r.count,p=r.byteStride,m=new Uint8Array(c,u,f);return o.decodeGltfBufferAsync?o.decodeGltfBufferAsync(h,p,m,r.mode,r.filter).then(function(v){return v.buffer}):o.ready.then(function(){const v=new ArrayBuffer(h*p);return o.decodeGltfBuffer(new Uint8Array(v),h,p,m,r.mode,r.filter),v})})}else return null}}class yG{constructor(e){this.name=qt.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,n=t.nodes[e];if(!n.extensions||!n.extensions[this.name]||n.mesh===void 0)return null;const r=t.meshes[n.mesh];for(const f of r.primitives)if(f.mode!==Wr.TRIANGLES&&f.mode!==Wr.TRIANGLE_STRIP&&f.mode!==Wr.TRIANGLE_FAN&&f.mode!==void 0)return null;const o=n.extensions[this.name].attributes,c=[],u={};for(const f in o)c.push(this.parser.getDependency("accessor",o[f]).then(h=>(u[f]=h,u[f])));return c.length<1?null:(c.push(this.parser.createNodeMesh(e)),Promise.all(c).then(f=>{const h=f.pop(),p=h.isGroup?h.children:[h],m=f[0].count,v=[];for(const y of p){const S=new $t,_=new he,g=new Bs,b=new he(1,1,1),E=new V4(y.geometry,y.material,m);for(let T=0;T<m;T++)u.TRANSLATION&&_.fromBufferAttribute(u.TRANSLATION,T),u.ROTATION&&g.fromBufferAttribute(u.ROTATION,T),u.SCALE&&b.fromBufferAttribute(u.SCALE,T),E.setMatrixAt(T,S.compose(_,g,b));for(const T in u)if(T==="_COLOR_0"){const L=u[T];E.instanceColor=new o1(L.array,L.itemSize,L.normalized)}else T!=="TRANSLATION"&&T!=="ROTATION"&&T!=="SCALE"&&y.geometry.setAttribute(T,u[T]);qn.prototype.copy.call(E,y),this.parser.assignFinalMaterial(E),v.push(E)}return h.isGroup?(h.clear(),h.add(...v),h):v[0]}))}}const MR="glTF",Hf=12,u3={JSON:1313821514,BIN:5130562};class SG{constructor(e){this.name=qt.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,Hf),n=new TextDecoder;if(this.header={magic:n.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==MR)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const r=this.header.length-Hf,s=new DataView(e,Hf);let o=0;for(;o<r;){const c=s.getUint32(o,!0);o+=4;const u=s.getUint32(o,!0);if(o+=4,u===u3.JSON){const f=new Uint8Array(e,Hf+o,c);this.content=n.decode(f)}else if(u===u3.BIN){const f=Hf+o;this.body=e.slice(f,f+c)}o+=c}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class MG{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=qt.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const n=this.json,r=this.dracoLoader,s=e.extensions[this.name].bufferView,o=e.extensions[this.name].attributes,c={},u={},f={};for(const h in o){const p=Sx[h]||h.toLowerCase();c[p]=o[h]}for(const h in e.attributes){const p=Sx[h]||h.toLowerCase();if(o[h]!==void 0){const m=n.accessors[e.attributes[h]],v=au[m.componentType];f[p]=v.name,u[p]=m.normalized===!0}}return t.getDependency("bufferView",s).then(function(h){return new Promise(function(p,m){r.decodeDracoFile(h,function(v){for(const y in v.attributes){const S=v.attributes[y],_=u[y];_!==void 0&&(S.normalized=_)}p(v)},c,f,ji,m)})})}}class EG{constructor(){this.name=qt.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class TG{constructor(){this.name=qt.KHR_MESH_QUANTIZATION}}class ER extends wh{constructor(e,t,n,r){super(e,t,n,r)}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,s=e*r*3+r;for(let o=0;o!==r;o++)t[o]=n[s+o];return t}interpolate_(e,t,n,r){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=c*2,f=c*3,h=r-t,p=(n-t)/h,m=p*p,v=m*p,y=e*f,S=y-f,_=-2*v+3*m,g=v-m,b=1-_,E=g-m+p;for(let T=0;T!==c;T++){const L=o[S+T+c],C=o[S+T+u]*h,P=o[y+T+c],N=o[y+T]*h;s[T]=b*L+E*C+_*P+g*N}return s}}const wG=new Bs;class bG extends ER{interpolate_(e,t,n,r){const s=super.interpolate_(e,t,n,r);return wG.fromArray(s).normalize().toArray(s),s}}const Wr={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},au={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},f3={9728:Xi,9729:Wi,9984:M3,9985:Vp,9986:Vf,9987:ga},h3={33071:Eo,33648:dm,10497:uu},gv={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Sx={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},ho={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},AG={CUBICSPLINE:void 0,LINEAR:hh,STEP:fh},_v={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function RG(i){return i.DefaultMaterial===void 0&&(i.DefaultMaterial=new Bx({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:Ma})),i.DefaultMaterial}function cl(i,e,t){for(const n in t.extensions)i[n]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[n]=t.extensions[n])}function da(i,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(i.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function CG(i,e,t){let n=!1,r=!1,s=!1;for(let f=0,h=e.length;f<h;f++){const p=e[f];if(p.POSITION!==void 0&&(n=!0),p.NORMAL!==void 0&&(r=!0),p.COLOR_0!==void 0&&(s=!0),n&&r&&s)break}if(!n&&!r&&!s)return Promise.resolve(i);const o=[],c=[],u=[];for(let f=0,h=e.length;f<h;f++){const p=e[f];if(n){const m=p.POSITION!==void 0?t.getDependency("accessor",p.POSITION):i.attributes.position;o.push(m)}if(r){const m=p.NORMAL!==void 0?t.getDependency("accessor",p.NORMAL):i.attributes.normal;c.push(m)}if(s){const m=p.COLOR_0!==void 0?t.getDependency("accessor",p.COLOR_0):i.attributes.color;u.push(m)}}return Promise.all([Promise.all(o),Promise.all(c),Promise.all(u)]).then(function(f){const h=f[0],p=f[1],m=f[2];return n&&(i.morphAttributes.position=h),r&&(i.morphAttributes.normal=p),s&&(i.morphAttributes.color=m),i.morphTargetsRelative=!0,i})}function PG(i,e){if(i.updateMorphTargets(),e.weights!==void 0)for(let t=0,n=e.weights.length;t<n;t++)i.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(i.morphTargetInfluences.length===t.length){i.morphTargetDictionary={};for(let n=0,r=t.length;n<r;n++)i.morphTargetDictionary[t[n]]=n}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function LG(i){let e;const t=i.extensions&&i.extensions[qt.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+vv(t.attributes):e=i.indices+":"+vv(i.attributes)+":"+i.mode,i.targets!==void 0)for(let n=0,r=i.targets.length;n<r;n++)e+=":"+vv(i.targets[n]);return e}function vv(i){let e="";const t=Object.keys(i).sort();for(let n=0,r=t.length;n<r;n++)e+=t[n]+":"+i[t[n]]+";";return e}function Mx(i){switch(i){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function IG(i){return i.search(/\.jpe?g($|\?)/i)>0||i.search(/^data\:image\/jpeg/)===0?"image/jpeg":i.search(/\.webp($|\?)/i)>0||i.search(/^data\:image\/webp/)===0?"image/webp":i.search(/\.ktx2($|\?)/i)>0||i.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const DG=new $t;class NG{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new nG,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let n=!1,r=-1,s=!1,o=-1;if(typeof navigator<"u"){const c=navigator.userAgent;n=/^((?!chrome|android).)*safari/i.test(c)===!0;const u=c.match(/Version\/(\d+)/);r=n&&u?parseInt(u[1],10):-1,s=c.indexOf("Firefox")>-1,o=s?c.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||n&&r<17||s&&o<98?this.textureLoader=new f5(this.options.manager):this.textureLoader=new v5(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new ab(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const n=this,r=this.json,s=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(o){return o._markDefs&&o._markDefs()}),Promise.all(this._invokeAll(function(o){return o.beforeRoot&&o.beforeRoot()})).then(function(){return Promise.all([n.getDependencies("scene"),n.getDependencies("animation"),n.getDependencies("camera")])}).then(function(o){const c={scene:o[0][r.scene||0],scenes:o[0],animations:o[1],cameras:o[2],asset:r.asset,parser:n,userData:{}};return cl(s,c,r),da(c,r),Promise.all(n._invokeAll(function(u){return u.afterRoot&&u.afterRoot(c)})).then(function(){for(const u of c.scenes)u.updateMatrixWorld();e(c)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],n=this.json.meshes||[];for(let r=0,s=t.length;r<s;r++){const o=t[r].joints;for(let c=0,u=o.length;c<u;c++)e[o[c]].isBone=!0}for(let r=0,s=e.length;r<s;r++){const o=e[r];o.mesh!==void 0&&(this._addNodeRef(this.meshCache,o.mesh),o.skin!==void 0&&(n[o.mesh].isSkinnedMesh=!0)),o.camera!==void 0&&this._addNodeRef(this.cameraCache,o.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,n){if(e.refs[t]<=1)return n;const r=n.clone(),s=(o,c)=>{const u=this.associations.get(o);u!=null&&this.associations.set(c,u);for(const[f,h]of o.children.entries())s(h,c.children[f])};return s(n,r),r.name+="_instance_"+e.uses[t]++,r}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let n=0;n<t.length;n++){const r=e(t[n]);if(r)return r}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const n=[];for(let r=0;r<t.length;r++){const s=e(t[r]);s&&n.push(s)}return n}getDependency(e,t){const n=e+":"+t;let r=this.cache.get(n);if(!r){switch(e){case"scene":r=this.loadScene(t);break;case"node":r=this._invokeOne(function(s){return s.loadNode&&s.loadNode(t)});break;case"mesh":r=this._invokeOne(function(s){return s.loadMesh&&s.loadMesh(t)});break;case"accessor":r=this.loadAccessor(t);break;case"bufferView":r=this._invokeOne(function(s){return s.loadBufferView&&s.loadBufferView(t)});break;case"buffer":r=this.loadBuffer(t);break;case"material":r=this._invokeOne(function(s){return s.loadMaterial&&s.loadMaterial(t)});break;case"texture":r=this._invokeOne(function(s){return s.loadTexture&&s.loadTexture(t)});break;case"skin":r=this.loadSkin(t);break;case"animation":r=this._invokeOne(function(s){return s.loadAnimation&&s.loadAnimation(t)});break;case"camera":r=this.loadCamera(t);break;default:if(r=this._invokeOne(function(s){return s!=this&&s.getDependency&&s.getDependency(e,t)}),!r)throw new Error("Unknown type: "+e);break}this.cache.add(n,r)}return r}getDependencies(e){let t=this.cache.get(e);if(!t){const n=this,r=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(r.map(function(s,o){return n.getDependency(e,o)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],n=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[qt.KHR_BINARY_GLTF].body);const r=this.options;return new Promise(function(s,o){n.load(Jf.resolveURL(t.uri,r.path),s,void 0,function(){o(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(n){const r=t.byteLength||0,s=t.byteOffset||0;return n.slice(s,s+r)})}loadAccessor(e){const t=this,n=this.json,r=this.json.accessors[e];if(r.bufferView===void 0&&r.sparse===void 0){const o=gv[r.type],c=au[r.componentType],u=r.normalized===!0,f=new c(r.count*o);return Promise.resolve(new $i(f,o,u))}const s=[];return r.bufferView!==void 0?s.push(this.getDependency("bufferView",r.bufferView)):s.push(null),r.sparse!==void 0&&(s.push(this.getDependency("bufferView",r.sparse.indices.bufferView)),s.push(this.getDependency("bufferView",r.sparse.values.bufferView))),Promise.all(s).then(function(o){const c=o[0],u=gv[r.type],f=au[r.componentType],h=f.BYTES_PER_ELEMENT,p=h*u,m=r.byteOffset||0,v=r.bufferView!==void 0?n.bufferViews[r.bufferView].byteStride:void 0,y=r.normalized===!0;let S,_;if(v&&v!==p){const g=Math.floor(m/v),b="InterleavedBuffer:"+r.bufferView+":"+r.componentType+":"+g+":"+r.count;let E=t.cache.get(b);E||(S=new f(c,g*v,r.count*v/h),E=new F4(S,v/h),t.cache.add(b,E)),_=new Ux(E,u,m%v/h,y)}else c===null?S=new f(r.count*u):S=new f(c,m,r.count*u),_=new $i(S,u,y);if(r.sparse!==void 0){const g=gv.SCALAR,b=au[r.sparse.indices.componentType],E=r.sparse.indices.byteOffset||0,T=r.sparse.values.byteOffset||0,L=new b(o[1],E,r.sparse.count*g),C=new f(o[2],T,r.sparse.count*u);c!==null&&(_=new $i(_.array.slice(),_.itemSize,_.normalized)),_.normalized=!1;for(let P=0,N=L.length;P<N;P++){const A=L[P];if(_.setX(A,C[P*u]),u>=2&&_.setY(A,C[P*u+1]),u>=3&&_.setZ(A,C[P*u+2]),u>=4&&_.setW(A,C[P*u+3]),u>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}_.normalized=y}return _})}loadTexture(e){const t=this.json,n=this.options,s=t.textures[e].source,o=t.images[s];let c=this.textureLoader;if(o.uri){const u=n.manager.getHandler(o.uri);u!==null&&(c=u)}return this.loadTextureImage(e,s,c)}loadTextureImage(e,t,n){const r=this,s=this.json,o=s.textures[e],c=s.images[t],u=(c.uri||c.bufferView)+":"+o.sampler;if(this.textureCache[u])return this.textureCache[u];const f=this.loadImageSource(t,n).then(function(h){h.flipY=!1,h.name=o.name||c.name||"",h.name===""&&typeof c.uri=="string"&&c.uri.startsWith("data:image/")===!1&&(h.name=c.uri);const m=(s.samplers||{})[o.sampler]||{};return h.magFilter=f3[m.magFilter]||Wi,h.minFilter=f3[m.minFilter]||ga,h.wrapS=h3[m.wrapS]||uu,h.wrapT=h3[m.wrapT]||uu,h.generateMipmaps=!h.isCompressedTexture&&h.minFilter!==Xi&&h.minFilter!==Wi,r.associations.set(h,{textures:e}),h}).catch(function(){return null});return this.textureCache[u]=f,f}loadImageSource(e,t){const n=this,r=this.json,s=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(p=>p.clone());const o=r.images[e],c=self.URL||self.webkitURL;let u=o.uri||"",f=!1;if(o.bufferView!==void 0)u=n.getDependency("bufferView",o.bufferView).then(function(p){f=!0;const m=new Blob([p],{type:o.mimeType});return u=c.createObjectURL(m),u});else if(o.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const h=Promise.resolve(u).then(function(p){return new Promise(function(m,v){let y=m;t.isImageBitmapLoader===!0&&(y=function(S){const _=new Oi(S);_.needsUpdate=!0,m(_)}),t.load(Jf.resolveURL(p,s.path),y,void 0,v)})}).then(function(p){return f===!0&&c.revokeObjectURL(u),da(p,o),p.userData.mimeType=o.mimeType||IG(o.uri),p}).catch(function(p){throw console.error("THREE.GLTFLoader: Couldn't load texture",u),p});return this.sourceCache[e]=h,h}assignTexture(e,t,n,r){const s=this;return this.getDependency("texture",n.index).then(function(o){if(!o)return null;if(n.texCoord!==void 0&&n.texCoord>0&&(o=o.clone(),o.channel=n.texCoord),s.extensions[qt.KHR_TEXTURE_TRANSFORM]){const c=n.extensions!==void 0?n.extensions[qt.KHR_TEXTURE_TRANSFORM]:void 0;if(c){const u=s.associations.get(o);o=s.extensions[qt.KHR_TEXTURE_TRANSFORM].extendTexture(o,c),s.associations.set(o,u)}}return r!==void 0&&(o.colorSpace=r),e[t]=o,o})}assignFinalMaterial(e){const t=e.geometry;let n=e.material;const r=t.attributes.tangent===void 0,s=t.attributes.color!==void 0,o=t.attributes.normal===void 0;if(e.isPoints){const c="PointsMaterial:"+n.uuid;let u=this.cache.get(c);u||(u=new J3,Os.prototype.copy.call(u,n),u.color.copy(n.color),u.map=n.map,u.sizeAttenuation=!1,this.cache.add(c,u)),n=u}else if(e.isLine){const c="LineBasicMaterial:"+n.uuid;let u=this.cache.get(c);u||(u=new Q3,Os.prototype.copy.call(u,n),u.color.copy(n.color),u.map=n.map,this.cache.add(c,u)),n=u}if(r||s||o){let c="ClonedMaterial:"+n.uuid+":";r&&(c+="derivative-tangents:"),s&&(c+="vertex-colors:"),o&&(c+="flat-shading:");let u=this.cache.get(c);u||(u=n.clone(),s&&(u.vertexColors=!0),o&&(u.flatShading=!0),r&&(u.normalScale&&(u.normalScale.y*=-1),u.clearcoatNormalScale&&(u.clearcoatNormalScale.y*=-1)),this.cache.add(c,u),this.associations.set(u,this.associations.get(n))),n=u}e.material=n}getMaterialType(){return Bx}loadMaterial(e){const t=this,n=this.json,r=this.extensions,s=n.materials[e];let o;const c={},u=s.extensions||{},f=[];if(u[qt.KHR_MATERIALS_UNLIT]){const p=r[qt.KHR_MATERIALS_UNLIT];o=p.getMaterialType(),f.push(p.extendParams(c,s,t))}else{const p=s.pbrMetallicRoughness||{};if(c.color=new Ut(1,1,1),c.opacity=1,Array.isArray(p.baseColorFactor)){const m=p.baseColorFactor;c.color.setRGB(m[0],m[1],m[2],ji),c.opacity=m[3]}p.baseColorTexture!==void 0&&f.push(t.assignTexture(c,"map",p.baseColorTexture,Xn)),c.metalness=p.metallicFactor!==void 0?p.metallicFactor:1,c.roughness=p.roughnessFactor!==void 0?p.roughnessFactor:1,p.metallicRoughnessTexture!==void 0&&(f.push(t.assignTexture(c,"metalnessMap",p.metallicRoughnessTexture)),f.push(t.assignTexture(c,"roughnessMap",p.metallicRoughnessTexture))),o=this._invokeOne(function(m){return m.getMaterialType&&m.getMaterialType(e)}),f.push(Promise.all(this._invokeAll(function(m){return m.extendMaterialParams&&m.extendMaterialParams(e,c)})))}s.doubleSided===!0&&(c.side=Ls);const h=s.alphaMode||_v.OPAQUE;if(h===_v.BLEND?(c.transparent=!0,c.depthWrite=!1):(c.transparent=!1,h===_v.MASK&&(c.alphaTest=s.alphaCutoff!==void 0?s.alphaCutoff:.5)),s.normalTexture!==void 0&&o!==fs&&(f.push(t.assignTexture(c,"normalMap",s.normalTexture)),c.normalScale=new Nt(1,1),s.normalTexture.scale!==void 0)){const p=s.normalTexture.scale;c.normalScale.set(p,p)}if(s.occlusionTexture!==void 0&&o!==fs&&(f.push(t.assignTexture(c,"aoMap",s.occlusionTexture)),s.occlusionTexture.strength!==void 0&&(c.aoMapIntensity=s.occlusionTexture.strength)),s.emissiveFactor!==void 0&&o!==fs){const p=s.emissiveFactor;c.emissive=new Ut().setRGB(p[0],p[1],p[2],ji)}return s.emissiveTexture!==void 0&&o!==fs&&f.push(t.assignTexture(c,"emissiveMap",s.emissiveTexture,Xn)),Promise.all(f).then(function(){const p=new o(c);return s.name&&(p.name=s.name),da(p,s),t.associations.set(p,{materials:e}),s.extensions&&cl(r,p,s),p})}createUniqueName(e){const t=cn.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,n=this.extensions,r=this.primitiveCache;function s(c){return n[qt.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(c,t).then(function(u){return d3(u,c,t)})}const o=[];for(let c=0,u=e.length;c<u;c++){const f=e[c],h=LG(f),p=r[h];if(p)o.push(p.promise);else{let m;f.extensions&&f.extensions[qt.KHR_DRACO_MESH_COMPRESSION]?m=s(f):m=d3(new Ca,f,t),r[h]={primitive:f,promise:m},o.push(m)}}return Promise.all(o)}loadMesh(e){const t=this,n=this.json,r=this.extensions,s=n.meshes[e],o=s.primitives,c=[];for(let u=0,f=o.length;u<f;u++){const h=o[u].material===void 0?RG(this.cache):this.getDependency("material",o[u].material);c.push(h)}return c.push(t.loadGeometries(o)),Promise.all(c).then(function(u){const f=u.slice(0,u.length-1),h=u[u.length-1],p=[];for(let v=0,y=h.length;v<y;v++){const S=h[v],_=o[v];let g;const b=f[v];if(_.mode===Wr.TRIANGLES||_.mode===Wr.TRIANGLE_STRIP||_.mode===Wr.TRIANGLE_FAN||_.mode===void 0)g=s.isSkinnedMesh===!0?new B4(S,b):new Mi(S,b),g.isSkinnedMesh===!0&&g.normalizeSkinWeights(),_.mode===Wr.TRIANGLE_STRIP?g.geometry=c3(g.geometry,P3):_.mode===Wr.TRIANGLE_FAN&&(g.geometry=c3(g.geometry,r1));else if(_.mode===Wr.LINES)g=new $4(S,b);else if(_.mode===Wr.LINE_STRIP)g=new kx(S,b);else if(_.mode===Wr.LINE_LOOP)g=new j4(S,b);else if(_.mode===Wr.POINTS)g=new q4(S,b);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+_.mode);Object.keys(g.geometry.morphAttributes).length>0&&PG(g,s),g.name=t.createUniqueName(s.name||"mesh_"+e),da(g,s),_.extensions&&cl(r,g,_),t.assignFinalMaterial(g),p.push(g)}for(let v=0,y=p.length;v<y;v++)t.associations.set(p[v],{meshes:e,primitives:v});if(p.length===1)return s.extensions&&cl(r,p[0],s),p[0];const m=new ar;s.extensions&&cl(r,m,s),t.associations.set(m,{meshes:e});for(let v=0,y=p.length;v<y;v++)m.add(p[v]);return m})}loadCamera(e){let t;const n=this.json.cameras[e],r=n[n.type];if(!r){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return n.type==="perspective"?t=new Gi(D3.radToDeg(r.yfov),r.aspectRatio||1,r.znear||1,r.zfar||2e6):n.type==="orthographic"&&(t=new Vx(-r.xmag,r.xmag,r.ymag,-r.ymag,r.znear,r.zfar)),n.name&&(t.name=this.createUniqueName(n.name)),da(t,n),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],n=[];for(let r=0,s=t.joints.length;r<s;r++)n.push(this._loadNodeShallow(t.joints[r]));return t.inverseBindMatrices!==void 0?n.push(this.getDependency("accessor",t.inverseBindMatrices)):n.push(null),Promise.all(n).then(function(r){const s=r.pop(),o=r,c=[],u=[];for(let f=0,h=o.length;f<h;f++){const p=o[f];if(p){c.push(p);const m=new $t;s!==null&&m.fromArray(s.array,f*16),u.push(m)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[f])}return new Ox(c,u)})}loadAnimation(e){const t=this.json,n=this,r=t.animations[e],s=r.name?r.name:"animation_"+e,o=[],c=[],u=[],f=[],h=[];for(let p=0,m=r.channels.length;p<m;p++){const v=r.channels[p],y=r.samplers[v.sampler],S=v.target,_=S.node,g=r.parameters!==void 0?r.parameters[y.input]:y.input,b=r.parameters!==void 0?r.parameters[y.output]:y.output;S.node!==void 0&&(o.push(this.getDependency("node",_)),c.push(this.getDependency("accessor",g)),u.push(this.getDependency("accessor",b)),f.push(y),h.push(S))}return Promise.all([Promise.all(o),Promise.all(c),Promise.all(u),Promise.all(f),Promise.all(h)]).then(function(p){const m=p[0],v=p[1],y=p[2],S=p[3],_=p[4],g=[];for(let b=0,E=m.length;b<E;b++){const T=m[b],L=v[b],C=y[b],P=S[b],N=_[b];if(T===void 0)continue;T.updateMatrix&&T.updateMatrix();const A=n._createAnimationTracks(T,L,C,P,N);if(A)for(let w=0;w<A.length;w++)g.push(A[w])}return new s5(s,void 0,g)})}createNodeMesh(e){const t=this.json,n=this,r=t.nodes[e];return r.mesh===void 0?null:n.getDependency("mesh",r.mesh).then(function(s){const o=n._getNodeRef(n.meshCache,r.mesh,s);return r.weights!==void 0&&o.traverse(function(c){if(c.isMesh)for(let u=0,f=r.weights.length;u<f;u++)c.morphTargetInfluences[u]=r.weights[u]}),o})}loadNode(e){const t=this.json,n=this,r=t.nodes[e],s=n._loadNodeShallow(e),o=[],c=r.children||[];for(let f=0,h=c.length;f<h;f++)o.push(n.getDependency("node",c[f]));const u=r.skin===void 0?Promise.resolve(null):n.getDependency("skin",r.skin);return Promise.all([s,Promise.all(o),u]).then(function(f){const h=f[0],p=f[1],m=f[2];m!==null&&h.traverse(function(v){v.isSkinnedMesh&&v.bind(m,DG)});for(let v=0,y=p.length;v<y;v++)h.add(p[v]);return h})}_loadNodeShallow(e){const t=this.json,n=this.extensions,r=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const s=t.nodes[e],o=s.name?r.createUniqueName(s.name):"",c=[],u=r._invokeOne(function(f){return f.createNodeMesh&&f.createNodeMesh(e)});return u&&c.push(u),s.camera!==void 0&&c.push(r.getDependency("camera",s.camera).then(function(f){return r._getNodeRef(r.cameraCache,s.camera,f)})),r._invokeAll(function(f){return f.createNodeAttachment&&f.createNodeAttachment(e)}).forEach(function(f){c.push(f)}),this.nodeCache[e]=Promise.all(c).then(function(f){let h;if(s.isBone===!0?h=new K3:f.length>1?h=new ar:f.length===1?h=f[0]:h=new qn,h!==f[0])for(let p=0,m=f.length;p<m;p++)h.add(f[p]);if(s.name&&(h.userData.name=s.name,h.name=o),da(h,s),s.extensions&&cl(n,h,s),s.matrix!==void 0){const p=new $t;p.fromArray(s.matrix),h.applyMatrix4(p)}else s.translation!==void 0&&h.position.fromArray(s.translation),s.rotation!==void 0&&h.quaternion.fromArray(s.rotation),s.scale!==void 0&&h.scale.fromArray(s.scale);if(!r.associations.has(h))r.associations.set(h,{});else if(s.mesh!==void 0&&r.meshCache.refs[s.mesh]>1){const p=r.associations.get(h);r.associations.set(h,{...p})}return r.associations.get(h).nodes=e,h}),this.nodeCache[e]}loadScene(e){const t=this.extensions,n=this.json.scenes[e],r=this,s=new ar;n.name&&(s.name=r.createUniqueName(n.name)),da(s,n),n.extensions&&cl(t,s,n);const o=n.nodes||[],c=[];for(let u=0,f=o.length;u<f;u++)c.push(r.getDependency("node",o[u]));return Promise.all(c).then(function(u){for(let h=0,p=u.length;h<p;h++)s.add(u[h]);const f=h=>{const p=new Map;for(const[m,v]of r.associations)(m instanceof Os||m instanceof Oi)&&p.set(m,v);return h.traverse(m=>{const v=r.associations.get(m);v!=null&&p.set(m,v)}),p};return r.associations=f(s),s})}_createAnimationTracks(e,t,n,r,s){const o=[],c=e.name?e.name:e.uuid,u=[];ho[s.path]===ho.weights?e.traverse(function(m){m.morphTargetInfluences&&u.push(m.name?m.name:m.uuid)}):u.push(c);let f;switch(ho[s.path]){case ho.weights:f=du;break;case ho.rotation:f=pu;break;case ho.translation:case ho.scale:f=mu;break;default:switch(n.itemSize){case 1:f=du;break;case 2:case 3:default:f=mu;break}break}const h=r.interpolation!==void 0?AG[r.interpolation]:hh,p=this._getArrayFromAccessor(n);for(let m=0,v=u.length;m<v;m++){const y=new f(u[m]+"."+ho[s.path],t.array,p,h);r.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(y),o.push(y)}return o}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const n=Mx(t.constructor),r=new Float32Array(t.length);for(let s=0,o=t.length;s<o;s++)r[s]=t[s]*n;t=r}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(n){const r=this instanceof pu?bG:ER;return new r(this.times,this.values,this.getValueSize()/3,n)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function UG(i,e,t){const n=e.attributes,r=new Ra;if(n.POSITION!==void 0){const c=t.json.accessors[n.POSITION],u=c.min,f=c.max;if(u!==void 0&&f!==void 0){if(r.set(new he(u[0],u[1],u[2]),new he(f[0],f[1],f[2])),c.normalized){const h=Mx(au[c.componentType]);r.min.multiplyScalar(h),r.max.multiplyScalar(h)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const s=e.targets;if(s!==void 0){const c=new he,u=new he;for(let f=0,h=s.length;f<h;f++){const p=s[f];if(p.POSITION!==void 0){const m=t.json.accessors[p.POSITION],v=m.min,y=m.max;if(v!==void 0&&y!==void 0){if(u.setX(Math.max(Math.abs(v[0]),Math.abs(y[0]))),u.setY(Math.max(Math.abs(v[1]),Math.abs(y[1]))),u.setZ(Math.max(Math.abs(v[2]),Math.abs(y[2]))),m.normalized){const S=Mx(au[m.componentType]);u.multiplyScalar(S)}c.max(u)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}r.expandByVector(c)}i.boundingBox=r;const o=new Vs;r.getCenter(o.center),o.radius=r.min.distanceTo(r.max)/2,i.boundingSphere=o}function d3(i,e,t){const n=e.attributes,r=[];function s(o,c){return t.getDependency("accessor",o).then(function(u){i.setAttribute(c,u)})}for(const o in n){const c=Sx[o]||o.toLowerCase();c in i.attributes||r.push(s(n[o],c))}if(e.indices!==void 0&&!i.index){const o=t.getDependency("accessor",e.indices).then(function(c){i.setIndex(c)});r.push(o)}return Zt.workingColorSpace!==ji&&"COLOR_0"in n&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${Zt.workingColorSpace}" not supported.`),da(i,e),UG(i,e,t),Promise.all(r).then(function(){return e.targets!==void 0?CG(i,e.targets,t):i})}const On={ComponentState:Object.freeze({DEFAULT:"default",TOUCHED:"touched",PRESSED:"pressed"}),ComponentProperty:Object.freeze({BUTTON:"button",X_AXIS:"xAxis",Y_AXIS:"yAxis",STATE:"state"}),ComponentType:Object.freeze({TRIGGER:"trigger",SQUEEZE:"squeeze",TOUCHPAD:"touchpad",THUMBSTICK:"thumbstick",BUTTON:"button"}),ButtonTouchThreshold:.05,AxisTouchThreshold:.1,VisualResponseProperty:Object.freeze({TRANSFORM:"transform",VISIBILITY:"visibility"})};async function TR(i){const e=await fetch(i);if(e.ok)return e.json();throw new Error(e.statusText)}async function OG(i){if(!i)throw new Error("No basePath supplied");return await TR(`${i}/profilesList.json`)}async function FG(i,e,t=null,n=!0){if(!i)throw new Error("No xrInputSource supplied");if(!e)throw new Error("No basePath supplied");const r=await OG(e);let s;if(i.profiles.some(u=>{const f=r[u];return f&&(s={profileId:u,profilePath:`${e}/${f.path}`,deprecated:!!f.deprecated}),!!s}),!s){if(!t)throw new Error("No matching profile name found");const u=r[t];if(!u)throw new Error(`No matching profile name found and default profile "${t}" missing.`);s={profileId:t,profilePath:`${e}/${u.path}`,deprecated:!!u.deprecated}}const o=await TR(s.profilePath);let c;if(n){let u;if(i.handedness==="any"?u=o.layouts[Object.keys(o.layouts)[0]]:u=o.layouts[i.handedness],!u)throw new Error(`No matching handedness, ${i.handedness}, in profile ${s.profileId}`);u.assetPath&&(c=s.profilePath.replace("profile.json",u.assetPath))}return{profile:o,assetPath:c}}const kG={xAxis:0,yAxis:0,button:0,state:On.ComponentState.DEFAULT};function BG(i=0,e=0){let t=i,n=e;if(Math.sqrt(i*i+e*e)>1){const o=Math.atan2(e,i);t=Math.cos(o),n=Math.sin(o)}return{normalizedXAxis:t*.5+.5,normalizedYAxis:n*.5+.5}}class zG{constructor(e){this.componentProperty=e.componentProperty,this.states=e.states,this.valueNodeName=e.valueNodeName,this.valueNodeProperty=e.valueNodeProperty,this.valueNodeProperty===On.VisualResponseProperty.TRANSFORM&&(this.minNodeName=e.minNodeName,this.maxNodeName=e.maxNodeName),this.value=0,this.updateFromComponent(kG)}updateFromComponent({xAxis:e,yAxis:t,button:n,state:r}){const{normalizedXAxis:s,normalizedYAxis:o}=BG(e,t);switch(this.componentProperty){case On.ComponentProperty.X_AXIS:this.value=this.states.includes(r)?s:.5;break;case On.ComponentProperty.Y_AXIS:this.value=this.states.includes(r)?o:.5;break;case On.ComponentProperty.BUTTON:this.value=this.states.includes(r)?n:0;break;case On.ComponentProperty.STATE:this.valueNodeProperty===On.VisualResponseProperty.VISIBILITY?this.value=this.states.includes(r):this.value=this.states.includes(r)?1:0;break;default:throw new Error(`Unexpected visualResponse componentProperty ${this.componentProperty}`)}}}class HG{constructor(e,t){if(!e||!t||!t.visualResponses||!t.gamepadIndices||Object.keys(t.gamepadIndices).length===0)throw new Error("Invalid arguments supplied");this.id=e,this.type=t.type,this.rootNodeName=t.rootNodeName,this.touchPointNodeName=t.touchPointNodeName,this.visualResponses={},Object.keys(t.visualResponses).forEach(n=>{const r=new zG(t.visualResponses[n]);this.visualResponses[n]=r}),this.gamepadIndices=Object.assign({},t.gamepadIndices),this.values={state:On.ComponentState.DEFAULT,button:this.gamepadIndices.button!==void 0?0:void 0,xAxis:this.gamepadIndices.xAxis!==void 0?0:void 0,yAxis:this.gamepadIndices.yAxis!==void 0?0:void 0}}get data(){return{id:this.id,...this.values}}updateFromGamepad(e){if(this.values.state=On.ComponentState.DEFAULT,this.gamepadIndices.button!==void 0&&e.buttons.length>this.gamepadIndices.button){const t=e.buttons[this.gamepadIndices.button];this.values.button=t.value,this.values.button=this.values.button<0?0:this.values.button,this.values.button=this.values.button>1?1:this.values.button,t.pressed||this.values.button===1?this.values.state=On.ComponentState.PRESSED:(t.touched||this.values.button>On.ButtonTouchThreshold)&&(this.values.state=On.ComponentState.TOUCHED)}this.gamepadIndices.xAxis!==void 0&&e.axes.length>this.gamepadIndices.xAxis&&(this.values.xAxis=e.axes[this.gamepadIndices.xAxis],this.values.xAxis=this.values.xAxis<-1?-1:this.values.xAxis,this.values.xAxis=this.values.xAxis>1?1:this.values.xAxis,this.values.state===On.ComponentState.DEFAULT&&Math.abs(this.values.xAxis)>On.AxisTouchThreshold&&(this.values.state=On.ComponentState.TOUCHED)),this.gamepadIndices.yAxis!==void 0&&e.axes.length>this.gamepadIndices.yAxis&&(this.values.yAxis=e.axes[this.gamepadIndices.yAxis],this.values.yAxis=this.values.yAxis<-1?-1:this.values.yAxis,this.values.yAxis=this.values.yAxis>1?1:this.values.yAxis,this.values.state===On.ComponentState.DEFAULT&&Math.abs(this.values.yAxis)>On.AxisTouchThreshold&&(this.values.state=On.ComponentState.TOUCHED)),Object.values(this.visualResponses).forEach(t=>{t.updateFromComponent(this.values)})}}class VG{constructor(e,t,n){if(!e)throw new Error("No xrInputSource supplied");if(!t)throw new Error("No profile supplied");this.xrInputSource=e,this.assetUrl=n,this.id=t.profileId,this.layoutDescription=t.layouts[e.handedness],this.components={},Object.keys(this.layoutDescription.components).forEach(r=>{const s=this.layoutDescription.components[r];this.components[r]=new HG(r,s)}),this.updateFromGamepad()}get gripSpace(){return this.xrInputSource.gripSpace}get targetRaySpace(){return this.xrInputSource.targetRaySpace}get data(){const e=[];return Object.values(this.components).forEach(t=>{e.push(t.data)}),e}updateFromGamepad(){Object.values(this.components).forEach(e=>{e.updateFromGamepad(this.xrInputSource.gamepad)})}}const GG="https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles",WG="generic-trigger";class XG extends qn{constructor(){super(),this.motionController=null,this.envMap=null}setEnvironmentMap(e){return this.envMap==e?this:(this.envMap=e,this.traverse(t=>{t.isMesh&&(t.material.envMap=this.envMap,t.material.needsUpdate=!0)}),this)}updateMatrixWorld(e){super.updateMatrixWorld(e),this.motionController&&(this.motionController.updateFromGamepad(),Object.values(this.motionController.components).forEach(t=>{Object.values(t.visualResponses).forEach(n=>{const{valueNode:r,minNode:s,maxNode:o,value:c,valueNodeProperty:u}=n;r&&(u===On.VisualResponseProperty.VISIBILITY?r.visible=c:u===On.VisualResponseProperty.TRANSFORM&&(r.quaternion.slerpQuaternions(s.quaternion,o.quaternion,c),r.position.lerpVectors(s.position,o.position,c)))})}))}}function $G(i,e){Object.values(i.components).forEach(t=>{const{type:n,touchPointNodeName:r,visualResponses:s}=t;if(n===On.ComponentType.TOUCHPAD)if(t.touchPointNode=e.getObjectByName(r),t.touchPointNode){const o=new K4(.001),c=new fs({color:255}),u=new Mi(o,c);t.touchPointNode.add(u)}else console.warn(`Could not find touch dot, ${t.touchPointNodeName}, in touchpad component ${t.id}`);Object.values(s).forEach(o=>{const{valueNodeName:c,minNodeName:u,maxNodeName:f,valueNodeProperty:h}=o;if(h===On.VisualResponseProperty.TRANSFORM){if(o.minNode=e.getObjectByName(u),o.maxNode=e.getObjectByName(f),!o.minNode){console.warn(`Could not find ${u} in the model`);return}if(!o.maxNode){console.warn(`Could not find ${f} in the model`);return}}o.valueNode=e.getObjectByName(c),o.valueNode||console.warn(`Could not find ${c} in the model`)})})}function p3(i,e){$G(i.motionController,e),i.envMap&&e.traverse(t=>{t.isMesh&&(t.material.envMap=i.envMap,t.material.needsUpdate=!0)}),i.add(e)}class jG{constructor(e=null,t=null){this.gltfLoader=e,this.path=GG,this._assetCache={},this.onLoad=t,this.gltfLoader||(this.gltfLoader=new SR)}setPath(e){return this.path=e,this}createControllerModel(e){const t=new XG;let n=null;return e.addEventListener("connected",r=>{const s=r.data;s.targetRayMode!=="tracked-pointer"||!s.gamepad||s.hand||FG(s,this.path,WG).then(({profile:o,assetPath:c})=>{t.motionController=new VG(s,o,c);const u=this._assetCache[t.motionController.assetUrl];if(u)n=u.scene.clone(),p3(t,n),this.onLoad&&this.onLoad(n);else{if(!this.gltfLoader)throw new Error("GLTFLoader not set.");this.gltfLoader.setPath(""),this.gltfLoader.load(t.motionController.assetUrl,f=>{this._assetCache[t.motionController.assetUrl]=f,n=f.scene.clone(),p3(t,n),this.onLoad&&this.onLoad(n)},null,()=>{throw new Error(`Asset ${t.motionController.assetUrl} missing or malformed.`)})}}).catch(o=>{console.warn(o)})}),e.addEventListener("disconnected",()=>{t.motionController=null,t.remove(n),n=null}),t}}class qG extends Mi{constructor(e){const t=new YG(e),n=new Bm(t.image.width*.001,t.image.height*.001),r=new fs({map:t,toneMapped:!1,transparent:!0});super(n,r);function s(o){r.map.dispatchDOMEvent(o)}this.addEventListener("mousedown",s),this.addEventListener("mousemove",s),this.addEventListener("mouseup",s),this.addEventListener("click",s),this.dispose=function(){n.dispose(),r.dispose(),r.map.dispose(),Ex.delete(e),this.removeEventListener("mousedown",s),this.removeEventListener("mousemove",s),this.removeEventListener("mouseup",s),this.removeEventListener("click",s)}}}class YG extends Y4{constructor(e){super(m3(e)),this.dom=e,this.anisotropy=16,this.colorSpace=Xn,this.minFilter=Wi,this.magFilter=Wi,this.generateMipmaps=!1;const t=new MutationObserver(()=>{this.scheduleUpdate||(this.scheduleUpdate=setTimeout(()=>this.update(),16))}),n={attributes:!0,childList:!0,subtree:!0,characterData:!0};t.observe(e,n),this.observer=t}dispatchDOMEvent(e){e.data&&KG(this.dom,e.type,e.data.x,e.data.y)}update(){this.image=m3(this.dom),this.needsUpdate=!0,this.scheduleUpdate=null}dispose(){this.observer&&this.observer.disconnect(),this.scheduleUpdate=clearTimeout(this.scheduleUpdate),super.dispose()}}const Ex=new WeakMap;function m3(i){const e=document.createRange(),t=new Ut;function n(m){const v=[];let y=!1;function S(){if(y&&(y=!1,m.restore()),v.length===0)return;let _=-1/0,g=-1/0,b=1/0,E=1/0;for(let T=0;T<v.length;T++){const L=v[T];_=Math.max(_,L.x),g=Math.max(g,L.y),b=Math.min(b,L.x+L.width),E=Math.min(E,L.y+L.height)}m.save(),m.beginPath(),m.rect(_,g,b-_,E-g),m.clip(),y=!0}return{add:function(_){v.push(_),S()},remove:function(){v.pop(),S()}}}function r(m,v,y,S){S!==""&&(m.textTransform==="uppercase"&&(S=S.toUpperCase()),h.font=m.fontWeight+" "+m.fontSize+" "+m.fontFamily,h.textBaseline="top",h.fillStyle=m.color,h.fillText(S,v,y+parseFloat(m.fontSize)*.1))}function s(m,v,y,S,_){y<2*_&&(_=y/2),S<2*_&&(_=S/2),h.beginPath(),h.moveTo(m+_,v),h.arcTo(m+y,v,m+y,v+S,_),h.arcTo(m+y,v+S,m,v+S,_),h.arcTo(m,v+S,m,v,_),h.arcTo(m,v,m+y,v,_),h.closePath()}function o(m,v,y,S,_,g){const b=m[v+"Width"],E=m[v+"Style"],T=m[v+"Color"];b!=="0px"&&E!=="none"&&T!=="transparent"&&T!=="rgba(0, 0, 0, 0)"&&(h.strokeStyle=T,h.lineWidth=parseFloat(b),h.beginPath(),h.moveTo(y,S),h.lineTo(y+_,S+g),h.stroke())}function c(m,v){if(m.nodeType===Node.COMMENT_NODE||m.nodeName==="SCRIPT"||m.style&&m.style.display==="none")return;let y=0,S=0,_=0,g=0;if(m.nodeType===Node.TEXT_NODE){e.selectNode(m);const E=e.getBoundingClientRect();y=E.left-u.left-.5,S=E.top-u.top-.5,_=E.width,g=E.height,r(v,y,S,m.nodeValue.trim())}else if(m instanceof HTMLCanvasElement){const E=m.getBoundingClientRect();y=E.left-u.left-.5,S=E.top-u.top-.5,h.save();const T=window.devicePixelRatio;h.scale(1/T,1/T),h.drawImage(m,y,S),h.restore()}else if(m instanceof HTMLImageElement){const E=m.getBoundingClientRect();y=E.left-u.left-.5,S=E.top-u.top-.5,_=E.width,g=E.height,h.drawImage(m,y,S,_,g)}else{const E=m.getBoundingClientRect();y=E.left-u.left-.5,S=E.top-u.top-.5,_=E.width,g=E.height,v=window.getComputedStyle(m),s(y,S,_,g,parseFloat(v.borderRadius));const T=v.backgroundColor;T!=="transparent"&&T!=="rgba(0, 0, 0, 0)"&&(h.fillStyle=T,h.fill());const L=["borderTop","borderLeft","borderBottom","borderRight"];let C=!0,P=null;for(const N of L){if(P!==null&&(C=v[N+"Width"]===v[P+"Width"]&&v[N+"Color"]===v[P+"Color"]&&v[N+"Style"]===v[P+"Style"]),C===!1)break;P=N}if(C===!0){const N=parseFloat(v.borderTopWidth);v.borderTopWidth!=="0px"&&v.borderTopStyle!=="none"&&v.borderTopColor!=="transparent"&&v.borderTopColor!=="rgba(0, 0, 0, 0)"&&(h.strokeStyle=v.borderTopColor,h.lineWidth=N,h.stroke())}else o(v,"borderTop",y,S,_,0),o(v,"borderLeft",y,S,0,g),o(v,"borderBottom",y,S+g,_,0),o(v,"borderRight",y+_,S,0,g);if(m instanceof HTMLInputElement){let N=v.accentColor;(N===void 0||N==="auto")&&(N=v.color),t.set(N);const w=Math.sqrt(.299*t.r**2+.587*t.g**2+.114*t.b**2)<.5?"white":"#111111";if(m.type==="radio"&&(s(y,S,_,g,g),h.fillStyle="white",h.strokeStyle=N,h.lineWidth=1,h.fill(),h.stroke(),m.checked&&(s(y+2,S+2,_-4,g-4,g),h.fillStyle=N,h.strokeStyle=w,h.lineWidth=2,h.fill(),h.stroke())),m.type==="checkbox"&&(s(y,S,_,g,2),h.fillStyle=m.checked?N:"white",h.strokeStyle=m.checked?w:N,h.lineWidth=1,h.stroke(),h.fill(),m.checked)){const D=h.textAlign;h.textAlign="center";const X={color:w,fontFamily:v.fontFamily,fontSize:g+"px",fontWeight:"bold"};r(X,y+_/2,S,"✔"),h.textAlign=D}if(m.type==="range"){const[D,X,z]=["min","max","value"].map(Z=>parseFloat(m[Z])),G=(z-D)/(X-D)*(_-g);s(y,S+g/4,_,g/2,g/4),h.fillStyle=w,h.strokeStyle=N,h.lineWidth=1,h.fill(),h.stroke(),s(y,S+g/4,G+g/2,g/2,g/4),h.fillStyle=N,h.fill(),s(y+G,S,g,g,g/2),h.fillStyle=N,h.fill()}(m.type==="color"||m.type==="text"||m.type==="number")&&(p.add({x:y,y:S,width:_,height:g}),r(v,y+parseInt(v.paddingLeft),S+parseInt(v.paddingTop),m.value),p.remove())}}const b=v.overflow==="auto"||v.overflow==="hidden";b&&p.add({x:y,y:S,width:_,height:g});for(let E=0;E<m.childNodes.length;E++)c(m.childNodes[E],v);b&&p.remove()}const u=i.getBoundingClientRect();let f=Ex.get(i);f===void 0&&(f=document.createElement("canvas"),f.width=u.width,f.height=u.height,Ex.set(i,f));const h=f.getContext("2d"),p=new n(h);return h.clearRect(0,0,f.width,f.height),c(i),f}function KG(i,e,t,n){const r={clientX:t*i.offsetWidth+i.offsetLeft,clientY:n*i.offsetHeight+i.offsetTop,view:i.ownerDocument.defaultView};window.dispatchEvent(new MouseEvent(e,r));const s=i.getBoundingClientRect();t=t*s.width+s.left,n=n*s.height+s.top;function o(c){if(c.nodeType!==Node.TEXT_NODE&&c.nodeType!==Node.COMMENT_NODE){const u=c.getBoundingClientRect();if(t>u.left&&t<u.right&&n>u.top&&n<u.bottom){if(c.dispatchEvent(new MouseEvent(e,r)),c instanceof HTMLInputElement&&c.type==="range"&&(e==="mousedown"||e==="click")){const[f,h]=["min","max"].map(y=>parseFloat(c[y])),p=u.width,v=(t-u.x)/p;c.value=f+(h-f)*v,c.dispatchEvent(new InputEvent("input",{bubbles:!0}))}c instanceof HTMLInputElement&&(c.type==="text"||c.type==="number")&&(e==="mousedown"||e==="click")&&c.focus()}for(let f=0;f<c.childNodes.length;f++)o(c.childNodes[f])}}o(i)}var ah=function(){var i=0,e=document.createElement("div");e.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",e.addEventListener("click",function(h){h.preventDefault(),n(++i%e.children.length)},!1);function t(h){return e.appendChild(h.dom),h}function n(h){for(var p=0;p<e.children.length;p++)e.children[p].style.display=p===h?"block":"none";i=h}var r=(performance||Date).now(),s=r,o=0,c=t(new ah.Panel("FPS","#0ff","#002")),u=t(new ah.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var f=t(new ah.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:e,addPanel:t,showPanel:n,begin:function(){r=(performance||Date).now()},end:function(){o++;var h=(performance||Date).now();if(u.update(h-r,200),h>=s+1e3&&(c.update(o*1e3/(h-s),100),s=h,o=0,f)){var p=performance.memory;f.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return h},update:function(){r=this.end()},domElement:e,setMode:n}};ah.Panel=function(i,e,t){var n=1/0,r=0,s=Math.round,o=s(window.devicePixelRatio||1),c=80*o,u=48*o,f=3*o,h=2*o,p=3*o,m=15*o,v=74*o,y=30*o,S=document.createElement("canvas");S.width=c,S.height=u,S.style.cssText="width:80px;height:48px";var _=S.getContext("2d");return _.font="bold "+9*o+"px Helvetica,Arial,sans-serif",_.textBaseline="top",_.fillStyle=t,_.fillRect(0,0,c,u),_.fillStyle=e,_.fillText(i,f,h),_.fillRect(p,m,v,y),_.fillStyle=t,_.globalAlpha=.9,_.fillRect(p,m,v,y),{dom:S,update:function(g,b){n=Math.min(n,g),r=Math.max(r,g),_.fillStyle=t,_.globalAlpha=1,_.fillRect(0,0,c,m),_.fillStyle=e,_.fillText(s(g)+" "+i+" ("+s(n)+"-"+s(r)+")",f,h),_.drawImage(S,p+o,m,v-o,y,p,m,v-o,y),_.fillRect(p+v-o,m,o,y),_.fillStyle=t,_.globalAlpha=.9,_.fillRect(p+v-o,m,o,s((1-g/b)*y))}}};const Aa=new sb,Mo=document.createElement("div");Mo.id="loading";const Ly=document.createElement("div");Ly.className="progress";Mo.append(Ly);const Iy=document.createElement("div");Iy.className="progressbar";Ly.append(Iy);Aa.div=Mo;Aa.handlers=[()=>{Mo.style.opacity=1;const i=()=>{Mo.style.opacity=Mo.style.opacity-.1,typeof i=="function"&&Mo.style.opacity>0?setTimeout(i,33):Mo.style.display="none"};i()}];Aa.addLoadHandler=i=>{Aa.handlers.push(i)};Aa.onLoad=()=>{Aa.handlers.map(async i=>typeof i=="function"?await i():void 0)};Aa.onProgress=(i,e,t)=>{const n=e/t;Iy.style.transform=`scaleX(${n})`};const g3=new SR(Aa),xv=new ar,yv=new ar;async function ZG(i,e,t,n,r){if(n.add(e),t.hasOwnProperty("right")&&t.right!==null){const{gamepad:f,raySpace:h}=t.right}g3.load("assets/glove_01.glb",f=>{xv.add(f.scene)}),g3.load("assets/glove_02.glb",f=>{yv.add(f.scene)});const s=new ar;let o=0,c=0,u=-5;return i.add(s),s.translateX(o),s.translateY(c),s.translateZ(u),function(h,p,m,v,y){const S={events:[]};if(t.hasOwnProperty("left")&&t.left!==null){t.left.gamepad;const _=t.left.raySpace;_.children.includes(xv)||(t.left.mesh.visible=!1,_.add(xv))}if(t.hasOwnProperty("right")&&t.right!==null){t.right.gamepad;const _=t.right.raySpace;_.children.includes(yv)||(t.right.mesh.visible=!1,_.add(yv))}typeof v=="object"&&v!=null&&(console.log("sceneDataIn:",v),v.hasOwnProperty("action")&&v.action==="start_video"&&r.video.play()),typeof y=="function"&&y(S)}}function QG(i,e){let n=i.xr.getCamera(e).matrixWorld,r=new he;r.setFromMatrixPosition(n);const s=-1,o=1,c=2.02,u=.5,f=0,h=new he(s,r.y,f),p=new he(o,r.y,f),m=new he(r.x,c,f),v=new he(r.x,u,f),y=new he;y.subVectors(h,r);const S=new he;S.subVectors(p,r);const _=new he;_.subVectors(m,r);const g=new he;g.subVectors(v,r);const b=new he(1,0,0),E=y.clone().cross(new he(0,1,0)).normalize(),T=b.angleTo(E.clone()),L=Math.cos(T)*s,C=new he(-1,0,0),P=S.clone().cross(new he(0,-1,0)).normalize(),N=C.angleTo(P.clone()),A=Math.cos(N)*o,w=new he(0,-1,0),D=_.clone().cross(new he(1,0,0)).normalize(),X=w.angleTo(D.clone()),z=Math.cos(X)*c,G=r.z>f?new he(0,1,0):new he(0,-1,0),Z=g.clone().cross(new he(-1,0,0)).normalize(),q=G.angleTo(Z.clone()),K=Math.cos(q)*u,B=new rr(E.clone(),-L),ie=new rr(P.clone(),A),oe=new rr(D.clone(),z),V=new rr(Z.clone(),K*-.499),de=new rr(new he(0,0,1),0),Ge=new rr(new he(0,0,-1),0);return JSON.stringify({leftΘ:T,leftX:L,rightΘ:N,rightX:A,topΘ:X,topY:z,bottomΘ:q,bottomY:K}).replace(new RegExp("\\\\n","g"),"<br />").replace(new RegExp('":',"g"),'":<br />').replace(new RegExp(",","g"),'",<br />').replace(new RegExp("{","g"),"{<br />").replace(new RegExp("}","g"),"<br />}"),[B,ie,oe,V,...r.z>f?[Ge]:[de,Ge]]}const _3=Bm;function JG(i,e=2064,t=2208,n=.09057971,r=0,s=0,o=-2.5,c=5){const u=t/e*c;let f=new ar,h=null;const p=new Oi(i);p.colorSpace=Xn;let m=0,v=!1;function y(_=!1,g=null,b=null,E=null,T=null){if(!_||E===null){m<1&&(m=setInterval(function(){i.readyState>=i.HAVE_CURRENT_DATA&&(p.needsUpdate=!0)},1e3/24));const L=new _3(c,u,1,1);L.translate(r+n,0,o);const C=L.attributes.uv.array;for(let z=0;z<C.length;z+=2)C[z]*=.5;const P=new fs({map:p}),N=new Mi(L,P);N.layers.set(1),f.add(N);const A=new _3(c,u,1,1);A.translate(r-n,0,o);const w=A.attributes.uv.array;for(let z=0;z<w.length;z+=2)w[z]*=.5,w[z]+=.5;const D=new fs({map:p}),X=new Mi(A,D);return X.layers.set(2),f.add(X),console.log("Add video layer using WebGL plane geometry"),b.add(f),v=!0,f}else if(T!==null){g.xr,g.getContext();const L=2064,C=2208,P=.0009057971,N=new XRMediaBinding(E);return console.log("Create XRQuadLayer with XRMediaBinding"),h=N.createQuadLayer(i,{layout:"stereo-left-right",width:L*P,height:C*P,space:T,transform:new XRRigidTransform({x:0,y:C*P/2,z:o},{},{})}),v=!0,h}}function S(_=!1,g=null,b=null){v=!1,_||(console.log("Remove video layer from WebGL plane geometry"),b.remove(f)),m>0&&clearInterval(m),m=0}return Object.defineProperty(Object.defineProperty({initVideoLayer:y,clearVideoLayer:S,webGLVideo:f,webXRLayerVideo:h},"videoLayerInitialized",{get(){return v},set(_){v=_}}),"video",{get(){return i},set(_){i=_}})}let Jn=!1;function eW(i,e,t,n=Jn){if(Object.values(i).forEach(r=>{r!=null&&r.gamepad&&r.gamepad.update()}),i.hasOwnProperty("right")&&i.right!==null){const{gamepad:r,raySpace:s}=i.right;if(r.getButtonClick(Un.TRIGGER)){console.log("Trigger on right controller was activated:",Un.TRIGGER,r);const o=new ar;s.getWorldPosition(o.position),s.getWorldQuaternion(o.quaternion),n&&(console.log("Cancel action"),Jn=!1),e.action=`Trigger on right controller was activated: ${Un.TRIGGER}`,e.controller_vector=o,e.waiting_for_confirmation=Jn}else if(r.getButtonClick(Un.BUTTON_1))console.log("BUTTON_1 (A) on right controller was activated:",Un.BUTTON_1,r),n&&(console.log("Confirm action"),Jn=!1,console.log("End session"),e.action="End session confirmed",e.waiting_for_confirmation=Jn,t.end());else if(r.getButtonClick(Un.BUTTON_2))console.log("BUTTON_2 (B) on right controller was activated:",Un.BUTTON_2,r),n?(console.log("Cancel action"),Jn=!1,e.action="End session cancelled"):(console.log("Waiting for confirmation..."),Jn=!0,e.action="End session initiated"),e.waiting_for_confirmation=Jn;else for(const o in Un)Un.hasOwnProperty(o)&&r.getButtonClick(Un[o])&&(console.log("Button on right controller was activated:",Un[o],r),n&&(console.log("Cancel action"),Jn=!1),e.waiting_for_confirmation=Jn)}if(i.hasOwnProperty("left")&&i.left!==null){const{gamepad:r,raySpace:s}=i.left;if(r.getButtonClick(Un.TRIGGER)){console.log("Trigger on left controller was activated:",Un.TRIGGER,r);const o=new ar;s.getWorldPosition(o.position),s.getWorldQuaternion(o.quaternion),n&&(console.log("Cancel action"),Jn=!1),e.action=`Trigger on left controller was activated: ${Un.TRIGGER}`,e.controller_vector=o,e.waiting_for_confirmation=Jn}else if(r.getButtonClick(Un.BUTTON_1))console.log("BUTTON_1 (X) on left controller was activated:",Un.BUTTON_1,r),n&&(console.log("Cancel action"),Jn=!1),e.waiting_for_confirmation=Jn;else if(r.getButtonClick(Un.BUTTON_2))console.log("BUTTON_2 (Y) on left controller was activated:",Un.BUTTON_2,r),n&&(console.log("Cancel action"),Jn=!1),e.waiting_for_confirmation=Jn;else for(const o in Un)Un.hasOwnProperty(o)&&r.getButtonClick(Un[o])&&(console.log("Button on left controller was activated:",Un[o],r),n&&(console.log("Cancel action"),Jn=!1),e.waiting_for_confirmation=Jn)}return!!Jn}let Bn=null,tW=!0,v3=!1;setTimeout(function(){console.log("Initiate WebXR Layers scene!");let e,t,n,r,s,o;const c=document.body,u=document.createElement("div");c.appendChild(u);const f=new y5,h=window.document.createElement("canvas"),p={width:window.innerWidth,height:window.innerHeight+10};u.style=`display: block; background-color: #000; max-width: ${p.width}px; max-height: ${p.height}px; overflow: hidden;`,n=new d6({canvas:h,antialias:!0}),n.setPixelRatio(window.devicePixelRatio),n.setSize(p.width,p.height),n.outputColorSpace=Xn,n.xr.enabled=!0,n.xr.setReferenceSpaceType("local"),u.appendChild(n.domElement),e=new Gi(70,p.width/p.height,1,2e3),e.layers.enable(1),e.position.set(0,0,0),window.addEventListener("resize",function(){e.aspect=window.innerWidth/window.innerHeight,e.updateProjectionMatrix(),n.setSize(window.innerWidth,window.innerHeight)},!1),t=new GV(e,u),t.target.set(0,0,-.5),r=new ar;const m=new O4,v=new jG,y={left:null,right:null};for(let C=0;C<2;C++){const P=n.xr.getController(C),N=n.xr.getControllerGrip(C),A=v.createControllerModel(N);N.add(A),N.addEventListener("connected",w=>{P.visible=!0,N.visible=!0;const D=w.data.handedness;y[D]={gamepad:new HV(w.data.gamepad),raySpace:P,gripSpace:N,mesh:A}}),N.addEventListener("disconnected",w=>{P.visible=!1,N.visible=!1;for(const D in y)y[D]!==null&&(y[D]=null)}),r.add(P,N)}const S=new ah;S.showPanel(0),S.dom.style.maxWidth="64px",S.dom.style.minWidth="60px",S.dom.style.backgroundColor="black",document.body.appendChild(S.dom);const _=new qG(S.dom);_.position.set(-1.5,.5,-2),_.rotation.y=Math.PI/4,_.scale.setScalar(4),_.material.colorWrite=!0,_.material.transparent=!1,s=document.getElementById("video"),u.addEventListener("click",function(){s.play()}),o=JG(s,2064,2208,.09057971,0,0),u.append(Aa.div);async function g(C,P,N){P.add(r),P.add(_),Bn=null,N.initVideoLayer(!1,C,P,Bn);const A=await ZG(P,e,y,r,N);return C.setAnimationLoop(function(D,X){const z={},G=f.getDelta(),Z=f.getElapsedTime(),q=C.xr,K=C.getContext();v3=eW(y,z,Bn,v3),S.begin();const B=QG(C,e);let ie,oe;if(Bn!==null&&Bn.renderState.layers!==void 0&&Bn.hasMediaLayer===void 0&&tW&&typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype&&(console.log("Initialize media layer on currentSession:",Bn),Bn.hasMediaLayer=!0,console.log("Make gl context XR compatible: ",K.makeXRCompatible),K.makeXRCompatible().then(()=>{const V=q.getBinding();Bn.requestReferenceSpace("local-floor").then(de=>{ie=V.createQuadLayer({width:_.geometry.parameters.width,height:_.geometry.parameters.height,viewPixelWidth:_.material.map.image.width,viewPixelHeight:_.material.map.image.height,space:de,transform:new XRRigidTransform(_.position,_.quaternion)}),oe=N.initVideoLayer(!0,C,P,Bn,de),N.videoLayerInitialized=!0,Bn.updateRenderState({layers:!!Bn.renderState.layers.length>0?[oe,ie,Bn.renderState.layers[0]]:[oe,ie]})})})),Bn!==null&&ie&&(ie.needsRedraw||ie.needsUpdate)){const V=q.getBinding().getSubImage(ie,X);C.state.bindTexture(K.TEXTURE_2D,V.colorTexture),K.pixelStorei(K.UNPACK_FLIP_Y_WEBGL,!0);const de=_.material.map.image;K.texSubImage2D(K.TEXTURE_2D,0,0,0,de.width,de.height,K.RGBA,K.UNSIGNED_BYTE,de),ie.needsUpdate=!1}A(Bn,G,Z,z.hasOwnProperty("action")?z:null,null,[...B]),C.render(P,e),S.end(),_.material.map.update()}),C}async function b(C){console.log("xr",`${JSON.stringify(C)}`);let P=null;const N=typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype;try{N?P=await C.requestSession("immersive-ar",{optionalFeatures:["layers"],requiredFeatures:["local-floor"]}):P=await C.requestSession("immersive-vr",{optionalFeatures:["local-floor"]})}catch{P=await C.requestSession("immersive-vr",{optionalFeatures:["local-floor"]})}finally{return p.width=window.innerWidth,p.height=window.innerHeight,n.setSize(p.width,p.height),e.aspect=p.width/p.height,e.updateProjectionMatrix(),P.requestReferenceSpace("local").then(A=>{P.requestAnimationFrame((w,D)=>{const X=D.getViewerPose(A);if(w%3333<1)try{for(const G of X.views){const Z=XRWebGLLayer.getViewport(G);console.log({xrReferenceSpace:A,xrView:G,xrViewport:Z})}}catch(G){console.log({error:G})}})}),P}}async function E(C,P){try{await n.xr.setSession(C,P.useXRLayers)}catch(N){console.log("Error:",N)}Bn=C,Bn.config=P,Bn.addEventListener("end",T),P&&P.useXRLayers&&P.videoLayerManager&&P.videoLayerManager.clearVideoLayer(!P.useXRLayers,n,m,C),console.log("Init video layer: ",P.videoLayerManager.videoLayerInitialized),s.play()}function T(C){const P=Bn.config;console.log("Ended WebXR session!",C,P),Bn.removeEventListener("end",T),Bn=null,o.videoLayerInitialized&&P.videoLayerManager&&(console.log("Clear video layer"),P.videoLayerManager.clearVideoLayer(!0,n,m,C),console.log("Init video layer"),P.videoLayerManager.initVideoLayer(!1,n,m,C))}const L=document.createElement("button");L.className="xr-button",L.disabled=!0,L.innerHTML="Preparing...",L.addEventListener("click",async()=>{console.log("XR Button clicked"),f.getDelta(),f.getElapsedTime();let C="xr"in navigator;try{C&&(C=await navigator.xr.isSessionSupported("immersive-ar")||await navigator.xr.isSessionSupported("immersive-vr")||C)}catch(A){console.log(A.message,navigator)}if(!C){const A=new Z6(tU);A.installRuntime(),A.fovy=75/180*Math.PI,A.ipd=0,window.xrdevice=A,A.controllers.right.position.set(.15649,1.43474,-.38368),A.controllers.right.quaternion.set(.14766305685043335,.02471366710960865,-.0037767395842820406,.9887216687202454),A.controllers.left.position.set(-.15649,1.43474,-.38368),A.controllers.left.quaternion.set(.14766305685043335,.02471366710960865,-.0037767395842820406,.9887216687202454),new UV(A)}const P=typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype,N=await b(navigator.xr);await E(N,{useXRLayers:P,videoLayerManager:o}),e.position.y=0,r.position.y=e.position.y,r.position.z=e.position.z,L.innerHTML="Reload",L.onclick=function(){L.disabled=!0,window.location.reload()}}),document.body.appendChild(L),L.innerHTML="Enter XR",L.style.opacity=.75,L.disabled=!1,delete L.disabled,h.addEventListener("webglcontextlost",C=>{C.canceled=!0,console.log("webglcontextlost")}),h.addEventListener("webglcontextrestored",C=>{g(n,m,o),console.log("webglcontextrestored")}),g(n,m,o).then(C=>{console.log("WebXR has been initialized with renderer: ",C)})},533);
