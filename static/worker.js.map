{"version":3,"file":"worker.js","sources":["../src/modules/event-processor-service.js"],"sourcesContent":["import { Request } from 'node-fetch';\nimport {Observable, of} from \"rxjs\";\nimport { fromPromise } from \"rxjs/internal-compatibility\";\nimport { mergeMap, map, switchMap } from \"rxjs/operators\";\n\nvar fetched = false;\n\nfunction get(url) {\n    return fromPromise(fetch(new Request(url)))\n        .pipe(map(res =>{\n            if ((`${res.status}`).match(/^(?:[4|5])/) !== null) {\n                throw res; // abort\n            }\n            return res;\n        }))\n        .pipe(switchMap(response => {\n            if (typeof response['json'] === 'function') {\n                const res = response;\n                return fromPromise(res.json());\n            } else {\n                return response;\n            }\n        }));\n}\n\nfunction unpack (data, depth, extra = {}) {\n    const unpacked = [];\n    let group = 0;\n\n    if (Array.isArray(data)) {\n        data.forEach(d => {\n            if (Array.isArray(d) && --depth > 0) {\n                unpack(d, depth, { \"group\": ++group }).forEach(dd => unpacked.push(dd));\n            } else {\n                const event = Object.assign(Object.assign({}, extra), d);\n                unpacked.push(event);\n            }\n        });\n        return unpacked;\n\n    } else {\n        const event = Object.assign(Object.assign({}, extra), d);\n        unpacked.push(event);\n    }\n\n    console.log(unpacked.length + \" elements unpacked\");\n\n    return unpacked;\n}\n\n\n// Main\nexport let onmessage = function(evt) {\n    const position_events = [];\n    const problem_events = [];\n\n    console.log(evt.data);\n\n    if (!fetched && \"action\" in evt.data && evt.data[\"action\"].match(/event data/) !== null) {\n        console.log(\"Fetching events...\");\n\n        const eventSource = evt.data[\"payload\"][\"event-source\"];\n        // const heightmapSource = evt.data[\"payload\"][\"heightmap-source\"];\n        const planarExtent = evt.data[\"payload\"][\"planar-extent\"];\n\n        const planarWidth = (planarExtent[1][0] - planarExtent[0][0]) / 2,\n            planarDepth = (planarExtent[1][1] - planarExtent[0][1]) / 2;\n\n        // first get all of the position events,\n        // then get terrain heights to map to\n        // events by proximity of x, y\n        get(eventSource)//.pipe(\n        //     map(response => {\n        //         const data = response;\n        //\n        //         return unpack(data, 10);\n        //\n        //     }),\n        //     mergeMap(events => {\n        //\n        //         events.forEach(d => position_events.push(Object.assign({}, d)));\n        //\n        //         return get(heightmapSource);\n        //     })\n        // )\n            .subscribe({\n                // next(heights) {\n                //     console.log(heights);\n                //\n                //     console.log('Processing event and height data...');\n                //\n                //     const delay = {\n                //         time: 1\n                //     };\n                //\n                //     fetched = true;\n                //\n                //     const heightAdjustment = 0.75;\n                //\n                //     const heightOffset = 0.5;\n                //\n                //     const terrainDepth = (Array.isArray(heights) && heights.length > 0) ?\n                //         heights.length : 0;\n                //     const terrainWidth = (terrainDepth > 0 && heights[0].length > 0) ?\n                //         heights[0].length : 0;\n                //\n                //     position_events.forEach((d, i, a) => {\n                //         // delay.time += 6; // simulate slow load\n                //         setTimeout(() => {\n                //             if (\"x\" in d && \"y\" in d) try {\n                //                 // Explore sign reversal\n                //                 const x = d[\"x\"], y = d[\"y\"];\n                //                 d[\"y\"] = -x;\n                //                 d[\"x\"] = y;\n                //                 const px= d[\"x\"] + planarWidth / 2;     // shift all planar numbers to positive domain\n                //                 const py = d[\"y\"] + planarDepth / 2;    // shift all planar numbers to positive domain\n                //                 const tx = Math.floor(terrainWidth * px / planarWidth);\n                //                 const ty = Math.floor(terrainDepth * py / planarDepth);\n                //                 const height = heightOffset + heightAdjustment * heights[tx][ty]; // assign height at this index\n                //\n                //                 postMessage(Object.assign({ height }, d));\n                //             } catch (load_error) {\n                //                 problem_events.push(Object.assign({ load_error }, d));\n                //             }\n                //         }, delay.time);\n                //\n                //         if (i === (a.length - 1)) {\n                //             setTimeout(() => {\n                //                 postMessage(\"Event data processing is complete.\");\n                //                 console.log(\"Problem events (height?): \", problem_events);\n                //             }, delay.time);\n                //         }\n                //     });\n                // },\n                next(events) {\n                    console.log(events);\n\n                    unpack(events, 10).forEach((d, i, a) => {\n                        postMessage(Object.assign({}, d));\n\n                        if (i === (a.length - 1)) {\n                            postMessage(\"Event data processing is complete.\");\n                            console.log(\"Problem events (height?): \", problem_events);\n                        }\n                    });\n                },\n                error(err) { console.error(err); },\n                complete() { console.log(\"Event fetch is complete\"); }\n            });\n    }\n};\n\nexport let onmessageerror = null;\n\nexport let onerror = null;\n"],"names":["fromPromise","Request","map","switchMap"],"mappings":"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"}